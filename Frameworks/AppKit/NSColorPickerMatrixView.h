//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <AppKit/NSView.h>

@class NSColor, NSColorList, NSImage, NSTrackingArea;

__attribute__((visibility("hidden")))
@interface NSColorPickerMatrixView : NSView
{
    NSImage *_image;
    NSColorList *_colorList;
    struct CGSize _swatchSize;
    unsigned long long _numColumns;
    unsigned long long _numRows;
    unsigned long long _selectedIndex;
    NSTrackingArea *_trackArea;
    struct CGRect _trackingSwatchRect;
    id <NSColorPickerMatrixViewDelegate> _delegate;
    struct {
        unsigned int _emptyEnabled:1;
        unsigned int _hasEmptyColorCell:1;
        unsigned int _reserved:30;
    } _flags;
}

+ (BOOL)hasEmptyColorForDefaultList;
+ (id)defaultImage;
+ (id)defaultColorList;
@property id <NSColorPickerMatrixViewDelegate> delegate; // @synthesize delegate=_delegate;
@property unsigned long long numberOfColumns; // @synthesize numberOfColumns=_numColumns;
@property struct CGSize swatchSize; // @synthesize swatchSize=_swatchSize;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)_accessibilityAttributeValue:(id)arg1 forIndexedChild:(id)arg2;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)_accessibilityChildren;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (struct CGRect)rectForColorAtIndex:(unsigned long long)arg1;
- (id)colorAtIndex:(unsigned long long)arg1;
- (void)mouseDown:(id)arg1;
- (void)selectColorAtIndex:(unsigned long long)arg1;
- (unsigned long long)colorIndexAtPoint:(struct CGPoint)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)updateTrackingAreas;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
@property(getter=isEmptyColorEnabled) BOOL emptyColorEnabled; // @dynamic emptyColorEnabled;
@property(retain) NSColorList *colorList; // @synthesize colorList=_colorList;
- (unsigned long long)numberOfRows;
@property(readonly) NSColor *color; // @dynamic color;
- (void)_updateConfigs;
- (BOOL)_hasEmptyColorCell;
- (id)image;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

