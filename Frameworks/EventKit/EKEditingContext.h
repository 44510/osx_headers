//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "EKEventChangeListenerDelegate.h"

@class EKEventChangeListener, EKObjectSnapshotter, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface EKEditingContext : NSObject <EKEventChangeListenerDelegate>
{
    BOOL _deferredCommit;
    BOOL _requestedSpan;
    BOOL _isRequestingDecision;
    BOOL _didPartialSave;
    BOOL _isDeletingObjects;
    int _currentSpan;
    int _commitDecision;
    id <EKDecisionDelegate> _decisionDelegate;
    id <EKUndoDelegate> _undoDelegate;
    id <EKCommitDelegate> _commitDelegate;
    NSSet *_snapshotters;
    NSMutableDictionary *_conflictsToExcludeFromAll;
    NSMutableDictionary *_originalObjects;
    NSMutableSet *_objectsToCommit;
    NSMutableSet *_inactiveEditors;
    NSMutableSet *_activeEditors;
    EKEventChangeListener *_eventChangeListener;
    NSSet *_trackedEKObjectIDs;
    EKObjectSnapshotter *_revertSnapshotter;
}

+ (id)contextWithSnapshotters:(id)arg1 sender:(id)arg2;
+ (id)contextWithObjects:(id)arg1 sender:(id)arg2;
+ (void)reset;
+ (BOOL)editingContextsAreOpenForObject:(id)arg1;
+ (id)editingContextsForUniqueID:(id)arg1;
+ (id)openEditingContextsForObject:(id)arg1;
+ (id)editingContextForEKObjectIDSet:(id)arg1;
+ (void)closeEditingContext:(id)arg1;
+ (void)openEditingContext:(id)arg1 withObjects:(id)arg2;
+ (id)_objectIDSetForEKObjects:(id)arg1;
+ (id)uniqueIDForObject:(id)arg1;
+ (id)allCurrentlyEditedEvents;
+ (id)allOpenEditingContexts;
+ (void)initialize;
@property(retain) EKObjectSnapshotter *revertSnapshotter; // @synthesize revertSnapshotter=_revertSnapshotter;
@property(retain) NSSet *trackedEKObjectIDs; // @synthesize trackedEKObjectIDs=_trackedEKObjectIDs;
@property(retain) EKEventChangeListener *eventChangeListener; // @synthesize eventChangeListener=_eventChangeListener;
@property(retain) NSMutableSet *activeEditors; // @synthesize activeEditors=_activeEditors;
@property(retain) NSMutableSet *inactiveEditors; // @synthesize inactiveEditors=_inactiveEditors;
@property BOOL isDeletingObjects; // @synthesize isDeletingObjects=_isDeletingObjects;
@property BOOL didPartialSave; // @synthesize didPartialSave=_didPartialSave;
@property BOOL isRequestingDecision; // @synthesize isRequestingDecision=_isRequestingDecision;
@property int commitDecision; // @synthesize commitDecision=_commitDecision;
@property BOOL requestedSpan; // @synthesize requestedSpan=_requestedSpan;
@property int currentSpan; // @synthesize currentSpan=_currentSpan;
@property(retain) NSMutableSet *objectsToCommit; // @synthesize objectsToCommit=_objectsToCommit;
@property(retain) NSMutableDictionary *originalObjects; // @synthesize originalObjects=_originalObjects;
@property(retain) NSMutableDictionary *conflictsToExcludeFromAll; // @synthesize conflictsToExcludeFromAll=_conflictsToExcludeFromAll;
@property(retain) NSSet *snapshotters; // @synthesize snapshotters=_snapshotters;
@property BOOL deferredCommit; // @synthesize deferredCommit=_deferredCommit;
@property(nonatomic) __weak id <EKCommitDelegate> commitDelegate; // @synthesize commitDelegate=_commitDelegate;
@property(nonatomic) __weak id <EKUndoDelegate> undoDelegate; // @synthesize undoDelegate=_undoDelegate;
@property(nonatomic) __weak id <EKDecisionDelegate> decisionDelegate; // @synthesize decisionDelegate=_decisionDelegate;
- (void).cxx_destruct;
- (void)_addEditor:(id)arg1 active:(BOOL)arg2;
- (void)_makeAllEditorsInactive;
- (void)_removeEditor:(id)arg1;
- (id)_allEditors;
- (void)makeSenderActive:(id)arg1;
- (BOOL)shouldResetUndoStack;
- (BOOL)_commitAndShouldClose;
- (BOOL)_close:(id)arg1 andCommit:(BOOL)arg2;
- (BOOL)commit:(id)arg1;
- (BOOL)closeAndForceDontCommit:(id)arg1;
- (BOOL)closeAndForceCommit:(id)arg1;
- (BOOL)close:(id)arg1;
- (void)_resetObjects;
- (void)cancelCurrentSave;
- (void)_updateRevertStateForSnapshotter:(id)arg1;
- (void)_updateObjectsToCommitForSnapshotter:(id)arg1;
- (void)_revert;
- (id)_originalObjectForSnapshottedObject:(id)arg1;
- (void)performUndoableOperation:(id)arg1;
- (BOOL)hasChangesForSaveType:(long long)arg1;
- (id)diffSummarySinceLastSaveType:(long long)arg1 commit:(BOOL)arg2;
- (void)moveEventsToNewCalendarIfNecessary;
- (BOOL)saveActionIsDecline;
- (BOOL)saveChange:(long long)arg1 sender:(id)arg2;
- (void)revert:(id)arg1;
- (BOOL)saveCompleteChangeWithImpliedCommitDecision:(id)arg1;
- (BOOL)saveCompleteChange:(id)arg1;
- (BOOL)savePartialChange:(id)arg1;
- (int)_requestCommitDecisionIfNeededForAction:(int)arg1;
- (BOOL)_doEarlyRequestCommitDecisionAtSaveTimeForAction:(int)arg1;
- (BOOL)_doCheckForConflictsWhenAcceptingAllWithSpanDecision:(int)arg1 action:(int)arg2 diffSummary:(id)arg3;
- (BOOL)_requestSaveAndSpanDecisionIfNeededForAction:(int)arg1;
- (void)_setSpanAndMarkAsRequested:(int)arg1;
- (void)_applySpanDecision:(int)arg1;
- (void)setSpan:(int)arg1;
- (void)_setAllObjectsToDontNotify;
- (void)deleteAllObjects:(id)arg1;
- (void)addAllObjects:(id)arg1;
- (void)trackedEventsDidUpdate:(id)arg1;
- (id)trackedEvents;
- (BOOL)allObjectsAreCalendars;
- (BOOL)allObjectsAreEvents;
- (id)contextsVersionOfObject:(id)arg1;
- (id)objects;
- (void)openWithSnapshotters:(id)arg1 sender:(id)arg2;
- (void)openWithObjects:(id)arg1 sender:(id)arg2;
- (void)_removeSnapshotter:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

