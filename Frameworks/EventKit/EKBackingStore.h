//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class EKBackingObjectsTracker, EKChangeTracker, EKCreatedObjectsTracker, EKEventOccurrenceCache, EKEventStore, EKRecurrenceChangeManager, NSArray, NSDictionary, NSMutableDictionary, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSSet, NSString;

@interface EKBackingStore : NSObject
{
    BOOL _accessToRemindersRequested;
    BOOL _accessToEventsRequested;
    EKChangeTracker *_changeTracker;
    NSSet *_commitOnlyTheseObjects;
    EKCreatedObjectsTracker *_createdObjectsTracker;
    EKBackingObjectsTracker *_backingObjectsTracker;
    EKEventStore *_mainStore;
    EKEventOccurrenceCache *_occurrenceCache;
    EKRecurrenceChangeManager *_recurrenceChangeManager;
    NSObject<OS_dispatch_queue> *_backingObjectsQueue;
    NSString *_backingStoreIdentifier;
    NSMutableDictionary *_cachedNotificationBoxMessageCounts;
}

+ (id)createNonPartialFrozenObjectForPartialObject:(id)arg1 withFrozenClass:(Class)arg2;
@property(retain, nonatomic) NSMutableDictionary *cachedNotificationBoxMessageCounts; // @synthesize cachedNotificationBoxMessageCounts=_cachedNotificationBoxMessageCounts;
@property(retain, nonatomic) NSString *backingStoreIdentifier; // @synthesize backingStoreIdentifier=_backingStoreIdentifier;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *backingObjectsQueue; // @synthesize backingObjectsQueue=_backingObjectsQueue;
@property(readonly, nonatomic) EKRecurrenceChangeManager *recurrenceChangeManager; // @synthesize recurrenceChangeManager=_recurrenceChangeManager;
@property(retain, nonatomic) EKEventOccurrenceCache *occurrenceCache; // @synthesize occurrenceCache=_occurrenceCache;
@property(nonatomic) __weak EKEventStore *mainStore; // @synthesize mainStore=_mainStore;
@property(readonly, nonatomic) EKBackingObjectsTracker *backingObjectsTracker; // @synthesize backingObjectsTracker=_backingObjectsTracker;
@property(readonly, nonatomic) EKCreatedObjectsTracker *createdObjectsTracker; // @synthesize createdObjectsTracker=_createdObjectsTracker;
@property(retain, nonatomic) NSSet *commitOnlyTheseObjects; // @synthesize commitOnlyTheseObjects=_commitOnlyTheseObjects;
@property(readonly, nonatomic) EKChangeTracker *changeTracker; // @synthesize changeTracker=_changeTracker;
@property(nonatomic) BOOL accessToEventsRequested; // @synthesize accessToEventsRequested=_accessToEventsRequested;
@property(nonatomic) BOOL accessToRemindersRequested; // @synthesize accessToRemindersRequested=_accessToRemindersRequested;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *sourceErrors;
- (void)_reminderBecameOverdue:(id)arg1;
- (void)_reminderAlertFired:(id)arg1;
- (void)_notifyErrorStateChanged;
- (void)_notifyChangedCalendarSource:(BOOL)arg1 changedCalendarSourceIdentifiers:(id)arg2 calendar:(BOOL)arg3 changedCalendarIdentifiers:(id)arg4 reminder:(BOOL)arg5 changedReminderIdentifiers:(id)arg6 event:(BOOL)arg7 changedEventIdentifiers:(id)arg8 otherChanges:(id)arg9;
- (void)_notifyChangedCalendarSource:(BOOL)arg1 changedCalendarSourceIdentifiers:(id)arg2 calendar:(BOOL)arg3 changedCalendarIdentifiers:(id)arg4 reminder:(BOOL)arg5 changedReminderIdentifiers:(id)arg6 event:(BOOL)arg7 changedEventIdentifiers:(id)arg8;
- (void)_notifyChangedOccurrence:(id)arg1;
- (void)refreshSources;
- (void)_refreshSourcesWithObjectIDs:(id)arg1 createPartialObjects:(BOOL)arg2 inQueue:(id)arg3;
- (void)_refreshCalendarsWithObjectIDs:(id)arg1 createPartialObjects:(BOOL)arg2 inQueue:(id)arg3;
- (void)refreshSourcesWithObjectIDs:(id)arg1 createPartialObjects:(BOOL)arg2;
- (void)refreshSourcesWithObjectIDs:(id)arg1;
- (void)refreshCalendarsWithObjectIDs:(id)arg1 createPartialObjects:(BOOL)arg2;
- (void)refreshCalendarsWithObjectIDs:(id)arg1;
- (void)_refreshCalendarItemsWithObjectIDs:(id)arg1 createPartialObjects:(BOOL)arg2 inQueue:(id)arg3;
- (void)refreshCalendarItemsWithObjectIDs:(id)arg1 createPartialObjects:(BOOL)arg2;
- (void)refreshCalendarItemsWithObjectIDs:(id)arg1;
- (void)refreshBackingStore;
- (BOOL)rollbackObjectToSaved:(id)arg1;
- (BOOL)resetObject:(id)arg1;
- (void)rollbackObject:(id)arg1 unbatchedOnly:(BOOL)arg2;
- (void)rollbackObject:(id)arg1;
- (BOOL)_rollbackObjectToSaved:(id)arg1 inQueue:(id)arg2;
- (BOOL)resetObject:(id)arg1 inQueue:(id)arg2;
- (BOOL)refreshObject:(id)arg1 inQueue:(id)arg2;
- (BOOL)refreshObject:(id)arg1;
- (long long)notificationBoxMessageCountForCalendar:(id)arg1 allowCachedValue:(BOOL)arg2;
- (long long)notificationBoxMessageCountForCalendar:(id)arg1;
- (id)errorForSource:(id)arg1;
- (id)errorForCalendar:(id)arg1;
- (id)createNonPartialObjectAndUpdateBackingObjectsTrackerForPartialObject:(id)arg1 withMeltedClass:(Class)arg2;
- (id)createNonPartialFrozenObjectAndUpdateBackingObjectsTrackerForPartialObject:(id)arg1 withFrozenClass:(Class)arg2;
- (void)_updateBackingSource:(id)arg1 createdObjects:(id)arg2 changedLocalIDs:(id)arg3 wrappedVersionBlock:(CDUnknownBlockType)arg4 lookupChangedBlock:(CDUnknownBlockType)arg5 updateCreatedBackingObjectBlock:(CDUnknownBlockType)arg6 updateChangedBackingObjectBlock:(CDUnknownBlockType)arg7 updateDeletedBackingObjectBlock:(CDUnknownBlockType)arg8 inContext:(id)arg9;
- (BOOL)_updateChangedAndDeletedSourcesWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id *)arg3 prepareForChangesBlock:(CDUnknownBlockType)arg4 applyChangeBlock:(CDUnknownBlockType)arg5 deleteManagedObjectBlock:(CDUnknownBlockType)arg6 changedLocalIDs:(id)arg7 locallyChangedIdentifiers:(id)arg8;
- (BOOL)_updateCreatedSourcesWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id *)arg3 createNewManagedObjectBlock:(CDUnknownBlockType)arg4 prepareForChangesBlock:(CDUnknownBlockType)arg5 applyChangeBlock:(CDUnknownBlockType)arg6 locallyChangedIdentifiers:(id)arg7;
- (BOOL)_updateSourcesWithContext:(id)arg1 error:(id *)arg2 createNewManagedObjectBlock:(CDUnknownBlockType)arg3 prepareForChangesBlock:(CDUnknownBlockType)arg4 applyChangeBlock:(CDUnknownBlockType)arg5 deleteManagedObjectBlock:(CDUnknownBlockType)arg6 wrappedVersionBlock:(CDUnknownBlockType)arg7 lookupChangedBlock:(CDUnknownBlockType)arg8 updateCreatedBackingObjectBlock:(CDUnknownBlockType)arg9 updateChangedBackingObjectBlock:(CDUnknownBlockType)arg10 updateDeletedBackingObjectBlock:(CDUnknownBlockType)arg11 changedIdentifiers:(id *)arg12;
- (CDUnknownBlockType)updateDeletedCalendarSourceBlock;
- (CDUnknownBlockType)updateChangedCalendarSourceBlock;
- (CDUnknownBlockType)updateCreatedCalendarSourceBlock;
- (CDUnknownBlockType)lookupChangedCalendarSourceBlock;
- (CDUnknownBlockType)frozenCalendarSource;
- (CDUnknownBlockType)deleteManagedGroupBlock;
- (CDUnknownBlockType)applyChangeToManagedGroupBlockWithError:(id *)arg1;
- (CDUnknownBlockType)prepareForManagedGroupChangesBlock;
- (CDUnknownBlockType)createNewManagedGroupBlockWithContext:(id)arg1 error:(id *)arg2;
- (BOOL)_finishBatchSourcesWithChangedIdentifiers:(id *)arg1 error:(id *)arg2 managedObjectContext:(id)arg3;
- (BOOL)_updateChangedAndDeletedCalendarsWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id *)arg3 prepareForChangesBlock:(CDUnknownBlockType)arg4 applyChangeBlock:(CDUnknownBlockType)arg5 deleteManagedObjectBlock:(CDUnknownBlockType)arg6 changedLocalIDs:(id)arg7 locallyChangedIdentifiers:(id)arg8;
- (BOOL)_updateCreatedCalendarsWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id *)arg3 createNewManagedObjectBlock:(CDUnknownBlockType)arg4 prepareForChangesBlock:(CDUnknownBlockType)arg5 applyChangeBlock:(CDUnknownBlockType)arg6 locallyChangedIdentifiers:(id)arg7;
- (BOOL)_updateCalendarsWithContext:(id)arg1 error:(id *)arg2 createNewManagedObjectBlock:(CDUnknownBlockType)arg3 prepareForChangesBlock:(CDUnknownBlockType)arg4 applyChangeBlock:(CDUnknownBlockType)arg5 deleteManagedObjectBlock:(CDUnknownBlockType)arg6 wrappedVersionBlock:(CDUnknownBlockType)arg7 lookupChangedBlock:(CDUnknownBlockType)arg8 updateCreatedBackingObjectBlock:(CDUnknownBlockType)arg9 updateChangedBackingObjectBlock:(CDUnknownBlockType)arg10 updateDeletedBackingObjectBlock:(CDUnknownBlockType)arg11 changedIdentifiers:(id *)arg12;
- (CDUnknownBlockType)updateDeletedCalendarsBlock;
- (CDUnknownBlockType)updateChangedCalendarBlock;
- (CDUnknownBlockType)updateCreatedCalendarsBlock;
- (CDUnknownBlockType)lookupChangedCalendarBlock;
- (CDUnknownBlockType)frozenCalendarBlock;
- (CDUnknownBlockType)deleteManagedCalendarBlock;
- (CDUnknownBlockType)applyChangeToManagedCalendarBlockWithError:(id *)arg1;
- (CDUnknownBlockType)prepareForManagedCalendarChangesBlock;
- (CDUnknownBlockType)createNewManagedCalendarBlockWithContext:(id)arg1 error:(id *)arg2;
- (BOOL)_finishBatchCalendarsWithChangedIdentifiers:(id *)arg1 error:(id *)arg2 managedObjectContext:(id)arg3;
- (BOOL)_updateRecurrenceExceptionsInContext:(id)arg1 error:(id *)arg2;
- (BOOL)_updateChangedAndDeletedItemsWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id *)arg3 prepareForChangesBlock:(CDUnknownBlockType)arg4 applyChangeBlock:(CDUnknownBlockType)arg5 deleteManagedObjectBlock:(CDUnknownBlockType)arg6 changedLocalIDs:(id)arg7 locallyChangedIdentifiers:(id)arg8;
- (BOOL)_updateCreatedItemsWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id *)arg3 createNewManagedObjectBlock:(CDUnknownBlockType)arg4 prepareForChangesBlock:(CDUnknownBlockType)arg5 applyChangeBlock:(CDUnknownBlockType)arg6 locallyChangedIdentifiers:(id)arg7;
- (BOOL)_updateItemsWithContext:(id)arg1 error:(id *)arg2 createNewManagedObjectBlock:(CDUnknownBlockType)arg3 prepareForChangesBlock:(CDUnknownBlockType)arg4 applyChangeBlock:(CDUnknownBlockType)arg5 deleteManagedObjectBlock:(CDUnknownBlockType)arg6 wrappedVersionBlock:(CDUnknownBlockType)arg7 lookupChangedBlock:(CDUnknownBlockType)arg8 updateCreatedBackingObjectBlock:(CDUnknownBlockType)arg9 updateChangedBackingObjectBlock:(CDUnknownBlockType)arg10 updateDeletedBackingObjectBlock:(CDUnknownBlockType)arg11 changedIdentifiers:(id *)arg12;
- (CDUnknownBlockType)updateDeletedItemsBlock;
- (CDUnknownBlockType)updateChangedItemBlock;
- (CDUnknownBlockType)updateCreatedItemsBlock;
- (CDUnknownBlockType)lookupChangedItemBlock;
- (CDUnknownBlockType)frozenItemBlock;
- (CDUnknownBlockType)deleteManagedItemBlock;
- (CDUnknownBlockType)applyChangeToManagedItemBlockWithError:(id *)arg1;
- (CDUnknownBlockType)prepareForManagedItemChangesBlock;
- (CDUnknownBlockType)createNewManagedItemBlockWithContext:(id)arg1 error:(id *)arg2;
- (BOOL)_finishBatchCalendarItemsWithChangedIdentifiers:(id *)arg1 error:(id *)arg2 managedObjectContext:(id)arg3;
- (id)_calendarsRequiringNotificationBoxMessageCountCacheUpdate;
- (BOOL)_cleanUpAfterBatchWithError:(id *)arg1 managedObjectContext:(id)arg2;
- (void)_clearCachedNotificationBoxMessageCountsBehindDispatchQueue:(id)arg1;
- (BOOL)_finishBatch:(id *)arg1 onlyCommitObjects:(id)arg2 managedObjectContext:(id)arg3;
- (BOOL)finishBatch:(id *)arg1 onlyCommitObjects:(id)arg2;
- (BOOL)finishBatch:(id *)arg1;
- (BOOL)shouldCommitObjectWithIdentifier:(id)arg1;
- (void)unbatchExcept:(id)arg1;
- (void)unbatchDetach:(id)arg1;
- (void)unbatchDeleteFuture:(id)arg1 originalMaster:(id)arg2 originalExceptions:(id)arg3 originalDetachedEvents:(id)arg4;
- (void)unbatchChangeFuture:(id)arg1 fromDate:(id)arg2 originalMaster:(id)arg3 originalExceptions:(id)arg4 originalDetachedEvents:(id)arg5;
- (BOOL)_batchChangeCalendarSource:(id)arg1 isNewSource:(BOOL)arg2 error:(id *)arg3;
- (BOOL)_batchChangeCalendar:(id)arg1 isNewCalendar:(BOOL)arg2 error:(id *)arg3;
- (void)_propagateChangesToDetachedForMaster:(id)arg1;
- (BOOL)_handleChangesThatOnlyApplyToMasterForItem:(id)arg1 success:(char *)arg2 error:(id *)arg3;
- (BOOL)_batchChange:(id)arg1 appliesToMaster:(BOOL)arg2 isNewItem:(BOOL)arg3 error:(id *)arg4;
- (BOOL)_batchDelete:(id)arg1 deleteFuture:(BOOL)arg2 error:(id *)arg3;
- (BOOL)batchDeleteSource:(id)arg1 error:(id *)arg2;
- (BOOL)batchDeleteCalendar:(id)arg1 error:(id *)arg2;
- (BOOL)batchDeleteCalendar:(id)arg1 queue:(id)arg2 error:(id *)arg3;
- (BOOL)batchChangeSource:(id)arg1 error:(id *)arg2;
- (BOOL)batchChangeCalendar:(id)arg1 error:(id *)arg2;
- (BOOL)batchDeleteFuture:(id)arg1 error:(id *)arg2;
- (BOOL)batchDelete:(id)arg1 error:(id *)arg2;
- (BOOL)batchChangeFuture:(id)arg1 error:(id *)arg2;
- (BOOL)batchChange:(id)arg1 error:(id *)arg2;
- (BOOL)_objectIsDeletedForIdentifier:(id)arg1 inQueue:(id)arg2 checkExceptions:(id)arg3;
- (BOOL)_objectIsDeletedForIdentifier:(id)arg1 inQueue:(id)arg2;
- (BOOL)isObjectDeletedForIdentifier:(id)arg1 checkExceptions:(id)arg2;
- (BOOL)isObjectDeletedForIdentifier:(id)arg1;
- (id)_diffFromCommittedEvent:(id)arg1 inQueue:(id)arg2;
- (BOOL)_eventIsDeletedDetached:(id)arg1 inQueue:(id)arg2;
- (BOOL)_eventIsUnexcepted:(id)arg1 inQueue:(id)arg2;
- (BOOL)_eventIsUndetached:(id)arg1 inQueue:(id)arg2;
- (id)diffFromCommittedEventForEvent:(id)arg1;
- (BOOL)isEventDeletedDetached:(id)arg1;
- (BOOL)isEventUnexcepted:(id)arg1;
- (BOOL)isEventUndetached:(id)arg1;
- (id)exceptionsForLocalUID:(id)arg1;
- (id)detachedEventsForLocalUID:(id)arg1;
- (void)_removeDetachedEvent:(id)arg1 forLocalUID:(id)arg2;
- (void)_addDetachedEvent:(id)arg1 forLocalUID:(id)arg2;
- (void)_removeExceptionDate:(id)arg1 forLocalUID:(id)arg2;
- (void)_addExceptionDate:(id)arg1 forLocalUID:(id)arg2;
- (void)addDetachedEvents:(id)arg1 andExceptions:(id)arg2 toEvent:(id)arg3;
- (id)_changedSourceForIdentifier:(id)arg1;
- (id)_sourceForCalendarSource:(id)arg1;
- (id)sourceWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *allSources;
@property(nonatomic) id <EKProtocolCalendar> defaultCalendarForNewReminders;
@property(nonatomic) id <EKProtocolCalendar> defaultCalendarForNewEvents;
- (id)_frozenCalendarWithUpdatedSourceForCalendar:(id)arg1;
- (id)_calendarForCalendar:(id)arg1;
@property(readonly, nonatomic) NSArray *allReminderCalendars;
@property(readonly, nonatomic) NSArray *allEventCalendars;
@property(readonly, nonatomic) NSArray *allCalendars;
- (id)_allReminderCalendarsInQueue:(id)arg1;
- (id)_allEventCalendarsInQueue:(id)arg1;
- (id)_allCalendarsInQueue:(id)arg1;
- (id)_allCalendarsInQueue:(id)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)_changedCalendarForIdentifier:(id)arg1;
- (id)_calendarWithIdentifier:(id)arg1;
- (id)updatedCalendarForContainer:(id)arg1;
- (id)calendarWithIdentifier:(id)arg1;
- (BOOL)eventsMarkedScheduleAgentClientExistOnCalendar:(id)arg1;
- (id)_allCalendarKeys;
- (id)expandAndCachePredicate:(id)arg1;
- (id)_expandEventRangePredicate:(id)arg1;
- (BOOL)canCachePredicate:(id)arg1;
- (id)_expandEventsRange:(id)arg1 masterEvents:(id)arg2;
- (id)_occurrencesForEvent:(id)arg1 inRange:(id)arg2 inQueue:(id)arg3;
- (id)occurrencesForEvent:(id)arg1 inRange:(id)arg2;
- (id)_expandedOccurrencesForEvent:(id)arg1 range:(id)arg2;
- (id)_expandRecurrencesForExternalIdentifier:(id)arg1 deleteCheckQueue:(id)arg2 externalIdentifierLookupBlock:(CDUnknownBlockType)arg3 identifierLookupBlock:(CDUnknownBlockType)arg4;
- (id)_expandRecurrencesForIdentifiers:(id)arg1 deleteCheckQueue:(id)arg2 lookupBlock:(CDUnknownBlockType)arg3;
- (id)_expandRecurrenceForIdentifier:(id)arg1 deleteCheckQueue:(id)arg2 lookupBlock:(CDUnknownBlockType)arg3;
- (id)_expandEvent:(id)arg1 recurrenceDate:(id)arg2 prepopulatedExceptions:(id)arg3;
- (id)_expandEvent:(id)arg1 recurrenceDate:(id)arg2;
- (BOOL)futureScheduledEventsExistOnCalendar:(id)arg1;
- (BOOL)eventsExistOnCalendar:(id)arg1;
- (id)occurrencesWithExternalIdentifier:(id)arg1 ofType:(unsigned long long)arg2;
- (id)_lookupOccurrencesWithIdentifiers:(id)arg1 type:(unsigned long long)arg2;
- (id)_lookupOccurrenceWithIdentifier:(id)arg1 type:(unsigned long long)arg2;
- (id)occurrencesWithIdentifiers:(id)arg1;
- (id)occurrenceWithIdentifier:(id)arg1;
- (id)_eventForOccurrence:(id)arg1;
- (id)_reminderForOccurrence:(id)arg1;
- (id)_frozenItemWithUpdatedCalendarForOccurrence:(id)arg1;
- (id)_changedItemForOccurrence:(id)arg1;
- (id)remindersWithIsCompleted:(BOOL)arg1 maxResults:(unsigned long long)arg2 withCalendarIdentifiers:(id)arg3;
- (id)remindersWithIsCompleted:(BOOL)arg1 maxResults:(unsigned long long)arg2;
- (id)remindersWithDueDatesInRange:(id)arg1 withCalendarIdentifiers:(id)arg2 withCompletion:(id)arg3;
- (id)remindersWithDueDates;
- (id)_occurrencesForCompletionLookup;
- (id)_eventsWithCalendarIdentifiers:(id)arg1;
- (id)_remindersWithCalendarIdentifiers:(id)arg1;
- (id)remindersWithCalendarIdentifiers:(id)arg1;
- (id)_occurrencesWithCalendarIdentifiers:(id)arg1;
- (id)updatedCalendarItemForOccurrence:(id)arg1;
- (id)_occurrenceWithIdentifier:(id)arg1;
- (id)_masterEventForUID:(id)arg1 inQueue:(id)arg2;
- (id)masterEventForUID:(id)arg1;
- (id)_calendarItemForLocalUID:(id)arg1;
- (id)_baseOccurrenceWithLocalUID:(id)arg1;
- (id)_allCachedMasters;
- (id)_allCachedOccurrences;
- (id)_allOccurrenceKeys;
- (id)allOccurrences;
@property(readonly, nonatomic) NSSet *allReminders;
@property(readonly, nonatomic) NSSet *allEvents;
- (void)_logIfNoAccessRequested;
- (BOOL)_interestedInAndAuthorizedForEntityType:(unsigned long long)arg1;
- (void)pruneCacheForRange:(id)arg1 localUIDs:(id)arg2;
- (void)_emptyCache;
- (id)cachedRange;
- (void)resetCache;
@property(readonly, nonatomic) NSArray *sourceFilters;
@property(readonly, nonatomic) BOOL includeEnabledDelegates;
- (void)_updateFromBackingStore:(id)arg1;
- (id)_copyForBackgroundUpdate;
@property(readonly, nonatomic) NSObject<OS_dispatch_group> *backingStoreAvailableGroup;
- (id)initWithSourceFilters:(id)arg1 includeEnabledDelegates:(BOOL)arg2 orWithExistingStore:(id)arg3;
- (id)initWithBackingStore:(id)arg1;
- (id)initWithSourceFilters:(id)arg1 includeEnabledDelegates:(BOOL)arg2;
- (id)init;

@end

