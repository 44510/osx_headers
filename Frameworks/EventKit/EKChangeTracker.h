//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class CalDefaultDictionary, EKBackingStore, NSMutableArray, NSMutableDictionary, NSMutableSet;

@interface EKChangeTracker : NSObject
{
    EKBackingStore *_backingStore;
    NSMutableDictionary *_changes;
    NSMutableDictionary *_relationChanges;
    NSMutableArray *_batchedChangedObjects;
    NSMutableArray *_batchedDeletedObjects;
    NSMutableSet *_batchedDeletedFutureObjects;
    CalDefaultDictionary *_batchedDeletedExceptionDates;
    CalDefaultDictionary *_batchedUndetachedEvents;
}

@property(retain, nonatomic) CalDefaultDictionary *batchedUndetachedEvents; // @synthesize batchedUndetachedEvents=_batchedUndetachedEvents;
@property(retain, nonatomic) CalDefaultDictionary *batchedDeletedExceptionDates; // @synthesize batchedDeletedExceptionDates=_batchedDeletedExceptionDates;
@property(retain, nonatomic) NSMutableSet *batchedDeletedFutureObjects; // @synthesize batchedDeletedFutureObjects=_batchedDeletedFutureObjects;
@property(retain, nonatomic) NSMutableArray *batchedDeletedObjects; // @synthesize batchedDeletedObjects=_batchedDeletedObjects;
@property(retain, nonatomic) NSMutableArray *batchedChangedObjects; // @synthesize batchedChangedObjects=_batchedChangedObjects;
@property(retain, nonatomic) NSMutableDictionary *relationChanges; // @synthesize relationChanges=_relationChanges;
@property(retain, nonatomic) NSMutableDictionary *changes; // @synthesize changes=_changes;
@property(nonatomic) __weak EKBackingStore *backingStore; // @synthesize backingStore=_backingStore;
- (void).cxx_destruct;
- (void)_emptySets;
- (void)_commitTrackedChangesForObject:(id)arg1;
- (void)_cleanBatchedObjectsWithBackingTracker:(id)arg1;
- (void)_cleanCalendarsToItemMappingWithBackingTracker:(id)arg1;
- (void)cleanBatchedChangesWithBackingTracker:(id)arg1;
- (id)changedIdentifiersFromBackingSource:(id)arg1;
- (id)relationChangesForIdentifier:(id)arg1;
- (id)changesForIdentifier:(id)arg1;
- (BOOL)objectWithIdentifierHasChanges:(id)arg1;
- (BOOL)objectWithIdentifierIsFuturedDeleted:(id)arg1;
- (BOOL)objectWithIdentifierAndFutureAreDeleted:(id)arg1;
- (BOOL)objectWithIdentifierIsDeleted:(id)arg1;
- (id)deletedExceptionDateAndUndetachedEventIdentifiers;
- (id)undetachedEventIdentifiers;
- (id)deletedExceptionDateIdentifiers;
- (BOOL)deletedExceptionOrUndetachedEventForIdentifier:(id)arg1;
- (BOOL)eventWithIdentifierIsUndetached:(id)arg1;
- (BOOL)exceptionDateWithIdentifierIsDeleted:(id)arg1;
- (id)undetachedEventsForIdentifier:(id)arg1;
- (id)deletedExceptionDatesForIdentifier:(id)arg1;
- (void)redetachEventWithIdentifier:(id)arg1;
- (void)undetachEventWithIdentifier:(id)arg1;
- (void)clearExceptionDateWithIdentifier:(id)arg1;
- (void)deleteExceptionDateWithIdentifier:(id)arg1;
- (void)addExceptionDateWithIdentifier:(id)arg1;
- (id)exceptionDatesForIdentifier:(id)arg1;
- (id)changedObjectIdentifiers;
- (void)removeChangesForIdentifier:(id)arg1;
- (BOOL)applyBatchedChangesToObject:(id)arg1 forIdentifier:(id)arg2;
- (void)noteChangedObject:(id)arg1;
- (BOOL)_applyChanges:(id)arg1 forIdentifier:(id)arg2 forRelationKey:(id)arg3 forRelationObjectIdentifier:(id)arg4 isRelationChange:(BOOL)arg5;
- (BOOL)_applyRelationChanges:(id)arg1 forIdentifier:(id)arg2 forRelationKey:(id)arg3 forRelationObjectIdentifier:(id)arg4;
- (BOOL)_applyRelationChanges:(id)arg1 forIdentifier:(id)arg2 forRelationKey:(id)arg3;
- (BOOL)_applyMultiRelationChanges:(id)arg1 forIdentifier:(id)arg2 forRelationKey:(id)arg3 forRelationObjectIdentifier:(id)arg4;
- (BOOL)_applyRelationChangesFromItem:(id)arg1 toItem:(id)arg2 forIdentifier:(id)arg3;
- (BOOL)_applyChanges:(id)arg1 forIdentifier:(id)arg2;
- (BOOL)applyChangesToItem:(id)arg1 forIdentifier:(id)arg2 fromItem:(id)arg3;
- (BOOL)applyChangesToItem:(id)arg1 forIdentifier:(id)arg2;
- (BOOL)applyChangesToCalendarSource:(id)arg1;
- (BOOL)applyChangesToCalendar:(id)arg1;
- (void)_noteDeleteObject:(id)arg1;
- (void)noteDeleteMasterObject:(id)arg1;
- (void)noteDeleteObject:(id)arg1 thisAndFuture:(BOOL)arg2;
- (void)noteDeleteObject:(id)arg1;
- (id)copyForBackingStore:(id)arg1;
- (id)initWithBackingStore:(id)arg1;

@end

