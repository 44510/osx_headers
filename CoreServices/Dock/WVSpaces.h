//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "DOCKGestureHandler.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_xpc_object>, NSString, WVDisplaySpaces, WVSpace;

@interface WVSpaces : NSObject <DOCKGestureHandler>
{
    NSObject<OS_dispatch_queue> *_preferenceQueue;
    NSMutableDictionary *_appToSpaceTable;
    NSMutableArray *_displaySpaces;
    BOOL _bringSpacesToCurrentSpace;
    WVSpace *_lastSpace;
    WVDisplaySpaces *_dashboardDisplay;
    NSObject<OS_xpc_object> *_fs_connection;
    _Bool _needToUpdateSpaces;
    _Bool _needToUpdateDesktopPicture;
    _Bool _logSpaceSwitchNotifications;
}

@property(nonatomic) BOOL bringSpacesToCurrentSpace; // @synthesize bringSpacesToCurrentSpace=_bringSpacesToCurrentSpace;
- (void).cxx_destruct;
- (id)_bindingForUUID:(id)arg1;
- (void)_windowOrderedOutOnNonVisibleSpaceNotification:(id)arg1;
- (void)_windowOrderedInOnNonVisisbleSpaceNotification:(id)arg1;
- (struct CPSProcessSerNum)topPSNFromWindows:(id)arg1 ofSpace:(id)arg2 display:(unsigned int)arg3;
- (struct CPSProcessSerNum)setCurrentPSNandFocus:(id)arg1 forSpace:(id)arg2 display:(unsigned int)arg3;
- (id)fadeInFloaterForPSN:(struct CPSProcessSerNum)arg1 onSpace:(id)arg2 display:(unsigned int)arg3;
- (void)addDelayedSpaceChangeForAllDisplays:(CDUnknownBlockType)arg1;
- (void)performDelayedSpaceChanges;
- (void)_registerAppTableWithWindowServer;
- (void)_updateApplicationWorkspace;
- (id)_bindingIdentifierForAppInfo:(id)arg1;
- (void)_saveSpacesToDisk;
- (void)_initializeFullscreen;
- (void)_initializeSpaces:(id)arg1 dashboardEnabledState:(int)arg2;
- (void)prepareWindowForMinMax:(unsigned int)arg1 duration:(double)arg2;
- (unsigned int)displayIDForSpace:(id)arg1;
- (_Bool)moveSpace:(id)arg1 afterSpace:(id)arg2 onDisplay:(unsigned int)arg3;
- (_Bool)isFluidGesturing;
- (void)fluidGestureProgress:(id)arg1;
- (void)fluidGestureEnd:(id)arg1;
- (_Bool)fluidGestureStart:(id)arg1;
- (void)_msgWindowDidResize:(id)arg1 dictionary:(id)arg2;
- (void)_msgUpdateSpace:(id)arg1 dictionary:(id)arg2;
- (void)_msgRemovePidForDashboard:(id)arg1 dictionary:(id)arg2;
- (void)_msgAddPidForDashboard:(id)arg1 dictionary:(id)arg2;
- (void)_msgActivateNoWindowsInFullscreenSpace:(id)arg1 dictionary:(id)arg2;
- (void)_msgSetRestoreState:(id)arg1 dictionary:(id)arg2;
- (void)_msgRemoveFullscreenSpace:(id)arg1 dictionary:(id)arg2;
- (void)_msgAssociatePids:(id)arg1 dictionary:(id)arg2;
- (void)_msgCreateFullscreenSpace:(id)arg1 dictionary:(id)arg2;
- (void)_msgSetNameOfFullscreen:(id)arg1 dictionary:(id)arg2;
- (void)_msgTakeWindowToNewSpace:(id)arg1 dictionary:(id)arg2;
- (void)_msgLeaveFullscreen:(id)arg1 dictionary:(id)arg2;
- (void)_msgTakeFullscreen:(id)arg1 dictionary:(id)arg2;
- (void)_acceptConnection:(id)arg1;
- (void)appOrderedFrontWithNoWindows:(int)arg1;
- (void)applicationDied:(int)arg1;
- (unsigned long long)displayIndexForUserSpace:(id)arg1;
- (void)messageTraceBindings;
- (id)infoForBindingMenu:(id)arg1;
- (void)spaceDisplayFinishedAnimating;
- (void)handleDisplayReconfig;
- (void)removeUserSpace:(id)arg1;
- (id)addUserSpaceForDisplay:(unsigned int)arg1;
- (_Bool)canAddUserSpaceForDisplay:(unsigned int)arg1;
- (void)setBinding:(id)arg1 forBundleID:(id)arg2;
- (id)bindingForBundleID:(id)arg1;
- (void)dashboardPIDRemoved:(int)arg1;
- (void)dashboardPIDAdded:(int)arg1;
- (void)enableDashboardSpace:(id)arg1;
- (void)disableDashboardSpace;
- (id)currentSpaceOfDisplayThatContainsWindow:(unsigned int)arg1;
- (_Bool)displayHasMutltipleUserSpaces:(unsigned int)arg1;
- (id)userSpacesForDisplayID:(unsigned int)arg1;
- (id)spacesForDisplayID:(unsigned int)arg1;
- (id)spacesForDisplay:(id)arg1;
- (unsigned int)displayForSPID:(unsigned long long)arg1;
- (id)userSpaceAtIndex:(unsigned long long)arg1;
- (id)firstUserSpaceForDisplayUUID:(id)arg1;
- (id)firstUserSpaceForDisplay:(unsigned int)arg1;
- (id)currentSpaceforDisplayUUID:(id)arg1;
- (id)currentSpaceForDisplay:(unsigned int)arg1;
- (id)spaceWithUUID:(id)arg1;
- (void)setCurrentSpace:(id)arg1;
- (struct CGRect)rectForOffscreenWindow:(struct CGRect)arg1 space:(id)arg2 displaySize:(struct CGSize)arg3;
- (BOOL)switchToSpaceForApplicationLaunch:(id)arg1 psn:(struct CPSProcessSerNum)arg2;
- (_Bool)switchToNextSpaceForApplication:(struct CPSProcessSerNum)arg1;
- (void)toggleDashboardSpace:(_Bool)arg1;
- (BOOL)switchToUserSpace:(unsigned long long)arg1;
- (BOOL)switchToNextSpace:(BOOL)arg1;
- (BOOL)switchToPreviousSpace:(BOOL)arg1;
- (void)switchToLastSpace:(id)arg1;
- (void)switchForWindowDragFromKeyboard:(BOOL)arg1;
- (void)switchForWindowDrag:(BOOL)arg1;
@property(readonly, nonatomic) unsigned int messageTraceSpaceCount; // @dynamic messageTraceSpaceCount;
@property(readonly, nonatomic) _Bool multipleDisplays; // @dynamic multipleDisplays;
@property(readonly, nonatomic) NSString *detailedDescription;
@property(readonly, nonatomic) NSArray *displays; // @dynamic displays;
@property(readonly, nonatomic) NSArray *allSpaces; // @dynamic allSpaces;
@property(readonly, nonatomic) NSArray *allUserSpaces; // @dynamic allUserSpaces;
@property(readonly, nonatomic) BOOL dashboardIsCurrentOnSomeDisplay; // @dynamic dashboardIsCurrentOnSomeDisplay;
@property(readonly, nonatomic) _Bool anySwitchingOccuring; // @dynamic anySwitchingOccuring;
@property(readonly, nonatomic) unsigned int dashboardDisplay; // @dynamic dashboardDisplay;
@property(readonly, nonatomic) WVSpace *dashboardSpace; // @dynamic dashboardSpace;
@property(readonly, nonatomic) NSArray *currentSpaces; // @dynamic currentSpaces;
- (id)initWithDashboardEnabledState:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

