//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CNAWindowController.h"

#import "CNARequestProbeResult.h"

@class CNARequest, NSButton;

@interface CNAController : CNAWindowController <CNARequestProbeResult>
{
    NSButton *_lockButton;
    unsigned int _cookie;
    unsigned int _resultType;
    CNARequest *_request;
    BOOL _openNetworkFound;
}

@property unsigned int cookie; // @synthesize cookie=_cookie;
- (void)dealloc;
- (void)awakeFromNib;
- (id)firstResponder;
- (void)goForward;
- (void)goBack;
- (void)cancel;
- (void)probeFailed:(id)arg1 result:(int)arg2;
- (void)openNetworkFound:(id)arg1;
- (void)loadRequest:(id)arg1;
- (void)_updateWindowTitle;
- (void)_setupWindow;
- (void)_prepareProbeWithRequest:(id)arg1;
- (void)_initiateProbeForRequest;
- (void)_reportURLError:(id)arg1 forDataSource:(id)arg2;
- (void)_reportCertificateError:(id)arg1 forDataSource:(id)arg2;
- (void)_errorAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_certificateTrustSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (BOOL)_shouldAskAboutInsecureFormSubmission:(id)arg1 forURL:(id)arg2;
- (void)_informUserOfInsecureFormSubmissionOnWindow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_updateLockButtonForDataSource:(id)arg1;
- (void)_showCertificateSheet:(id)arg1;
- (void)_setupLockButton;
- (void)_certificateSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)_leafCertificateForTrust:(struct __SecTrust *)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 setFrame:(struct CGRect)arg2;
- (id)webView:(id)arg1 createWebViewWithRequest:(id)arg2;

@end

