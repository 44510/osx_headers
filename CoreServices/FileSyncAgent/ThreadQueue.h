//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSMutableArray, NSString, ThreadJob;

@interface ThreadQueue : NSObject
{
    struct _opaque_pthread_attr_t *_threadAttrib;
    int _idleTimeToLive;
    NSMutableArray *_readyJobs;
    NSMutableArray *_blockedJobs;
    NSString *_queueName;
    BOOL _sortReadyJobs;
    struct _opaque_pthread_t *_thread;
    struct _opaque_pthread_mutex_t _mutex;
    struct _opaque_pthread_cond_t _request;
    struct _opaque_pthread_mutex_t _stopMutex;
    struct _opaque_pthread_cond_t _stopping;
    BOOL _stop;
    BOOL _threadExists;
    BOOL _boundToExistingThread;
    BOOL _running;
    ThreadJob *_currentJob;
}

+ (id)newWithCurrentThread;
+ (id)newWithPThreadAttributes:(const struct _opaque_pthread_attr_t *)arg1 queueName:(id)arg2;
@property(retain, nonatomic) NSString *queueName; // @synthesize queueName=_queueName;
@property(nonatomic) int idleTimeToLive; // @synthesize idleTimeToLive=_idleTimeToLive;
- (id)waitNextThreadJob;
- (void)waitForThreadTermination;
- (void)stopQueue;
- (void)sortReadyJobs;
- (void)runThreadMutexLocked;
- (void)runThread:(id)arg1;
- (void)runSoonMain;
- (void)runSoon;
@property(readonly, nonatomic) BOOL runningOnQueueThread;
- (void)resumeQueue;
- (void)removeJobs:(id)arg1;
- (void)removeJob:(id)arg1;
@property(readonly, nonatomic) unsigned long long readyJobsCount;
@property(readonly, retain, nonatomic) NSArray *readyJobs;
- (void)queueJobs:(id)arg1;
- (void)queueJobCore:(id)arg1;
- (void)queueJob:(id)arg1;
- (void *)main;
- (void)jobCancelled:(id)arg1;
- (void)job:(id)arg1 changedReady:(BOOL)arg2;
- (void)job:(id)arg1 changedPriority:(int)arg2;
@property(readonly, nonatomic) BOOL isBusy;
- (void)dequeueJobCore:(id)arg1;
@property(readonly, nonatomic) unsigned long long blockedJobsCount;
@property(readonly, retain, nonatomic) NSArray *blockedJobs;
@property(readonly, nonatomic) unsigned long long allJobsCount;
@property(readonly, retain, nonatomic) NSArray *allJobs;
- (void)dealloc;
- (void)finalize;
- (id)initWithPThreadAttributes:(const struct _opaque_pthread_attr_t *)arg1 useCurrentThread:(BOOL)arg2;

@end

