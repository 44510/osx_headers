//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class InputStream, NSArray, NSCondition, NSConditionLock, NSObject<SubtaskDelegate>, NSPipe, NSString, NSTask, NSThread;

@interface Subtask : NSObject
{
    NSString *_exePath;
    NSArray *_args;
    NSObject<SubtaskDelegate> *_delegate;
    NSConditionLock *_threadLock;
    NSThread *_thread;
    BOOL _subtaskThreadShouldExit;
    NSCondition *_subtaskCondition;
    NSTask *_nsTask;
    BOOL _nsTaskIsRunning;
    int _nsTaskTerminationStatus;
    int _nsTaskProcessIdentifier;
    NSPipe *_sendPipe;
    NSPipe *_stdoutPipe;
    NSPipe *_stderrPipe;
    int _stdoutFD;
    int _stderrFD;
    struct __CFFileDescriptor *_receiveCFFD;
    struct __CFFileDescriptor *_stderrCFFD;
    struct __CFRunLoopSource *_stdoutRLSrc;
    struct __CFRunLoopSource *_stderrRLSrc;
    InputStream *_subtaskReceiveStream;
    InputStream *_subtaskStderrStream;
    BOOL _receiveDataMode;
}

+ (id)subtaskWithExePath:(id)arg1 args:(id)arg2 delegate:(id)arg3;
+ (id)internalSubtaskWithDelegate:(id)arg1;
@property(nonatomic) BOOL receiveDataMode; // @synthesize receiveDataMode=_receiveDataMode;
@property(retain, nonatomic) NSObject<SubtaskDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *args; // @synthesize args=_args;
@property(retain, nonatomic) NSString *exePath; // @synthesize exePath=_exePath;
- (void)_dummyTimerFired:(id)arg1;
- (void)_nsTaskDied:(id)arg1;
- (void)_subtaskThreadMain:(id)arg1;
- (void)_launch;
- (BOOL)_ensureSubtaskThreadIsRunning;
- (void)_connectToStdIn;
- (void)_cffdCallbackMethod:(struct __CFFileDescriptor *)arg1 optionFlags:(unsigned long long)arg2;
- (void)sendRawData:(id)arg1;
- (void)sendRawCommandString:(id)arg1;
- (void)nsTaskWaitUntilExit;
@property(readonly, nonatomic) int nsTaskTerminationStatus;
- (void)nsTaskTerminate;
@property(readonly, nonatomic) int nsTaskProcessIdentifier;
@property(readonly, nonatomic) BOOL nsTaskIsRunning;
@property(readonly, nonatomic) BOOL isStdoutDrained;
@property(readonly, nonatomic) BOOL isStderrDrained;
- (void)detachSubtaskThreadAndLaunch;
- (void)detachSubtaskThreadAndConnectToStdIn;
- (void)newlineOrEOFReceived:(id)arg1;
- (void)tellSubtaskThreadToExit;
- (void)dealloc;
- (id)initWithExePath:(id)arg1 args:(id)arg2 delegate:(id)arg3;

@end

