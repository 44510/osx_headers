//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class CAContext, CALayer, DMCoreStorage, IActionButtonCell, IPropertyValueExtractor, NSArray, NSArrayController, NSButton, NSColor, NSData, NSDate, NSDateComponents, NSDictionary, NSEvent, NSFont, NSFormatter, NSImage, NSImageView, NSIndexSet, NSLayoutManager, NSMenu, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSMutableOrderedSet, NSMutableSet, NSObject, NSObject<NSCopying>, NSOperationQueue, NSString, NSTextContainer, NSTextStorage, NSTimer, NSTrackingArea, NSURL, NSURLConnection, NSUbiquitousKeyValueStore, NSView, NSWindow, QLInlinePreviewController, QLPreviewPanel, SFAirDropDiscoveryController, SFWirelessSettingsController, TAirDropDiscoverableModePopoverViewController, TAirDropDiscoveryController, TAirDropInfoViewController, TAirDropLayoutController, TAirDropLegacyModePopoverViewController, TAirDropPerson, TAirDropProgressLayer, TBackupContainerDelegate, TBaseBrowserWindowController, TBasicImageView, TBrowserBackgroundView, TBrowserViewDataSource, TBrowserViewSwitchAnimator, TBrowserWindowController, TBulkRenameController, TColumnPreviewController, TDelayedPopulationViewController, TDesktopBandSelectionController, TDesktopGridLayoutController, TDesktopIcon, TDesktopIconSelectionView, TDesktopIconSpatialDataController, TDesktopInlinePreviewController, TDesktopInlineProgressHostView, TDesktopMultiViewController, TDesktopSubtitleTextField, TDesktopTitleBubbleView, TDesktopViewController, TDesktopViewDataSource, TDrawRectView, TFavoriteServersTableViewController, TFileSizeFormatter, TFloatingInputView, TGradientSeparator, TGroupInFolderAnimationController, TICloudNoDocumentsViewController, TIconView, TIconViewCellOffscreenRenderer, TIconViewSettings, TImageView, TInlineCancelButtonLayer, TInlinePreviewData, TInlineProgressBarLayer, TInlineProgressHostLayer, TLayer, TLayoutBinder, TListHeaderCellView, TListViewSettings, TNodeViewSettings, TOpenWithMenuFactory, TOpenWithPopupMenuController, TPopover, TPopoverController, TProgressView, TProgressWindowController, TPropertyLogicalSizeExtractor, TQLPreviewViewZoomController, TQueuedPopoverController, TRenameOperation, TScrollView, TShrinkToFitController, TShrinkToFitWindow, TSidebarSplitView, TSplitView, TStandardStatusViewController, TTabViewController, TTabViewCoverLayer, TTabViewItem, TTagColumnTableViewController, TTagEditorController, TTagInfo, TTagOperationDelegate, TTagSuggestionsWindowController, TTaggingSuggestionsViewController, TTargetActionFunctor, TTextField, TTextWithTitleFieldImpl, TTitleField, TUpdateLayerView, TValidatingDateFormatter, TView, TViewController, TWindowHistory;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AEDesc {
    unsigned int _field1;
    struct OpaqueAEDataStorageType **_field2;
};

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSRegionObject;

struct CGSize {
    double width;
    double height;
};

struct ColumnDesc;

struct DSSemaphore;

struct DataBrowserItemSpatialData {
    int _field1;
    int _field2;
    int _field3;
    short _field4;
};

struct DesktopIconSpatialData {
    unsigned int _field1;
    unsigned short _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    short _field8;
};

struct DisplayList {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct DragTarget {
    unsigned int _field1;
    int _field2;
    unsigned int _field3;
    unsigned long long _field4;
};

struct FSPermissionInfo {
    unsigned int userID;
    unsigned int groupID;
    unsigned char reserved1;
    unsigned char userAccess;
    unsigned short mode;
    struct __FSFileSecurity *fileSec;
};

struct FolderContentChangeDescriptor {
    struct TFENode *_field1;
    struct TFENodeVector *_field2;
    struct TFENodeVector *_field3;
    struct TGroupedNodes *_field4;
    id _field5;
    _Bool _field6;
};

struct HFSUniStr255 {
    unsigned short length;
    unsigned short unicode[255];
};

struct IAirDropBaseOperationController {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
    struct TMutex _field9;
    struct TNSRef<NSDictionary *> _field10;
    struct TString _field11;
};

struct IAsyncChooseAppBinder {
    CDUnknownFunctionPointerType *_field1;
};

struct IBaseQueueStyle<TFENode>;

struct IBaseQueueStyle<TNSRef<NSURL *>>;

struct IBaseQueueStyle<TNSRef<TQueuedPopoverController *>>;

struct ICarbonEventFilter;

struct INWOperationController {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
};

struct IPrefsObserver {
    CDUnknownFunctionPointerType *_field1;
    struct TNSRef<TPrefsObserverBridge *> _field2;
};

struct ISpawnOrigin;

struct IValidatorClient;

struct NSObject {
    Class _field1;
};

struct NodeEventReply {
    struct DSSemaphore *_field1;
    unsigned int _field2;
    int _field3;
};

struct NodeNameSyntaxHint {
    unsigned int _field1;
    unsigned int _field2;
    unsigned char _field3;
};

struct NodePropertySortRecord {
    struct OpaqueNodeRef *_field1;
    struct __CFString *_field2;
    struct __CFString *_field3;
    struct __CFString *_field4;
    long long _field5;
    struct UTCDateTime _field6;
    double _field7;
    _Bool _field8;
    _Bool _field9;
};

struct NodeSortingRecord {
    union {
        struct NodePropertySortRecord _field1;
        struct {
            struct OpaqueNodeRef *_field1;
            struct __CFString *_field2;
            struct __CFString *_field3;
            void *_field4;
            void *_field5;
        } _field2;
    } _field1;
};

struct OpaqueAEDataStorageType;

struct OpaqueCoreDrag {
    unsigned int _field1;
    unsigned int _field2;
    struct DragTarget _field3;
    struct DragTarget _field4;
    struct CGPoint _field5;
    struct CGPoint _field6;
    struct CGPoint _field7;
    struct CGPoint _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    struct AEDesc _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    struct CGPoint _field22;
    unsigned char _field23;
    struct CGSRegionObject *_field24;
    struct CGPoint _field25;
    void *_field26;
    void *_field27;
    void *_field28;
    struct CGRect _field29;
    struct CGRect _field30;
    short _field31;
    short _field32;
    short _field33;
    short _field34;
    struct __CFRunLoopTimer *_field35;
    struct __CFRunLoopTimer *_field36;
    struct __CFRunLoopTimer *_field37;
    double _field38;
    float _field39;
    double _field40;
    int _field41;
    unsigned int _field42;
    struct CGPoint _field43;
    struct __CFString *_field44;
    struct __CFDictionary *_field45;
    struct __CFDictionary *_field46;
    void *_field47;
    CDUnknownFunctionPointerType _field48;
    CDUnknownFunctionPointerType _field49;
    CDUnknownFunctionPointerType _field50;
    void *_field51;
    unsigned int _field52;
    struct OpaquePasteboardRef *_field53;
    struct OpaqueCoreDrag *_field54;
    struct __CFString *_field55;
    unsigned int _field56;
    CDUnknownFunctionPointerType _field57;
    void *_field58;
    long long _field59;
    struct __CFDictionary *_field60;
    struct __CFDictionary *_field61;
};

struct OpaqueEventHandlerCallRef;

struct OpaqueEventNotifier;

struct OpaqueEventQueue;

struct OpaqueIconRef;

struct OpaqueLSSharedFileListItemRef;

struct OpaqueLSSharedFileListRef;

struct OpaqueMonitorData;

struct OpaqueNodeRef;

struct OpaqueOperationData;

struct OpaqueOperationRef;

struct OpaquePasteboardRef;

struct OpaquePropertyListRef;

struct OpenFlags {
    int _field1;
};

struct OperationErrorRecord {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    char _field4[1024];
    _Bool _field5;
};

struct OperationIterator {
    struct OpaqueOperationData *fData;
    CDUnknownFunctionPointerType fFirstProc;
    CDUnknownFunctionPointerType fNextProc;
};

struct OperationMonitor {
    struct OpaqueMonitorData *fMonitorData;
    unsigned char fCancelRequested;
    struct OperationStatus *fStatus;
    unsigned int fAccumulatedStatusMask;
    unsigned int fStatusChangeInterval;
    struct DSSemaphore *fRequestSemaphoreID;
    struct OpaqueEventQueue *fQueue;
    CDUnknownFunctionPointerType fTickleProc;
    CDUnknownFunctionPointerType fUniqueNameProc;
};

struct OperationRecord {
    struct OpaqueNodeRef *_field1;
    struct OpaqueNodeRef *_field2;
    struct PropertyList *_field3;
    unsigned int _field4;
    unsigned int _field5;
    struct HFSUniStr255 _field6;
    struct OpaqueNodeRef *_field7;
    struct OpaqueNodeRef *_field8;
    struct OpaqueNodeRef *_field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    unsigned char _field18;
    unsigned char _field19;
};

struct OperationStatus {
    unsigned int fStage;
    struct HFSUniStr255 fCurrentName;
    long long fTimeEstimate;
    long long fItemsTotal;
    long long fItemsCompleted;
    long long fBytesTotal;
    long long fBytesCompleted;
    long long fFSItemsTotal;
    long long fFSItemsCompleted;
};

struct Point32 {
    int h;
    int v;
};

struct PropertyList;

struct RGBColor {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct SearchScopeDefinition;

struct SortCollator {
    struct TRef<TBaseNodeComparator *, TRetainReleasePolicy<TBaseNodeComparator *>> _field1;
};

struct StColumnOptimizer {
    struct TColumnOptimizerContainers _field1;
    id _field2;
    struct StColumnOptimizer *_field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct TAccessControlInfo {
    unsigned int fCustomAccessControlInfo;
    _Bool fReadWrite;
    _Bool fReadOnly;
    _Bool fWriteOnly;
    _Bool fNoAccess;
    _Bool fCustom;
    _Bool fNoInfo;
    _Bool fIsMixed;
    _Bool fIsAllow;
};

struct TAirDropReceiverOperationController {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
    struct TMutex _field9;
    struct TNSRef<NSDictionary *> _field10;
    struct TString _field11;
    _Bool _field12;
    struct TFENodeVector _field13;
};

struct TAirDropSenderOperationController {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
    struct TMutex _field9;
    struct TNSRef<NSDictionary *> _field10;
    struct TString _field11;
    struct TFENode _field12;
};

struct TAliasesTargets {
    struct __tree<std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct TApplicationEventHandler {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    _Bool _field7;
    CDUnknownFunctionPointerType *_field8;
    struct TNSRef<TPrefsObserverBridge *> _field9;
    _Bool _field10;
    struct TScriptApplication _field11;
};

struct TAsyncNodeOperationAssistant {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct TBaseNodeComparator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct TRef<const __CFLocale *, TRetainReleasePolicy<CFLocaleRef>> _field3;
    struct TString _field4;
    unsigned int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
};

struct TBrowseModeAnimationInfo {
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field1;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field5;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field6;
    struct CGRect _field7;
    struct CGRect _field8;
    struct CGRect _field9;
    struct CGRect _field10;
    struct CGRect _field11;
    struct CGRect _field12;
    struct CGRect _field13;
    struct CGRect _field14;
    struct CGRect _field15;
};

struct TBurningDevice {
    struct TRef<__DADisk *, TRetainReleasePolicy<DADiskRef>> _field1;
    struct TRef<__DRDevice *, TRetainReleasePolicy<DRDeviceRef>> _field2;
    struct TFENode _field3;
    struct TString _field4;
    struct TIconRef _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct TCachedRelativeDates {
    struct TNSRef<NSDate *> _field1;
    struct TNSRef<NSDate *> _field2;
    struct TNSRef<NSDate *> _field3;
};

struct TCarbonEventHandler;

struct TCoalescedNodesAddedMap {
    struct __tree<std::__1::__value_type<const TFENode, const TFENodeVector *const>, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, const TFENodeVector *const>, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::__value_type<const TFENode, const TFENodeVector *const>>> {
        struct __tree_node<std::__1::__value_type<const TFENode, const TFENodeVector *const>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TFENode, const TFENodeVector *const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, const TFENodeVector *const>, std::__1::less<const TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct TCoalescedNodesChangedMap {
    struct __tree<std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>>> {
        struct __tree_node<std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, std::__1::less<const TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct TCoalescingNodeObserver;

struct TCoalescingNodeObserverCocoaBridge {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TCoalescingNodeObserver *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field10;
    set_55a3e8f7 _field11;
    _Bool _field12;
    id _field13;
    unsigned int _field14;
};

struct TColor {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct TColumnOptimizerContainers {
    struct __tree<std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::__map_value_compare<std::__1::pair<long, TFENode>, std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::less<std::__1::pair<long, TFENode>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<long, TFENode>, short>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<long, TFENode>, short>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<long, TFENode>, short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<long, TFENode>, std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::less<std::__1::pair<long, TFENode>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct TColumnPreviewQTEjectHelper {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TCoalescingNodeObserver *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field10;
    set_55a3e8f7 _field11;
    _Bool _field12;
    struct TFENodeVector _field13;
    id _field14;
    _Bool _field15;
};

struct TConditionVariable {
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } fCondition;
};

struct TDesktopNodesComparator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct TRef<const __CFLocale *, TRetainReleasePolicy<CFLocaleRef>> _field3;
    struct TString _field4;
    unsigned int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
};

struct TDesktopThumbnailExtractorController {
    CDUnknownFunctionPointerType *_field1;
    struct TThumbnailExtractor _field2;
    CDUnknownFunctionPointerType *_field3;
    id _field4;
    struct TValidatorItem<TThumbnailExtractorController> _field5;
    unsigned long long _field6;
};

struct TDesktopTitleMetrics {
    struct TNSRef<NSTextStorage *> fTextStorage;
    struct TNSRef<NSLayoutManager *> fLayoutManager;
    struct TNSRef<NSTextContainer *> fTextContainer;
    unsigned long long fMaxLines;
    struct CGSize fMaxTextSize;
    struct CGRect fUsedTextFrame;
    struct CGRect fAvailableTextFrame;
    struct CGRect fIdealTextFrame;
    vector_b8c73e0a fLineFrames;
    struct vector<_NSRange, std::__1::allocator<_NSRange>> fLineGlyphRanges;
    struct vector<_NSRange, std::__1::allocator<_NSRange>> fLineCharRanges;
    double fCenteredHorizontalInset;
    double fAlignedHorizontalInset;
    _Bool fIsTruncatingLastLine;
    _Bool fNeedsCalculation;
};

struct TDesktopViewDataSourceItemSortValues {
    struct TNSRef<NSObject<NSCopying>*> _field1;
    struct TString _field2;
    struct TString _field3;
    unsigned int _field4;
    _Bool _field5;
};

struct TDisplayConfiguration {
    struct map<unsigned int, CGRect, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, CGRect>>> fDisplayFrames;
};

struct TDropOperation {
    CDUnknownFunctionPointerType *_field1;
    struct OpaqueCoreDrag *_field2;
    id _field3;
    id _field4;
    struct TFENode _field5;
    struct TFENodeVector _field6;
    struct TFENodeVector _field7;
    struct TFENodeVector _field8;
    struct TFENode _field9;
    struct TFENodeVector _field10;
};

struct TFCGImage {
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field1;
};

struct TFENode {
    struct OpaqueNodeRef *fNodeRef;
};

struct TFENodeData {
    struct TString _field1;
    struct TString _field2;
    struct TString _field3;
    struct UTCDateTime _field4;
    _Bool _field5;
    _Bool _field6;
    struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> _field7;
};

struct TFENodePropertyList {
    struct OpaquePropertyListRef *_field1;
};

struct TFENodeUpdate;

struct TFENodeUpdateList {
    struct TFENodeUpdate *_field1;
    struct TFENodeUpdate *_field2;
    struct __compressed_pair<TFENodeUpdate *, std::__1::allocator<TFENodeUpdate>> {
        struct TFENodeUpdate *_field1;
    } _field3;
};

struct TFENodeVector {
    struct TFENode *__begin_;
    struct TFENode *__end_;
    struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> __end_cap_;
};

struct TFavoriteServersListCocoaBridge {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct TFlowViewQTEjectHelper {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TCoalescingNodeObserver *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field10;
    set_55a3e8f7 _field11;
    _Bool _field12;
    struct TFENodeVector _field13;
    id _field14;
    _Bool _field15;
};

struct TFormattedDateEntry;

struct TFullScreenAnimationInfo {
    _Bool _field1;
    struct CGRect _field2;
    double _field3;
    struct CGPoint _field4;
    struct TNSRef<CALayer *> _field5;
    struct TNSRef<CALayer *> _field6;
    struct TNSRef<CALayer *> _field7;
    struct TNSRef<CALayer *> _field8;
    struct CGRect _field9;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field10;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field11;
    struct CGRect _field12;
    struct CGRect _field13;
    struct CGRect _field14;
    struct CGRect _field15;
    struct CGRect _field16;
    struct CGRect _field17;
    struct CGRect _field18;
    struct CGRect _field19;
    struct CGRect _field20;
    struct CGRect _field21;
    struct CGRect _field22;
    struct CGRect _field23;
    double _field24;
    double _field25;
    struct CGRect _field26;
    struct CGRect _field27;
};

struct TGroup {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct TGroupManager *_field3;
    unsigned int _field4;
};

struct TGroupChanges {
    struct TFENodeVector _field1;
    struct TFENodeVector _field2;
    struct TFENodeVector _field3;
};

struct TGroupClientNodes {
    struct map<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, std::__1::allocator<std::__1::pair<const std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> _field1;
    struct map<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> _field2;
};

struct TGroupManager {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
};

struct TGroupedNodes {
    struct TNodeGroups _field1;
};

struct TIconBrowserSettings {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    struct CGPoint _field9;
    short _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    struct RGBColor _field14;
    struct TFENode _field15;
    unsigned char _field16;
};

struct TIconLayoutBitmap {
    CDUnknownFunctionPointerType *_vptr$TIconLayoutBitmap;
    unsigned int fDisplayID;
    int fBitsPerItem;
    int fRowStride;
    char *fBitmap;
    int fWidth;
    int fHeight;
    struct Point32 fLastItemLocation;
    unsigned int *fTransformArray;
    int fOrientation;
    int fStyle;
    _Bool fExpands;
};

struct TIconLayoutDataCache {
    struct unordered_map<TFENode, TIconLayoutData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TIconLayoutData>>> _field1;
    struct unordered_map<TFENode, TCachedMetricsData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCachedMetricsData>>> _field2;
};

struct TIconRef {
    struct TRef<OpaqueIconRef *, TRetainReleasePolicy<IconRef>> fIconRef;
};

struct TIconViewLayout {
    CDUnknownFunctionPointerType *_field1;
    struct TNSRef<TIconView *> _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    unsigned short _field5;
    int _field6;
    struct TFENode _field7;
    struct TFENodeVector _field8;
    struct TNSRef<NSMutableDictionary *> _field9;
    _Bool _field10;
    struct TIconLayoutDataCache _field11;
    struct TNSRef<TIconSpatialDataController *> _field12;
    struct unordered_map<TFENode, Point32, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, Point32>>> _field13;
    _Bool _field14;
    struct CGSize _field15;
    struct CGPoint _field16;
    struct vector<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>, std::__1::allocator<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>>> _field17;
    struct TNSRef<TIconViewMonitorController *> _field18;
};

struct TIdentity {
    struct TRef<const __CFUUID *, TRetainReleasePolicy<CFUUIDRef>> fUUIDRef;
    struct TString fShortName;
    int fPosixID;
    struct TriStateBool fIsUser;
};

struct TIdentityVector {
    struct TIdentity *_field1;
    struct TIdentity *_field2;
    struct __compressed_pair<TIdentity *, std::__1::allocator<TIdentity>> {
        struct TIdentity *_field1;
    } _field3;
};

struct TInfoExtractor {
    struct TMutex _field1;
    struct TInfoExtractorThread *_field2;
    unsigned long long _field3;
    struct function<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
        struct function<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
            struct type _field1;
            struct __base<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> *_field2;
        } _field1;
        struct TNSRef<void (^)(const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> _field2;
    } _field4;
    struct function<bool (const TFENode &, TInfoExtractorData &)> {
        struct function<bool (const TFENode &, TInfoExtractorData &)> {
            struct type _field1;
            struct __base<bool (const TFENode &, TInfoExtractorData &)> *_field2;
        } _field1;
        struct TNSRef<bool (^)(const TFENode &, TInfoExtractorData &)> _field2;
    } _field5;
    _Bool _field6;
};

struct TInfoExtractorController {
    CDUnknownFunctionPointerType *_field1;
    struct TValidatorItem<IInfoExtractorController> _field2;
    struct TInfoExtractor _field3;
    id _field4;
};

struct TInfoExtractorThread;

struct TInfoPreviewViewQTEjectHelper {
    CDUnknownFunctionPointerType *_vptr$TNodeEventHandler;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> fObservedNodes;
    struct TNodeChangeNotifier fNodeChangeNotifier;
    _Bool fClearObserversOnNodeDeleted;
    struct TString fObserverName;
    struct TCoalescingNodeObserver *fNextObserverToFlush;
    unsigned long long fNextFlushTime;
    unsigned long long fLastBusyTime;
    unsigned long long fMicrosecondsToCoalesce;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> fCoalescedEventsMap;
    set_55a3e8f7 fChildListChangesPending;
    _Bool fSupportsBulkEventHandling;
    struct TFENodeVector fPreviouslyPreviewedNodes;
    id fClient;
    _Bool fResettingTarget;
};

struct TKeyValueBinder {
    NSObject *fReceiverObj;
    struct TString fReceiversBinding;
};

struct TKeyValueObserver {
    NSObject *fObserver;
    NSObject *fObjectToObserve;
    NSArray *fArrayOfObjectsToObserve;
    struct TNSRef<NSIndexSet *> fIndexesOfObjectsToObserve;
    struct TString fKeyPathToObserve;
    void *fContext;
};

struct TLayoutBinding {
    struct TSideLayoutBinding top;
    struct TSideLayoutBinding left;
    struct TSideLayoutBinding bottom;
    struct TSideLayoutBinding right;
};

struct TListBrowserSettings {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    vector_abc0d4d8 _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct TMDQueryAliasNode {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TNSRef<NSMutableDictionary *> _field6;
    struct TMutex _field7;
    struct map<TNodeObserver *, TObserverStats, std::__1::less<TNodeObserver *>, std::__1::allocator<std::__1::pair<TNodeObserver *const, TObserverStats>>> _field8;
    struct TFENode _field9;
    _Bool _field10;
    struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> _field11;
    struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> _field12;
    struct TString _field13;
    unsigned int _field14;
    struct TFENode _field15;
    struct TFENode _field16;
    struct TFENode _field17;
    struct TFENode _field18;
    struct TString _field19;
    struct TString _field20;
    struct TString _field21;
    struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> _field22;
    int _field23;
    int _field24;
    unsigned int _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    struct TFENode _field41;
    int _field42;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field43;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field44;
    struct TFENode _field45;
    struct TMDQueryDefinition _field46;
};

struct TMDQueryDefinition {
    struct TString _field1;
    struct TString _field2;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field3;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field4;
    long long _field5;
    unsigned int _field6;
};

struct TModelObject;

struct TMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TNSAutoRef<NSURLConnection *> {
    NSURLConnection *fRef;
};

struct TNSRef<CAContext *> {
    CAContext *fRef;
};

struct TNSRef<CALayer *> {
    CALayer *fRef;
};

struct TNSRef<DMCoreStorage *> {
    DMCoreStorage *fRef;
};

struct TNSRef<IActionButtonCell *> {
    IActionButtonCell *fRef;
};

struct TNSRef<IPropertyValueExtractor *> {
    IPropertyValueExtractor *fRef;
};

struct TNSRef<NSArray *> {
    NSArray *fRef;
};

struct TNSRef<NSArrayController *> {
    NSArrayController *fRef;
};

struct TNSRef<NSButton *> {
    NSButton *fRef;
};

struct TNSRef<NSColor *> {
    NSColor *fRef;
};

struct TNSRef<NSData *> {
    NSData *fRef;
};

struct TNSRef<NSDate *> {
    NSDate *fRef;
};

struct TNSRef<NSDateComponents *> {
    NSDateComponents *fRef;
};

struct TNSRef<NSDictionary *> {
    NSDictionary *fRef;
};

struct TNSRef<NSEvent *> {
    NSEvent *fRef;
};

struct TNSRef<NSFont *> {
    NSFont *fRef;
};

struct TNSRef<NSFormatter *> {
    NSFormatter *fRef;
};

struct TNSRef<NSImage *(^)(TFENode, double)> {
    CDUnknownBlockType _field1;
};

struct TNSRef<NSImage *> {
    NSImage *fRef;
};

struct TNSRef<NSImageView *> {
    NSImageView *fRef;
};

struct TNSRef<NSIndexSet *> {
    NSIndexSet *fRef;
};

struct TNSRef<NSLayoutManager *> {
    NSLayoutManager *fRef;
};

struct TNSRef<NSMenu *> {
    NSMenu *fRef;
};

struct TNSRef<NSMutableArray *> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableDictionary *> {
    NSMutableDictionary *fRef;
};

struct TNSRef<NSMutableIndexSet *> {
    NSMutableIndexSet *fRef;
};

struct TNSRef<NSMutableOrderedSet *> {
    NSMutableOrderedSet *fRef;
};

struct TNSRef<NSMutableSet *> {
    NSMutableSet *fRef;
};

struct TNSRef<NSObject *> {
    NSObject *fRef;
};

struct TNSRef<NSObject<NSCopying>*> {
    NSObject<NSCopying> *fRef;
};

struct TNSRef<NSOperationQueue *> {
    NSOperationQueue *fRef;
};

struct TNSRef<NSString *> {
    NSString *fRef;
};

struct TNSRef<NSTextContainer *> {
    NSTextContainer *fRef;
};

struct TNSRef<NSTextStorage *> {
    NSTextStorage *fRef;
};

struct TNSRef<NSTimer *> {
    NSTimer *fRef;
};

struct TNSRef<NSTrackingArea *> {
    NSTrackingArea *fRef;
};

struct TNSRef<NSURL *> {
    NSURL *fRef;
};

struct TNSRef<NSUbiquitousKeyValueStore *> {
    NSUbiquitousKeyValueStore *fRef;
};

struct TNSRef<NSView *> {
    NSView *fRef;
};

struct TNSRef<NSWindow *> {
    NSWindow *fRef;
};

struct TNSRef<QLInlinePreviewController *> {
    QLInlinePreviewController *fRef;
};

struct TNSRef<QLPreviewPanel *> {
    QLPreviewPanel *fRef;
};

struct TNSRef<SFAirDropDiscoveryController *> {
    SFAirDropDiscoveryController *fRef;
};

struct TNSRef<SFWirelessSettingsController *> {
    SFWirelessSettingsController *fRef;
};

struct TNSRef<TAirDropDiscoverableModePopoverViewController *> {
    TAirDropDiscoverableModePopoverViewController *fRef;
};

struct TNSRef<TAirDropDiscoveryController *> {
    TAirDropDiscoveryController *fRef;
};

struct TNSRef<TAirDropInfoViewController *> {
    TAirDropInfoViewController *fRef;
};

struct TNSRef<TAirDropLayoutController *> {
    TAirDropLayoutController *fRef;
};

struct TNSRef<TAirDropLegacyModePopoverViewController *> {
    TAirDropLegacyModePopoverViewController *fRef;
};

struct TNSRef<TAirDropPerson *> {
    TAirDropPerson *fRef;
};

struct TNSRef<TAirDropProgressLayer *> {
    TAirDropProgressLayer *fRef;
};

struct TNSRef<TBackupContainerDelegate *> {
    TBackupContainerDelegate *fRef;
};

struct TNSRef<TBaseBrowserWindowController *> {
    TBaseBrowserWindowController *fRef;
};

struct TNSRef<TBasicImageView *> {
    TBasicImageView *fRef;
};

struct TNSRef<TBrowserBackgroundView *> {
    TBrowserBackgroundView *fRef;
};

struct TNSRef<TBrowserViewDataSource *> {
    TBrowserViewDataSource *fRef;
};

struct TNSRef<TBrowserViewSwitchAnimator *> {
    TBrowserViewSwitchAnimator *fRef;
};

struct TNSRef<TBrowserWindowController *> {
    TBrowserWindowController *fRef;
};

struct TNSRef<TBulkRenameController *> {
    TBulkRenameController *fRef;
};

struct TNSRef<TColumnPreviewController *> {
    TColumnPreviewController *fRef;
};

struct TNSRef<TDelayedPopulationViewController *> {
    TDelayedPopulationViewController *fRef;
};

struct TNSRef<TDesktopBandSelectionController *> {
    TDesktopBandSelectionController *fRef;
};

struct TNSRef<TDesktopGridLayoutController *> {
    TDesktopGridLayoutController *fRef;
};

struct TNSRef<TDesktopIcon *> {
    TDesktopIcon *fRef;
};

struct TNSRef<TDesktopIconSelectionView *> {
    TDesktopIconSelectionView *fRef;
};

struct TNSRef<TDesktopIconSpatialDataController *> {
    TDesktopIconSpatialDataController *fRef;
};

struct TNSRef<TDesktopInlinePreviewController *> {
    TDesktopInlinePreviewController *fRef;
};

struct TNSRef<TDesktopInlineProgressHostView *> {
    TDesktopInlineProgressHostView *fRef;
};

struct TNSRef<TDesktopMultiViewController *> {
    TDesktopMultiViewController *fRef;
};

struct TNSRef<TDesktopSubtitleTextField *> {
    TDesktopSubtitleTextField *fRef;
};

struct TNSRef<TDesktopTitleBubbleView *> {
    TDesktopTitleBubbleView *fRef;
};

struct TNSRef<TDesktopViewController *> {
    TDesktopViewController *fRef;
};

struct TNSRef<TDesktopViewDataSource *> {
    TDesktopViewDataSource *fRef;
};

struct TNSRef<TDrawRectView *> {
    TDrawRectView *fRef;
};

struct TNSRef<TFavoriteServersTableViewController *> {
    TFavoriteServersTableViewController *fRef;
};

struct TNSRef<TFileSizeFormatter *> {
    TFileSizeFormatter *fRef;
};

struct TNSRef<TFloatingInputView *> {
    TFloatingInputView *fRef;
};

struct TNSRef<TGradientSeparator *> {
    TGradientSeparator *fRef;
};

struct TNSRef<TGroupInFolderAnimationController *> {
    TGroupInFolderAnimationController *fRef;
};

struct TNSRef<TICloudNoDocumentsViewController *> {
    TICloudNoDocumentsViewController *fRef;
};

struct TNSRef<TIconSpatialDataController *> {
    id _field1;
};

struct TNSRef<TIconView *> {
    TIconView *fRef;
};

struct TNSRef<TIconViewCellOffscreenRenderer *> {
    TIconViewCellOffscreenRenderer *fRef;
};

struct TNSRef<TIconViewMonitorController *> {
    id _field1;
};

struct TNSRef<TIconViewSettings *> {
    TIconViewSettings *fRef;
};

struct TNSRef<TImageView *> {
    TImageView *fRef;
};

struct TNSRef<TInlineCancelButtonLayer *> {
    TInlineCancelButtonLayer *fRef;
};

struct TNSRef<TInlinePreviewData *> {
    TInlinePreviewData *fRef;
};

struct TNSRef<TInlineProgressBarLayer *> {
    TInlineProgressBarLayer *fRef;
};

struct TNSRef<TInlineProgressHostLayer *> {
    TInlineProgressHostLayer *fRef;
};

struct TNSRef<TLayer *> {
    TLayer *fRef;
};

struct TNSRef<TLayoutBinder *> {
    TLayoutBinder *fRef;
};

struct TNSRef<TListHeaderCellView *> {
    TListHeaderCellView *fRef;
};

struct TNSRef<TListViewSettings *> {
    TListViewSettings *fRef;
};

struct TNSRef<TNodeViewSettings *> {
    TNodeViewSettings *fRef;
};

struct TNSRef<TOpenWithMenuFactory *> {
    TOpenWithMenuFactory *fRef;
};

struct TNSRef<TOpenWithPopupMenuController *> {
    TOpenWithPopupMenuController *fRef;
};

struct TNSRef<TPopover *> {
    TPopover *fRef;
};

struct TNSRef<TPopoverController *> {
    TPopoverController *fRef;
};

struct TNSRef<TPrefsObserverBridge *> {
    id _field1;
};

struct TNSRef<TProgressView *> {
    TProgressView *fRef;
};

struct TNSRef<TProgressWindowController *> {
    TProgressWindowController *fRef;
};

struct TNSRef<TPropertyLogicalSizeExtractor *> {
    TPropertyLogicalSizeExtractor *fRef;
};

struct TNSRef<TQLPreviewViewZoomController *> {
    TQLPreviewViewZoomController *fRef;
};

struct TNSRef<TQueuedPopoverController *> {
    TQueuedPopoverController *fRef;
};

struct TNSRef<TRenameOperation *> {
    TRenameOperation *fRef;
};

struct TNSRef<TScrollView *> {
    TScrollView *fRef;
};

struct TNSRef<TShrinkToFitController *> {
    TShrinkToFitController *fRef;
};

struct TNSRef<TShrinkToFitWindow *> {
    TShrinkToFitWindow *fRef;
};

struct TNSRef<TSidebarSplitView *> {
    TSidebarSplitView *fRef;
};

struct TNSRef<TSidebarViewController *>;

struct TNSRef<TSplitView *> {
    TSplitView *fRef;
};

struct TNSRef<TStandardProgressController *> {
    id _field1;
};

struct TNSRef<TStandardStatusViewController *> {
    TStandardStatusViewController *fRef;
};

struct TNSRef<TTabViewController *> {
    TTabViewController *fRef;
};

struct TNSRef<TTabViewCoverLayer *> {
    TTabViewCoverLayer *fRef;
};

struct TNSRef<TTabViewItem *> {
    TTabViewItem *fRef;
};

struct TNSRef<TTagColumnTableViewController *> {
    TTagColumnTableViewController *fRef;
};

struct TNSRef<TTagEditorController *> {
    TTagEditorController *fRef;
};

struct TNSRef<TTagInfo *> {
    TTagInfo *fRef;
};

struct TNSRef<TTagOperationDelegate *> {
    TTagOperationDelegate *fRef;
};

struct TNSRef<TTagSuggestionsWindowController *> {
    TTagSuggestionsWindowController *fRef;
};

struct TNSRef<TTaggingSuggestionsViewController *> {
    TTaggingSuggestionsViewController *fRef;
};

struct TNSRef<TTargetActionFunctor *> {
    TTargetActionFunctor *fRef;
};

struct TNSRef<TTaskErrorViewController *> {
    id _field1;
};

struct TNSRef<TTextField *> {
    TTextField *fRef;
};

struct TNSRef<TTextWithTitleFieldImpl *> {
    TTextWithTitleFieldImpl *fRef;
};

struct TNSRef<TTitleField *> {
    TTitleField *fRef;
};

struct TNSRef<TUpdateLayerView *> {
    TUpdateLayerView *fRef;
};

struct TNSRef<TValidatingDateFormatter *> {
    TValidatingDateFormatter *fRef;
};

struct TNSRef<TView *> {
    TView *fRef;
};

struct TNSRef<TViewController *> {
    TViewController *fRef;
};

struct TNSRef<TWindowHistory *> {
    TWindowHistory *fRef;
};

struct TNSRef<bool (^)(const TFENode &, TInfoExtractorData &)> {
    CDUnknownBlockType _field1;
};

struct TNSRef<id<TAirDropNotAvailableDelegateProtocol>> {
    id fRef;
};

struct TNSRef<id<TStdAlertSheetClientProtocol>> {
    id fRef;
};

struct TNSRef<id> {
    id fRef;
};

struct TNSRef<void (^)()> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(const TFENode &)> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(const TFENodeVector &, const TError &)> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
    CDUnknownBlockType _field1;
};

struct TNSRef<void (^)(const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> {
    CDUnknownBlockType _field1;
};

struct TNSRef<void (^)(double)> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(float)> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(long)> {
    CDUnknownBlockType fRef;
};

struct TNewFolderAction {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
    CDUnknownFunctionPointerType *_field8;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field9;
    struct TNodeChangeNotifier _field10;
    _Bool _field11;
    struct TString _field12;
    id _field13;
    struct TFENode _field14;
    struct TFENodePropertyList _field15;
    struct TFENode _field16;
    _Bool _field17;
    _Bool _field18;
    struct TValidatorItem<TNewFolderAction> _field19;
};

struct TNewFolderCallbackHandler {
    id _field1;
    long long _field2;
    struct TValidatorToken<TNewFolderAction> _field3;
    _Bool _field4;
};

struct TNodeBrowser {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field3;
    struct TNodeChangeNotifier _field4;
    _Bool _field5;
    struct TString _field6;
    struct TCoalescingNodeObserver *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field11;
    set_55a3e8f7 _field12;
    _Bool _field13;
    struct TMutex _field14;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field15;
    struct unordered_map<TFENode, TNodeEngine::ObservingRecord, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNodeEngine::ObservingRecord>>> _field16;
    struct vector<TNodeEngineNotificationHandler *, std::__1::allocator<TNodeEngineNotificationHandler *>> _field17;
    _Bool _field18;
    struct TRef<dispatch_queue_s *, TRetainReleasePolicy<dispatch_queue_t>> _field19;
    struct TFENodeVector _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct TValidatorItem<TNodeEngine> _field24;
    id _field25;
    struct TTargetPathObserver _field26;
    struct TFENodeVector _field27;
    struct TFENodeVector _field28;
    _Bool _field29;
    _Bool _field30;
    TNSRef_34ef24c4 _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
};

struct TNodeChangeNotifier {
    struct OpaqueEventNotifier *fChangeNotifier;
};

struct TNodeEngineCocoaBridge {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field3;
    struct TNodeChangeNotifier _field4;
    _Bool _field5;
    struct TString _field6;
    struct TCoalescingNodeObserver *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field11;
    set_55a3e8f7 _field12;
    _Bool _field13;
    struct TMutex _field14;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field15;
    struct unordered_map<TFENode, TNodeEngine::ObservingRecord, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNodeEngine::ObservingRecord>>> _field16;
    struct vector<TNodeEngineNotificationHandler *, std::__1::allocator<TNodeEngineNotificationHandler *>> _field17;
    _Bool _field18;
    struct TRef<dispatch_queue_s *, TRetainReleasePolicy<dispatch_queue_t>> _field19;
    struct TFENodeVector _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct TValidatorItem<TNodeEngine> _field24;
    id _field25;
    unsigned int _field26;
};

struct TNodeEngineNotificationHandler;

struct TNodeGroups {
    struct __tree<std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, std::__1::__map_value_compare<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, std::__1::less<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, true>, std::__1::allocator<std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>>> {
        struct __tree_node<std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, std::__1::less<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct TNodeObserverCocoaBridge {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    id _field6;
    unsigned int _field7;
};

struct TNodeTask {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct TMutex _field3;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field4;
    struct TNSRef<TTaskErrorViewController *> _field5;
    struct TNSRef<TStandardProgressController *> _field6;
    struct TNSRef<TStandardStatusViewController *> _field7;
    double _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    long long _field12;
    unsigned int _field13;
    struct OpaqueOperationRef *_field14;
    struct OperationMonitor _field15;
    struct OperationIterator _field16;
    unsigned int _field17;
    unsigned int _field18;
    struct OperationStatus _field19;
    struct TString _field20;
    struct TFENodeVector _field21;
    struct TFENode _field22;
    vector_d50fdf79 _field23;
    struct vector<TOperationRecord, std::__1::allocator<TOperationRecord>> *_field24;
    int _field25;
    struct TNodeTaskProfiler *_field26;
    _Bool _field27;
    _Bool _field28;
    int _field29;
    struct OperationIterator *_field30;
    struct OperationRecord *_field31;
    struct TFENode _field32;
    struct TNSRef<NSTimer *> _field33;
    long long _field34;
    struct vector<std::__1::pair<OperationConflict, OperationResolution>, std::__1::allocator<std::__1::pair<OperationConflict, OperationResolution>>> _field35;
};

struct TNodeTaskProfiler;

struct TNodeToChildrenMap {
    set_55a3e8f7 _field1;
    struct unordered_map<TFENode, TChildList, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildList>>> _field2;
    unsigned int _field3;
};

struct TNotificationCenterObserver {
    NSObject *fObserver;
    struct TString fNotificationName;
    id fObject;
};

struct TOperationRecord {
    struct OperationRecord _field1;
    struct TFENode _field2;
    struct TFENode _field3;
    struct TFENode _field4;
};

struct TPBFSizingThread {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct _opaque_pthread_t *_field3;
    struct TCarbonEventHandler *_field4;
    struct TThreadSafeQueue<TFENode> _field5;
    CDUnknownFunctionPointerType _field6;
};

struct TPBFSizingThreadCallbackCocoaBridge {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    _Bool _field7;
    id _field8;
};

struct TPromiseDragReceiverThread {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct _opaque_pthread_t *_field3;
    struct TThreadSafeQueue<TNSRef<NSURL *>> _field4;
    struct function<void (const TFENodeVector &, const TError &)> {
        struct function<void (const TFENodeVector &, const TError &)> {
            struct type _field1;
            struct __base<void (const TFENodeVector &, const TError &)> *_field2;
        } _field1;
        struct TNSRef<void (^)(const TFENodeVector &, const TError &)> _field2;
    } _field5;
    _Bool _field6;
    _Bool _field7;
};

struct TQLPreviewQTEjectHelper {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TCoalescingNodeObserver *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field10;
    set_55a3e8f7 _field11;
    _Bool _field12;
    struct TFENodeVector _field13;
    id _field14;
    _Bool _field15;
};

struct TReadWriteLock {
    struct _opaque_pthread_rwlock_t {
        long long __sig;
        char __opaque[192];
    } fRWLock;
};

struct TRecursiveMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> {
    struct CGImage *fRef;
};

struct TRef<OpaqueIconRef *, TRetainReleasePolicy<IconRef>> {
    struct OpaqueIconRef *fRef;
};

struct TRef<OpaqueLSSharedFileListItemRef *, TRetainReleasePolicy<LSSharedFileListItemRef>> {
    struct OpaqueLSSharedFileListItemRef *_field1;
};

struct TRef<OpaqueLSSharedFileListRef *, TRetainReleasePolicy<LSSharedFileListRef>> {
    struct OpaqueLSSharedFileListRef *_field1;
};

struct TRef<TBaseNodeComparator *, TRetainReleasePolicy<TBaseNodeComparator *>> {
    struct TBaseNodeComparator *fRef;
};

struct TRef<TDesktopNodesComparator *, TRetainReleasePolicy<TDesktopNodesComparator *>> {
    struct TDesktopNodesComparator *fRef;
};

struct TRef<TSnapshot *, TRetainReleasePolicy<TSnapshot *>> {
    struct TSnapshot *_field1;
};

struct TRef<TTagsAction *, TRefCountedRetainReleasePolicy> {
    struct TTagsAction *_field1;
};

struct TRef<TTimeMachineTarget *, TRetainReleasePolicy<TTimeMachineTarget *>> {
    struct TTimeMachineTarget *fRef;
};

struct TRef<TUndoableAction *, TRefCountedRetainReleasePolicy> {
    struct TUndoableAction *fRef;
};

struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> {
    struct __CFFileSecurity *_field1;
};

struct TRef<__CFMachPort *, TRetainReleasePolicy<CFMachPortRef>> {
    struct __CFMachPort *fRef;
};

struct TRef<__CFRunLoop *, TRetainReleasePolicy<CFRunLoopRef>> {
    struct __CFRunLoop *fRef;
};

struct TRef<__CFRunLoopSource *, TRetainReleasePolicy<CFRunLoopSourceRef>> {
    struct __CFRunLoopSource *fRef;
};

struct TRef<__DADisk *, TRetainReleasePolicy<DADiskRef>> {
    struct __DADisk *fRef;
};

struct TRef<__DRDevice *, TRetainReleasePolicy<DRDeviceRef>> {
    struct __DRDevice *_field1;
};

struct TRef<__FSFileSecurity *, TRetainReleasePolicy<FSFileSecurityRef>> {
    struct __FSFileSecurity *fRef;
};

struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> {
    struct __SFOperation *_field1;
};

struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> {
    struct __CFArray *fRef;
};

struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> {
    struct __CFDictionary *_field1;
};

struct TRef<const __CFLocale *, TRetainReleasePolicy<CFLocaleRef>> {
    struct __CFLocale *_field1;
};

struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> {
    struct __CFString *fRef;
};

struct TRef<const __CFUUID *, TRetainReleasePolicy<CFUUIDRef>> {
    struct __CFUUID *fRef;
};

struct TRef<const void *, TRetainReleasePolicy<CFTypeRef>> {
    void *_field1;
};

struct TRef<dispatch_queue_s *, TRetainReleasePolicy<dispatch_queue_t>> {
    struct dispatch_queue_s *fRef;
};

struct TRef<dispatch_source_s *, TRetainReleasePolicy<dispatch_source_t>> {
    struct dispatch_source_s *fRef;
};

struct TRenameAction {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
    CDUnknownFunctionPointerType *_field8;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field9;
    struct TNodeChangeNotifier _field10;
    _Bool _field11;
    struct TString _field12;
    struct TFENodeVector _field13;
    struct TStringVector _field14;
    struct TStringVector _field15;
    struct TStringVector _field16;
    struct vector<bool, std::__1::allocator<bool>> _field17;
    TNSRef_34ef24c4 _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
};

struct TRenameUndoRedoOperationHelper {
    struct TRenameAction *_field1;
};

struct TScreenToGridLayoutPair;

struct TScriptApplication {
    CDUnknownFunctionPointerType *_field1;
    struct TModelObject *_field2;
    struct TModelObject *_field3;
    struct TModelObject *_field4;
    unsigned int _field5;
    int _field6;
};

struct TSeamlessOpenerSpawnOrigin;

struct TSharedFileList {
    struct TRef<OpaqueLSSharedFileListRef *, TRetainReleasePolicy<LSSharedFileListRef>> _field1;
};

struct TSharedFileListItem {
    struct TRef<OpaqueLSSharedFileListItemRef *, TRetainReleasePolicy<LSSharedFileListItemRef>> _field1;
};

struct TSideLayoutBinding {
    struct TNSRef<NSView *> masterView;
    int kind;
    struct CGRect frame;
};

struct TSnapshot;

struct TSpatialDataCacheElement;

struct TSpinLock {
    int fSpinLock;
};

struct TString {
    struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> fString;
};

struct TStringVector {
    struct TString *__begin_;
    struct TString *__end_;
    struct __compressed_pair<TString *, std::__1::allocator<TString>> {
        struct TString *__first_;
    } __end_cap_;
};

struct TTagsAction;

struct TTagsTask {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    unsigned long long _field5;
    struct TFENodeVector _field6;
    struct TRef<TTagsAction *, TRefCountedRetainReleasePolicy> _field7;
};

struct TTargetPathObserver {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TNodeBrowser *_field6;
};

struct TTask {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field3;
    struct TNSRef<TTaskErrorViewController *> _field4;
    struct TNSRef<TStandardProgressController *> _field5;
    struct TNSRef<TStandardStatusViewController *> _field6;
    double _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    long long _field11;
};

struct TThreadSafeQueue<TFENode> {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TConditionVariable _field3;
    struct IBaseQueueStyle<TFENode> *_field4;
    struct vector<TFENode, std::__1::allocator<TFENode>> _field5;
};

struct TThreadSafeQueue<TNSRef<NSURL *>> {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TConditionVariable _field3;
    struct IBaseQueueStyle<TNSRef<NSURL *>> *_field4;
    struct vector<TNSRef<NSURL *>, std::__1::allocator<TNSRef<NSURL *>>> _field5;
};

struct TThreadSafeQueue<TNSRef<TQueuedPopoverController *>> {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TConditionVariable _field3;
    struct IBaseQueueStyle<TNSRef<TQueuedPopoverController *>> *_field4;
    struct vector<TNSRef<TQueuedPopoverController *>, std::__1::allocator<TNSRef<TQueuedPopoverController *>>> _field5;
};

struct TThumbnailExtractor {
    struct TMutex _field1;
    struct IValidatorClient *_field2;
    struct TThumbnailExtractorThread *_field3;
    int _field4;
    _Bool _field5;
    CDUnknownFunctionPointerType _field6;
    struct function<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> {
        struct function<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> {
            struct type _field1;
            struct __base<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> *_field2;
        } _field1;
        struct TNSRef<void (^)(const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> _field2;
    } _field7;
};

struct TThumbnailExtractorController;

struct TThumbnailExtractorData {
    struct TFENode _field1;
    struct map<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TThumbnailExtractorData::TThumbnailData>>> _field2;
    struct TFENodeData _field3;
};

struct TThumbnailExtractorThread;

struct TTimeMachineTarget {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    struct TFENode _field4;
    struct TString _field5;
    struct TRef<TSnapshot *, TRetainReleasePolicy<TSnapshot *>> _field6;
    struct TRef<const void *, TRetainReleasePolicy<CFTypeRef>> _field7;
    struct TFENode _field8;
};

struct TTypeSelectController {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    struct TString _field3;
    void *_field4;
};

struct TTypedData;

struct TUndoableAction {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
};

struct TUndoableActionManager {
    CDUnknownFunctionPointerType *_field1;
    unsigned long long _field2;
    struct vector<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> _field3;
    struct vector<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> _field4;
    struct vector<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> _field5;
    struct TValidatorItem<TUndoableActionManager> _field6;
};

struct TValidatorItem<IInfoExtractorController> {
    long long _field1;
};

struct TValidatorItem<TNewFolderAction> {
    long long _field1;
};

struct TValidatorItem<TNodeEngine> {
    long long _field1;
};

struct TValidatorItem<TThumbnailExtractorController> {
    long long _field1;
};

struct TValidatorItem<TUndoableActionManager> {
    long long _field1;
};

struct TValidatorToken<TNewFolderAction> {
    long long _field1;
};

struct TVolumeEraseTask {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field3;
    struct TNSRef<TTaskErrorViewController *> _field4;
    struct TNSRef<TStandardProgressController *> _field5;
    struct TNSRef<TStandardStatusViewController *> _field6;
    double _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    long long _field11;
    _Bool _field12;
    int _field13;
    struct TFENode _field14;
    struct TString _field15;
};

struct TestRenameNameRecord {
    char *_field1;
    _Bool _field2;
    _Bool _field3;
    char *_field4;
    struct TriStateBool _field5;
};

struct ToolbarItemInfo {
    unsigned int _field1;
    Class _field2;
    SEL _field3;
    struct __CFString *_field4;
    id _field5;
    id _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct TriStateBool {
    int fState;
};

struct UTCDateTime {
    unsigned short _field1;
    unsigned int _field2;
    unsigned short _field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __CFDictionary;

struct __CFRunLoopTimer;

struct __CFString;

struct __FSFileSecurity;

struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> {
    struct TFENode *__first_;
};

struct __hash_node<TFENode, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t;

struct dispatch_queue_s;

struct dispatch_source_s;

struct map<TFENode, CGRect, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGRect>>> {
    struct __tree<std::__1::__value_type<TFENode, CGRect>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, CGRect>>> {
        struct __tree_node<std::__1::__value_type<TFENode, CGRect>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, DataBrowserItemSpatialData, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, DataBrowserItemSpatialData>>> {
    struct __tree<std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, DataBrowserItemSpatialData>>> {
        struct __tree_node<std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, TFENode, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENode>>> {
    struct __tree<std::__1::__value_type<TFENode, TFENode>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TFENode>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TFENode>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TFENode>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TFENode>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TFENode>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TNSRef<NSMutableDictionary *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary *>>>> {
    struct __tree<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TNSRef<TAirDropPerson *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TAirDropPerson *>>>> {
    struct __tree<std::__1::__value_type<TFENode, TNSRef<TAirDropPerson *>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<TAirDropPerson *>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TNSRef<TAirDropPerson *>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TNSRef<TAirDropPerson *>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TNSRef<TAirDropPerson *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<TAirDropPerson *>>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TNSRef<TContainerExtraData *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TContainerExtraData *>>>> {
    struct __tree<std::__1::__value_type<TFENode, TNSRef<TContainerExtraData *>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<TContainerExtraData *>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TNSRef<TContainerExtraData *>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TNSRef<TContainerExtraData *>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TNSRef<TContainerExtraData *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<TContainerExtraData *>>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> {
    struct __tree<std::__1::__value_type<TFENode, TObserverStats>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TObserverStats>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TObserverStats>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TObserverStats>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TObserverStats>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TObserverStats>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TOpenWithMenuData, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TOpenWithMenuData>>> {
    struct __tree<std::__1::__value_type<TFENode, TOpenWithMenuData>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TOpenWithMenuData>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TOpenWithMenuData>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TOpenWithMenuData>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TOpenWithMenuData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TOpenWithMenuData>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> {
    struct __tree<std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TNSRef<NSView *>, unsigned long, std::__1::less<TNSRef<NSView *>>, std::__1::allocator<std::__1::pair<const TNSRef<NSView *>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TNSRef<NSView *>, unsigned long>, std::__1::__map_value_compare<TNSRef<NSView *>, std::__1::__value_type<TNSRef<NSView *>, unsigned long>, std::__1::less<TNSRef<NSView *>>, true>, std::__1::allocator<std::__1::__value_type<TNSRef<NSView *>, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<TNSRef<NSView *>, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TNSRef<NSView *>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TNSRef<NSView *>, std::__1::__value_type<TNSRef<NSView *>, unsigned long>, std::__1::less<TNSRef<NSView *>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TNodeObserver *, TObserverStats, std::__1::less<TNodeObserver *>, std::__1::allocator<std::__1::pair<TNodeObserver *const, TObserverStats>>> {
    struct __tree<std::__1::__value_type<TNodeObserver *, TObserverStats>, std::__1::__map_value_compare<TNodeObserver *, std::__1::__value_type<TNodeObserver *, TObserverStats>, std::__1::less<TNodeObserver *>, true>, std::__1::allocator<std::__1::__value_type<TNodeObserver *, TObserverStats>>> {
        struct __tree_node<std::__1::__value_type<TNodeObserver *, TObserverStats>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TNodeObserver *, TObserverStats>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TNodeObserver *, std::__1::__value_type<TNodeObserver *, TObserverStats>, std::__1::less<TNodeObserver *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TString, TKVOPubKeyPathAndObservers, std::__1::less<TString>, std::__1::allocator<std::__1::pair<const TString, TKVOPubKeyPathAndObservers>>> {
    struct __tree<std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, std::__1::__map_value_compare<TString, std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, std::__1::less<TString>, true>, std::__1::allocator<std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>>> {
        struct __tree_node<std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TString, std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, std::__1::less<TString>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> {
    struct __tree<std::__1::__value_type<const TFENode, TCoalescedEvents *>, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, TCoalescedEvents *>, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::__value_type<const TFENode, TCoalescedEvents *>>> {
        struct __tree_node<std::__1::__value_type<const TFENode, TCoalescedEvents *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TFENode, TCoalescedEvents *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, TCoalescedEvents *>, std::__1::less<const TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, std::__1::allocator<std::__1::pair<const std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, std::__1::__map_value_compare<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, CGRect, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, CGRect>>> {
    struct __tree<std::__1::__value_type<unsigned int, CGRect>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, CGRect>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, CGRect>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, CGRect>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, CGRect>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TThumbnailExtractorData::TThumbnailData>>> {
    struct __tree<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>;

struct pair<OperationConflict, OperationResolution>;

struct pair<TFENode, TFENodePropertyList>;

struct pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>;

struct set<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
    struct __tree<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
        struct __tree_node<TFENode, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TFENode, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TFENode>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TString, std::__1::less<TString>, std::__1::allocator<TString>> {
    struct __tree<TString, std::__1::less<TString>, std::__1::allocator<TString>> {
        struct __tree_node<TString, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TString, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TString>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> {
    struct __tree<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> {
        struct __tree_node<UDefaults::RegistryID, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UDefaults::RegistryID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UDefaults::RegistryID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<double, std::__1::less<double>, std::__1::allocator<double>> {
    struct __tree<double, std::__1::less<double>, std::__1::allocator<double>> {
        struct __tree_node<double, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<double, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<double>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<ISpawnOrigin> {
    struct ISpawnOrigin *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSeamlessOpenerSpawnOrigin> {
    struct TSeamlessOpenerSpawnOrigin *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TThumbnailExtractorController> {
    struct TThumbnailExtractorController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>;

struct unique_ptr<TNodeObserverCocoaBridge, std::__1::default_delete<TNodeObserverCocoaBridge>> {
    struct __compressed_pair<TNodeObserverCocoaBridge *, std::__1::default_delete<TNodeObserverCocoaBridge>> {
        struct TNodeObserverCocoaBridge *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<TFENode, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TFENode, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TFENode, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TFENode, void *>*>>> {
        struct __hash_node<TFENode, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TFENode, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TFENode, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TString>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<TFENode, Point32, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, Point32>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, Point32>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, Point32>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, Point32>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, Point32>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, Point32>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, Point32>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TCachedMetricsData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCachedMetricsData>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TCachedMetricsData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TChildList, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildList>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TChildList>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TChildList>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TChildList>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TChildList>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TChildList>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TChildList>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENode>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TFENode>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TFENode>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TGroupInFolderItem, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TGroupInFolderItem>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TIconLayoutData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TIconLayoutData>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TIconLayoutData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TNSRef<NSMutableDictionary *>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNSRef<TDesktopIcon *>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TDesktopIcon *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNSRef<TInlineProgressHostLayer *>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TInlineProgressHostLayer *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TInlineProgressHostLayer *>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNodeEngine::ObservingRecord, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNodeEngine::ObservingRecord>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TProgressState, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TProgressState>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TProgressState>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TString, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TString>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TString>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TString>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TString>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TString, TNSRef<NSImage *>, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<std::__1::pair<const TString, TNSRef<NSImage *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::hash<TString>, true>, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::equal_to<TString>, true>, std::__1::allocator<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::hash<TString>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::equal_to<TString>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>, TStringCaseInsensitiveHash, TStringCaseInsensitiveCompare, std::__1::allocator<std::__1::pair<const TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveHash, true>, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveCompare, true>, std::__1::allocator<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveCompare, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>> {
    struct __hash_table<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>> {
        struct unique_ptr<std::__1::__hash_node<TFENode, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TFENode, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>, std::__1::allocator<std::__1::__hash_node<TFENode, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TFENode, void *>*> {
                struct __hash_node<TFENode, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TFENode>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TFENode>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<Browser::ColumnDesc, std::__1::allocator<Browser::ColumnDesc>> {
    struct ColumnDesc *_field1;
    struct ColumnDesc *_field2;
    struct __compressed_pair<Browser::ColumnDesc *, std::__1::allocator<Browser::ColumnDesc>> {
        struct ColumnDesc *_field1;
    } _field3;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *_field1;
    struct CGPoint *_field2;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *_field1;
    } _field3;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__first_;
    } __end_cap_;
};

struct vector<DataBrowserItemSpatialData, std::__1::allocator<DataBrowserItemSpatialData>> {
    struct DataBrowserItemSpatialData *__begin_;
    struct DataBrowserItemSpatialData *__end_;
    struct __compressed_pair<DataBrowserItemSpatialData *, std::__1::allocator<DataBrowserItemSpatialData>> {
        struct DataBrowserItemSpatialData *__first_;
    } __end_cap_;
};

struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> {
    struct ICarbonEventFilter **_field1;
    struct ICarbonEventFilter **_field2;
    struct __compressed_pair<ICarbonEventFilter **, std::__1::allocator<ICarbonEventFilter *>> {
        struct ICarbonEventFilter **_field1;
    } _field3;
};

struct vector<TAccessControlInfo, std::__1::allocator<TAccessControlInfo>> {
    struct TAccessControlInfo *_field1;
    struct TAccessControlInfo *_field2;
    struct __compressed_pair<TAccessControlInfo *, std::__1::allocator<TAccessControlInfo>> {
        struct TAccessControlInfo *_field1;
    } _field3;
};

struct vector<TBrowserContainerController *, std::__1::allocator<TBrowserContainerController *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<TBrowserContainerController **, std::__1::allocator<TBrowserContainerController *>> {
        id *_field1;
    } _field3;
};

struct vector<TFENode, std::__1::allocator<TFENode>> {
    struct TFENode *_field1;
    struct TFENode *_field2;
    struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> _field3;
};

struct vector<TFENodePropertyList, std::__1::allocator<TFENodePropertyList>> {
    struct TFENodePropertyList *_field1;
    struct TFENodePropertyList *_field2;
    struct __compressed_pair<TFENodePropertyList *, std::__1::allocator<TFENodePropertyList>> {
        struct TFENodePropertyList *_field1;
    } _field3;
};

struct vector<TFormattedDateEntry, std::__1::allocator<TFormattedDateEntry>> {
    struct TFormattedDateEntry *__begin_;
    struct TFormattedDateEntry *__end_;
    struct __compressed_pair<TFormattedDateEntry *, std::__1::allocator<TFormattedDateEntry>> {
        struct TFormattedDateEntry *__first_;
    } __end_cap_;
};

struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> {
    struct SearchScopeDefinition *_field1;
    struct SearchScopeDefinition *_field2;
    struct __compressed_pair<TMDQueryAliasNode::SearchScopeDefinition *, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> {
        struct SearchScopeDefinition *_field1;
    } _field3;
};

struct vector<TNSRef<NSURL *>, std::__1::allocator<TNSRef<NSURL *>>> {
    struct TNSRef<NSURL *> *_field1;
    struct TNSRef<NSURL *> *_field2;
    struct __compressed_pair<TNSRef<NSURL *>*, std::__1::allocator<TNSRef<NSURL *>>> {
        struct TNSRef<NSURL *> *_field1;
    } _field3;
};

struct vector<TNSRef<NSWindow *>, std::__1::allocator<TNSRef<NSWindow *>>> {
    struct TNSRef<NSWindow *> *__begin_;
    struct TNSRef<NSWindow *> *__end_;
    struct __compressed_pair<TNSRef<NSWindow *>*, std::__1::allocator<TNSRef<NSWindow *>>> {
        struct TNSRef<NSWindow *> *__first_;
    } __end_cap_;
};

struct vector<TNSRef<TLayer *>, std::__1::allocator<TNSRef<TLayer *>>> {
    struct TNSRef<TLayer *> *_field1;
    struct TNSRef<TLayer *> *_field2;
    struct __compressed_pair<TNSRef<TLayer *>*, std::__1::allocator<TNSRef<TLayer *>>> {
        struct TNSRef<TLayer *> *_field1;
    } _field3;
};

struct vector<TNSRef<TQueuedPopoverController *>, std::__1::allocator<TNSRef<TQueuedPopoverController *>>> {
    struct TNSRef<TQueuedPopoverController *> *_field1;
    struct TNSRef<TQueuedPopoverController *> *_field2;
    struct __compressed_pair<TNSRef<TQueuedPopoverController *>*, std::__1::allocator<TNSRef<TQueuedPopoverController *>>> {
        struct TNSRef<TQueuedPopoverController *> *_field1;
    } _field3;
};

struct vector<TNSRef<TSidebarViewController *>, std::__1::allocator<TNSRef<TSidebarViewController *>>> {
    struct TNSRef<TSidebarViewController *> *__begin_;
    struct TNSRef<TSidebarViewController *> *__end_;
    struct __compressed_pair<TNSRef<TSidebarViewController *>*, std::__1::allocator<TNSRef<TSidebarViewController *>>> {
        struct TNSRef<TSidebarViewController *> *__first_;
    } __end_cap_;
};

struct vector<TNSRef<TTabViewItem *>, std::__1::allocator<TNSRef<TTabViewItem *>>> {
    TNSRef_720ff929 *__begin_;
    TNSRef_720ff929 *__end_;
    struct __compressed_pair<TNSRef<TTabViewItem *>*, std::__1::allocator<TNSRef<TTabViewItem *>>> {
        TNSRef_720ff929 *__first_;
    } __end_cap_;
};

struct vector<TNodeEngineNotificationHandler *, std::__1::allocator<TNodeEngineNotificationHandler *>> {
    struct TNodeEngineNotificationHandler **_field1;
    struct TNodeEngineNotificationHandler **_field2;
    struct __compressed_pair<TNodeEngineNotificationHandler **, std::__1::allocator<TNodeEngineNotificationHandler *>> {
        struct TNodeEngineNotificationHandler **_field1;
    } _field3;
};

struct vector<TOperationRecord, std::__1::allocator<TOperationRecord>> {
    struct TOperationRecord *__begin_;
    struct TOperationRecord *__end_;
    struct __compressed_pair<TOperationRecord *, std::__1::allocator<TOperationRecord>> {
        struct TOperationRecord *__first_;
    } __end_cap_;
};

struct vector<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> {
    TRef_9e01da98 *_field1;
    TRef_9e01da98 *_field2;
    struct __compressed_pair<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>*, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> {
        TRef_9e01da98 *_field1;
    } _field3;
};

struct vector<TScreenToGridLayoutPair, std::__1::allocator<TScreenToGridLayoutPair>> {
    struct TScreenToGridLayoutPair *__begin_;
    struct TScreenToGridLayoutPair *__end_;
    struct __compressed_pair<TScreenToGridLayoutPair *, std::__1::allocator<TScreenToGridLayoutPair>> {
        struct TScreenToGridLayoutPair *__first_;
    } __end_cap_;
};

struct vector<TSpatialDataCacheElement, std::__1::allocator<TSpatialDataCacheElement>> {
    struct TSpatialDataCacheElement *__begin_;
    struct TSpatialDataCacheElement *__end_;
    struct __compressed_pair<TSpatialDataCacheElement *, std::__1::allocator<TSpatialDataCacheElement>> {
        struct TSpatialDataCacheElement *__first_;
    } __end_cap_;
};

struct vector<TTypedData, std::__1::allocator<TTypedData>> {
    struct TTypedData *__begin_;
    struct TTypedData *__end_;
    struct __compressed_pair<TTypedData *, std::__1::allocator<TTypedData>> {
        struct TTypedData *__first_;
    } __end_cap_;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *_field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long _field1;
    } _field3;
};

struct vector<char, std::__1::allocator<char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> {
    struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field1;
    struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field2;
    struct __compressed_pair<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>*, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> {
        struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field1;
    } _field3;
};

struct vector<std::__1::pair<OperationConflict, OperationResolution>, std::__1::allocator<std::__1::pair<OperationConflict, OperationResolution>>> {
    struct pair<OperationConflict, OperationResolution> *_field1;
    struct pair<OperationConflict, OperationResolution> *_field2;
    struct __compressed_pair<std::__1::pair<OperationConflict, OperationResolution>*, std::__1::allocator<std::__1::pair<OperationConflict, OperationResolution>>> {
        struct pair<OperationConflict, OperationResolution> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>, std::__1::allocator<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>>> {
    struct pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>> *__begin_;
    struct pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>> *__end_;
    struct __compressed_pair<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>*, std::__1::allocator<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>>> {
        struct pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>, std::__1::allocator<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>>> {
    struct unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>> *_field1;
    struct unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>*, std::__1::allocator<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>>> {
        struct unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>> *_field1;
    } _field3;
};

#if 0
// Names with conflicting types:
typedef struct ?<NSImage *(TFENode, double)> {
    struct type _field1;
    struct __base<NSImage *(TFENode, double)> *_field2;
} function_ef29e158;

typedef struct ?<bool (const TFENode &, TInfoExtractorData &)> {
    struct type _field1;
    struct __base<bool (const TFENode &, TInfoExtractorData &)> *_field2;
} function_67946993;

typedef struct ?<void ()> {
    struct type __buf_;
    struct __base<void ()> *__f_;
} function_f9feaa7d;

typedef struct ?<void (const TFENode &)> {
    struct type __buf_;
    struct __base<void (const TFENode &)> *__f_;
} function_35ade228;

typedef struct ?<void (const TFENodeVector &, const TError &)> {
    struct type __buf_;
    struct __base<void (const TFENodeVector &, const TError &)> *__f_;
} function_85df7881;

typedef struct ?<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
    struct type _field1;
    struct __base<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> *_field2;
} function_ebaa1d07;

typedef struct ?<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> {
    struct type _field1;
    struct __base<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> *_field2;
} function_eef9e221;

typedef struct ?<void (double)> {
    struct type __buf_;
    struct __base<void (double)> *__f_;
} function_754b78de;

typedef struct ?<void (float)> {
    struct type __buf_;
    struct __base<void (float)> *__f_;
} function_611ef6ed;

typedef struct ?<void (long)> {
    struct type __buf_;
    struct __base<void (long)> *__f_;
} function_2d7db078;

typedef struct ?<NSImage *(TFENode, double)> {
    struct function<NSImage *(TFENode, double)> {
        struct type _field1;
        struct __base<NSImage *(TFENode, double)> *_field2;
    } _field1;
    struct TNSRef<NSImage *(^)(TFENode, double)> _field2;
} function_a54c24b5;

typedef struct ?<bool (const TFENode &, TInfoExtractorData &)> {
    struct function<bool (const TFENode &, TInfoExtractorData &)> {
        struct type _field1;
        struct __base<bool (const TFENode &, TInfoExtractorData &)> *_field2;
    } _field1;
    struct TNSRef<bool (^)(const TFENode &, TInfoExtractorData &)> _field2;
} function_ee22d9c0;

typedef struct ?<void ()> {
    function_f9feaa7d fStandardFunction;
    struct TNSRef<void (^)()> fManagedBlock;
} function_e430924f;

typedef struct ?<void (const TFENode &)> {
    function_35ade228 fStandardFunction;
    struct TNSRef<void (^)(const TFENode &)> fManagedBlock;
} function_966f7bb5;

typedef struct ?<void (const TFENodeVector &, const TError &)> {
    function_85df7881 fStandardFunction;
    struct TNSRef<void (^)(const TFENodeVector &, const TError &)> fManagedBlock;
} function_40a2a9af;

typedef struct ?<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
    struct function<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
        struct type _field1;
        struct __base<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> *_field2;
    } _field1;
    struct TNSRef<void (^)(const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> _field2;
} function_31d84ef5;

typedef struct ?<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> {
    struct function<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> {
        struct type _field1;
        struct __base<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> *_field2;
    } _field1;
    struct TNSRef<void (^)(const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> _field2;
} function_87549439;

typedef struct ?<void (double)> {
    function_754b78de fStandardFunction;
    struct TNSRef<void (^)(double)> fManagedBlock;
} function_07d19d41;

typedef struct ?<void (float)> {
    function_611ef6ed fStandardFunction;
    struct TNSRef<void (^)(float)> fManagedBlock;
} function_db4eacf8;

typedef struct ?<void (long)> {
    function_2d7db078 fStandardFunction;
    struct TNSRef<void (^)(long)> fManagedBlock;
} function_1729d245;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    CDStruct_c3b9c2ee _field1;
    CDStruct_c3b9c2ee _field2;
} CDStruct_90e2a262;

// Template types
typedef struct TNSRef<TRenameOperation *> {
    TRenameOperation *fRef;
} TNSRef_34ef24c4;

typedef struct TNSRef<TTabViewItem *> {
    TTabViewItem *fRef;
} TNSRef_720ff929;

typedef struct TRef<TUndoableAction *, TRefCountedRetainReleasePolicy> {
    struct TUndoableAction *fRef;
} TRef_9e01da98;

typedef struct TThreadSafeQueue<TNSRef<TQueuedPopoverController *>> {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TConditionVariable _field3;
    struct IBaseQueueStyle<TNSRef<TQueuedPopoverController *>> *_field4;
    struct vector<TNSRef<TQueuedPopoverController *>, std::__1::allocator<TNSRef<TQueuedPopoverController *>>> _field5;
} TThreadSafeQueue_fb0c9da1;

typedef struct map<TFENode, CGRect, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGRect>>> {
    struct __tree<std::__1::__value_type<TFENode, CGRect>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, CGRect>>> {
        struct __tree_node<std::__1::__value_type<TFENode, CGRect>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_7cee3aba;

typedef struct map<TFENode, DataBrowserItemSpatialData, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, DataBrowserItemSpatialData>>> {
    struct __tree<std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, DataBrowserItemSpatialData>>> {
        struct __tree_node<std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, DataBrowserItemSpatialData>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_7453f4b3;

typedef struct set<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
    struct __tree<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
        struct __tree_node<TFENode, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TFENode, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TFENode>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_55a3e8f7;

typedef struct set<double, std::__1::less<double>, std::__1::allocator<double>> {
    struct __tree<double, std::__1::less<double>, std::__1::allocator<double>> {
        struct __tree_node<double, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<double, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<double>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_bb8d1d1f;

typedef struct shared_ptr<ISpawnOrigin> {
    struct ISpawnOrigin *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3b64c573;

typedef struct shared_ptr<TThumbnailExtractorController> {
    struct TThumbnailExtractorController *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0f967b3d;

typedef struct unordered_map<TFENode, TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENode>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TFENode>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TFENode>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_3cc67d30;

typedef struct unordered_map<TFENode, TNSRef<TDesktopIcon *>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TDesktopIcon *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIcon *>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_53fdab4d;

typedef struct unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>> {
    struct __hash_table<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>> {
        struct unique_ptr<std::__1::__hash_node<TFENode, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TFENode, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>, std::__1::allocator<std::__1::__hash_node<TFENode, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TFENode, void *>*> {
                struct __hash_node<TFENode, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TFENode>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TFENode>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_set_b5868ef5;

typedef struct vector<Browser::ColumnDesc, std::__1::allocator<Browser::ColumnDesc>> {
    struct ColumnDesc *_field1;
    struct ColumnDesc *_field2;
    struct __compressed_pair<Browser::ColumnDesc *, std::__1::allocator<Browser::ColumnDesc>> {
        struct ColumnDesc *_field1;
    } _field3;
} vector_abc0d4d8;

typedef struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *_field1;
    struct CGPoint *_field2;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *_field1;
    } _field3;
} vector_e1abc270;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__first_;
    } __end_cap_;
} vector_b8c73e0a;

typedef struct vector<DataBrowserItemSpatialData, std::__1::allocator<DataBrowserItemSpatialData>> {
    struct DataBrowserItemSpatialData *__begin_;
    struct DataBrowserItemSpatialData *__end_;
    struct __compressed_pair<DataBrowserItemSpatialData *, std::__1::allocator<DataBrowserItemSpatialData>> {
        struct DataBrowserItemSpatialData *__first_;
    } __end_cap_;
} vector_3577cbd0;

typedef struct vector<TAccessControlInfo, std::__1::allocator<TAccessControlInfo>> {
    struct TAccessControlInfo *_field1;
    struct TAccessControlInfo *_field2;
    struct __compressed_pair<TAccessControlInfo *, std::__1::allocator<TAccessControlInfo>> {
        struct TAccessControlInfo *_field1;
    } _field3;
} vector_27cb8753;

typedef struct vector<TBrowserContainerController *, std::__1::allocator<TBrowserContainerController *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<TBrowserContainerController **, std::__1::allocator<TBrowserContainerController *>> {
        id *_field1;
    } _field3;
} vector_3a4056b3;

typedef struct vector<TFENodePropertyList, std::__1::allocator<TFENodePropertyList>> {
    struct TFENodePropertyList *_field1;
    struct TFENodePropertyList *_field2;
    struct __compressed_pair<TFENodePropertyList *, std::__1::allocator<TFENodePropertyList>> {
        struct TFENodePropertyList *_field1;
    } _field3;
} vector_d50fdf79;

typedef struct vector<TNSRef<TLayer *>, std::__1::allocator<TNSRef<TLayer *>>> {
    struct TNSRef<TLayer *> *_field1;
    struct TNSRef<TLayer *> *_field2;
    struct __compressed_pair<TNSRef<TLayer *>*, std::__1::allocator<TNSRef<TLayer *>>> {
        struct TNSRef<TLayer *> *_field1;
    } _field3;
} vector_932ac0be;

typedef struct vector<TNSRef<TTabViewItem *>, std::__1::allocator<TNSRef<TTabViewItem *>>> {
    TNSRef_720ff929 *__begin_;
    TNSRef_720ff929 *__end_;
    struct __compressed_pair<TNSRef<TTabViewItem *>*, std::__1::allocator<TNSRef<TTabViewItem *>>> {
        TNSRef_720ff929 *__first_;
    } __end_cap_;
} vector_51cfce5f;

typedef struct vector<TTypedData, std::__1::allocator<TTypedData>> {
    struct TTypedData *__begin_;
    struct TTypedData *__end_;
    struct __compressed_pair<TTypedData *, std::__1::allocator<TTypedData>> {
        struct TTypedData *__first_;
    } __end_cap_;
} vector_3d8babec;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
} vector_e0f2bd7e;

