//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "TBaseBrowserWindowController.h"

#import "BrowserContainerDelegate.h"
#import "BrowserContainerSearching.h"
#import "BrowserContainerTargeting.h"
#import "NSDraggingDestination.h"
#import "NSWindowDelegate.h"
#import "TValidatorClientProtocol.h"

@class NSString, NSTimer, TBrowserContainerController, TNodeViewSettings, TStatusBarController, TToolbarController;

@interface TBrowserWindowController : TBaseBrowserWindowController <NSWindowDelegate, NSDraggingDestination, BrowserContainerTargeting, BrowserContainerSearching, BrowserContainerDelegate, TValidatorClientProtocol>
{
    struct TNSRef<TTabViewController *> _tabViewController;
    shared_ptr_3b64c573 _spawnOrigin;
    _Bool _windowIsClosing;
    struct TNSRef<NSButton *> _closeButton;
    TToolbarController *_toolbarController;
    TStatusBarController *_statusBarController;
    NSTimer *_springToFrontTimer;
    struct CGRect _springAnchorRect;
    struct OpaqueCoreDragHandler *_springTrackingHandler;
    struct CGRect _springRememberedFrame;
    long long _springRememberedWindowWeWereBehind;
    TNSRef_720ff929 _springRememberedTab;
    _Bool _springCloseWhenDragLeavesWindow;
    _Bool _initingWindow;
    _Bool _isZooming;
    _Bool _windowStateSavePending;
    _Bool _animatingTabMerge;
    struct CGRect _nonFullScreenWindowFrame;
    struct CGRect _fullScreenWindowFrame;
    struct TNSRef<NSWindow *> _coverWindow;
    struct TFullScreenAnimationInfo *_fullScreenAnimationInfo;
    double _nonFullScreenSplitterPosition;
    CDUnknownBlockType _fullScreenExitCallback;
    TBrowserContainerController *_activeContainer;
}

+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (_Bool)shouldForwardSelectorToContainer:(SEL)arg1;
+ (_Bool)shouldShowStatusBar;
+ (_Bool)shouldShowTabView;
+ (void)springNowWithNoSpringController;
+ (void)springImmediately;
+ (double)windowStaggerOffset;
+ (id)windowStateForNode:(const struct TFENode *)arg1 forceContainer:(_Bool)arg2;
+ (id)defaultWindowStateForNode:(const struct TFENode *)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) TBrowserContainerController *activeContainer; // @synthesize activeContainer=_activeContainer;
@property(readonly, nonatomic) TStatusBarController *statusBarController; // @synthesize statusBarController=_statusBarController;
@property(nonatomic) _Bool animatingTabMerge; // @synthesize animatingTabMerge=_animatingTabMerge;
@property(nonatomic) _Bool isZooming; // @synthesize isZooming=_isZooming;
@property(nonatomic) _Bool initingWindow; // @synthesize initingWindow=_initingWindow;
@property(nonatomic) _Bool windowStateSavePending; // @synthesize windowStateSavePending=_windowStateSavePending;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setSidebarWidth:(double)arg1 snapToOptimalWidth:(_Bool)arg2;
- (double)sidebarWidth;
- (void)automateRetarget;
- (void)automateRetarget:(const struct TFENodeVector *)arg1;
- (void)automateRetargetForIconViewWithTimes:(unsigned long long)arg1;
- (void)automateRetargetIconViewChanged;
- (void)automateIconResize;
- (void)automateLiveScroll;
- (void)springRemoveDragTrackingHandler;
- (void)springInstallDragTrackingHandler;
- (void)configureAccessoryViews;
- (void)viewSwitcherAction:(id)arg1;
- (void)tearDownPersistentViews;
- (void)configurePersistentViewsWithState:(id)arg1;
- (void)updateViewLayout;
- (void)updateViewLayout:(_Bool)arg1;
- (void)configureWindowForContentChange;
- (void)setMinimumSizeForWindowContent;
- (struct CGSize)minimumContentSize;
- (struct CGSize)idealContentSize;
- (id)windowContentView;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)destroyContainerControllers;
- (void)windowDidResize:(id)arg1;
- (void)windowDidEndMove:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidChange;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)showOrHideScrollbars:(_Bool)arg1;
- (void)animateToOrFromFullScreenWithDuration:(double)arg1;
- (double)lastVisibleToolbarItemWidth;
- (_Bool)fullScreenAnimationInProgress;
- (void)prepareToAnimateToFullScreen:(_Bool)arg1;
- (void)prepareAnimateFromInfo:(struct TFullScreenAnimationInfo *)arg1;
- (void)prepareAnimateToInfo:(struct TFullScreenAnimationInfo *)arg1;
- (struct CGRect)titleBarRect;
- (void)prepareFullScreenAnimationInfo:(struct TFullScreenAnimationInfo *)arg1;
- (void)setShowsTitleBarViews:(_Bool)arg1;
- (void)prepareNonFullScreenAnimationInfo:(struct TFullScreenAnimationInfo *)arg1;
- (void)setExitFullScreenCallback:(CDUnknownBlockType)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)prepareWindowsToAnimateToFullScreen:(_Bool)arg1 forWindow:(id)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (void)setSidebarForFullScreen:(_Bool)arg1;
- (_Bool)useDefaultFullScreenAnimation;
- (void)containerCloseContainer:(id)arg1;
- (void)container:(id)arg1 updateWindowSize:(struct CGSize)arg2;
- (void)container:(id)arg1 updateWindowFrame:(struct CGRect)arg2;
- (void)containerWindowDidChange:(id)arg1;
- (void)containerContentChanged:(id)arg1;
- (void)containerSelectionChanged:(id)arg1;
- (_Bool)containerInBrowseMode:(id)arg1;
- (id)containerParentView:(id)arg1;
- (id)containerWindow:(id)arg1;
- (void)toolbarUpdateForSplitterChange;
- (id)toolbarHistorySearchTemplate;
- (_Bool)toolbarMakeSearchFieldFirstResponder;
- (id)toolbarSearchField;
- (_Bool)toolbarSearchFieldIsVisible;
- (id)containerQuerySearchUTIs:(id)arg1;
- (void)containerForgetSpringState:(id)arg1;
- (void)container:(id)arg1 adjustProposedTargetPath:(struct TFENodeVector *)arg2;
- (void)containerTargetDidChange:(id)arg1;
- (void)containerTargetWillChange:(id)arg1;
- (void)containerViewStyleChanged:(id)arg1;
- (void)pathPopupSelectedWithNode:(const struct TFENode *)arg1;
- (_Bool)shouldEnablePathMenuItem:(id)arg1 forNode:(const struct TFENode *)arg2;
- (void)cmdSearchFromToolbar:(id)arg1;
- (_Bool)canSetFocusToSearchField;
- (void)cmdToggleStatusBar:(id)arg1;
- (_Bool)validateToggleStatusBar:(id)arg1;
- (_Bool)validateRunToolbarCustomizationPalette:(id)arg1;
- (void)runToolbarCustomizationPalette:(id)arg1;
- (void)cmdToggleToolbar:(id)arg1;
- (_Bool)validateToggleToolbar:(id)arg1;
- (void)cmdClose:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (BOOL)validateToolbarItem:(id)arg1;
- (_Bool)containerValidateToolbarItem:(id)arg1;
- (_Bool)validateTargetForMenuItem:(id)arg1;
- (void)copySearchFieldFromOther:(id)arg1;
- (void)addingSearchToolbarItem:(id)arg1;
- (void)searchFieldTextChanged;
- (void)configureStatusBar:(_Bool)arg1 mode:(_Bool)arg2;
- (void)toggleStatusBarVisibility:(_Bool)arg1 animate:(_Bool)arg2 mode:(_Bool)arg3;
- (void)resizeForStatusBarChange:(struct CGSize)arg1 animate:(_Bool)arg2 browseMode:(_Bool)arg3;
- (double)statusBarHeightDeltaForVisibility:(_Bool)arg1 mode:(_Bool)arg2;
- (void)configureWindowFrameForStatusBarVisible:(_Bool)arg1 mode:(_Bool)arg2;
- (_Bool)statusBarIsVisible;
- (id)splitViewForToolbarAlignment;
- (_Bool)toolbarIsVisible;
- (id)toolbar;
- (void)cmdMoveTabToNewWindow:(id)arg1;
- (_Bool)validateMoveTabToNewWindow:(id)arg1;
- (void)cmdSelectNextTab:(id)arg1;
- (_Bool)validateSelectNextTab:(id)arg1;
- (void)cmdSelectPreviousTab:(id)arg1;
- (_Bool)validateSelectPreviousTab:(id)arg1;
- (void)cmdSelectTab:(id)arg1;
- (void)cmdCloseOtherTabs:(id)arg1;
- (_Bool)validateCloseOtherTabs:(id)arg1;
- (void)cmdCloseTab:(id)arg1;
- (_Bool)validateCloseTab:(id)arg1;
- (_Bool)validatePerformClose:(id)arg1;
- (void)cmdNewTab:(id)arg1;
- (_Bool)validateNewTab:(id)arg1;
- (void)selectTabForContainer:(id)arg1;
- (void)closeTrashTabs;
- (void)closeOtherTabs:(id)arg1;
- (void)closeTab:(id)arg1;
- (void)closeICloudTabs;
- (void)closeActiveTab;
- (void)newTab;
- (void)makeTabWithTarget:(const struct TFENode *)arg1 makeActive:(_Bool)arg2 addAfterActiveTab:(_Bool)arg3;
- (void)ubiquityIdentityChanged:(id)arg1;
- (void)selectOrCreateTabWithTarget:(const struct TFENode *)arg1 windowOptions:(id)arg2 addAfterActiveTab:(_Bool)arg3;
- (void)hideTabViewForBackup;
- (void)showTabViewForBackup;
- (void)configureTabView:(int)arg1 constrainResize:(_Bool)arg2;
- (void)cmdToggleTabView:(id)arg1;
- (void)setDefaultTabVisibility;
- (void)setTabVisibility:(int)arg1;
- (void)configureForFullScreen:(_Bool)arg1;
- (_Bool)validateToggleTabView:(id)arg1;
- (void)tabDidBecomeActive:(id)arg1;
- (void)addTabInfoToAlias:(const struct TFENode *)arg1;
- (void)getTabRectsForContainers:(const vector_3a4056b3 *)arg1 proposedRects:(vector_b8c73e0a *)arg2;
- (void)addContainers:(id)arg1;
- (void)setIsMergingTabs;
- (id)allContainers;
- (id)backupDelegate;
- (id)activeBrowserViewController;
- (id)activeBaseBrowserViewController;
- (struct CGRect)frameForContainer;
- (id)firstContainerWithTarget:(const struct TFENode *)arg1;
- (_Bool)tabViewIsVisible;
- (long long)tabCount;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (_Bool)isSprungAwayFromOriginalTarget;
- (void)revertToPreviousSpringState;
- (_Bool)windowIsSpringing;
- (void)setCloseWhenDragLeavesWindow;
- (void)forgetSpringState;
- (void)springWindowFromTimer:(id)arg1;
- (void)springNow;
- (struct CGRect)rememberSpringState;
- (void)springDragInsideWindow:(struct OpaqueCoreDrag *)arg1;
- (void)springDragLeaveWindow:(struct OpaqueCoreDrag *)arg1;
- (void)springDragEnterWindow:(struct OpaqueCoreDrag *)arg1;
- (void)springUpdateAnchorRect:(struct OpaqueCoreDrag *)arg1;
- (void)stopSpringToFrontTimer;
- (void)setInBrowseMode:(_Bool)arg1;
- (void)animateToBrowseMode:(_Bool)arg1;
- (void)getBrowseModeAnimationInfo:(struct TBrowseModeAnimationInfo *)arg1;
- (void)getContainerModeAnimationInfo:(struct TBrowseModeAnimationInfo *)arg1;
- (void)configureForBrowseMode:(_Bool)arg1;
- (void)createWindowImage:(struct CGImage **)arg1 includeShadow:(_Bool)arg2;
- (void)createImage:(struct CGImage **)arg1 andFrame:(struct CGRect *)arg2 forView:(id)arg3;
- (void)createImage:(struct CGImage **)arg1 andFrame:(struct CGRect *)arg2 forChildrenOfView:(id)arg3;
- (void)createShadowImage:(struct CGImage **)arg1 andFrame:(struct CGRect *)arg2 andContentFrame:(struct CGRect *)arg3 forWindow:(id)arg4;
- (void)configureWindowForMode:(_Bool)arg1;
- (void)configureWindowForFullScreen:(_Bool)arg1;
- (_Bool)inBrowseMode;
- (void)resizeWindowWithSize:(struct CGSize)arg1 animate:(_Bool)arg2;
- (void)setWindowFrame:(struct CGRect)arg1 animate:(_Bool)arg2;
- (_Bool)isDesktop;
- (long long)windowNumber;
- (id)browserWindow;
- (struct TFENode)fetchWindowProxyNode;
- (_Bool)shouldStaggerWindowPositionsForWindowState:(id)arg1;
- (void)finishAnimatingTabMerge;
- (void)closeWithoutAnimation;
- (void)close;
- (void)handleCloseButton;
- (struct CGRect)finderScriptingContentRectForFrameRect:(const struct CGRect *)arg1;
- (struct CGRect)finderScriptingFrameRectForContentRect:(const struct CGRect *)arg1;
- (unsigned int)finderScriptingModelKind;
- (void)closeOrRetargetWindowForTarget:(const struct TFENode *)arg1 toPath:(const struct TFENodeVector *)arg2 originatingBrowser:(long long)arg3;
- (struct TFENode)target;
- (BOOL)shouldCascadeWindows;
- (void)configureWindowForTargetChange;
- (void)configureWindowWithState:(id)arg1 targetPath:(const struct TFENodeVector *)arg2;
- (void)unlockOverlayScrollerStateOnMainThread;
- (void)configureWindowCloseButton;
- (void)configureAndPlaceWindowWithState:(id)arg1;
- (struct CGRect)forceFrameToMainScreen:(struct CGRect)arg1;
- (void)configureWindowForBackup;
- (struct CGRect)pinWindowFrame:(struct CGRect)arg1 toScreenContainingPoint:(struct CGPoint)arg2 includingMouse:(_Bool)arg3;
- (void)showOnOpen:(_Bool)arg1;
- (_Bool)windowStateIsValid:(id)arg1;
- (id)windowState;
- (id)containerWindowState:(id)arg1;
- (id)restorableWindowState;
- (id)containerStateForAllTabs;
- (id)windowStateWithContainer:(id)arg1 forFinderWindowRestore:(_Bool)arg2;
- (void)requestSaveWindowState;
- (void)saveWindowState;
- (struct TString)pathPrettyStringForNode:(struct TFENode)arg1;
- (struct TString)titleForICloudContainer:(const struct TFENode *)arg1;
- (void)popupPathForNode:(const struct TFENode *)arg1 outPath:(struct TFENodeVector *)arg2;
- (_Bool)nodeIsAnICloudRoot:(const struct TFENode *)arg1;
- (int)cloudFolderTypeForNode:(const struct TFENode *)arg1;
- (void)dealloc;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)drawCompletelyIntoBackBuffer;
- (void)makeKeyAndOrderFront;
- (void)searchFieldCancel;
- (void)searchWasChanged;
@property(retain, nonatomic) TNodeViewSettings *viewSettings;
- (id)viewStyle;
- (void)windowDidLoad;
- (Class)browserContainerClass;
- (id)initWithState:(id)arg1;
- (id)initWithTargetPath:(const struct TFENodeVector *)arg1 forceContainer:(_Bool)arg2 spawnOrigin:(shared_ptr_3b64c573)arg3 desiredLocation:(struct CGPoint)arg4 creationState:(id)arg5;
- (id)initWithTargetPath:(const struct TFENodeVector *)arg1 forceContainer:(_Bool)arg2 spawnOrigin:(shared_ptr_3b64c573)arg3 desiredLocation:(struct CGPoint)arg4;
- (id)initForBackupWithState:(id)arg1 targetPath:(const struct TFENodeVector *)arg2;
- (id)initWithState:(id)arg1 targetPath:(const struct TFENodeVector *)arg2 spawnOrigin:(shared_ptr_3b64c573)arg3;
- (id)init;
- (id)windowNibName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

