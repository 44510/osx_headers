//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "BRCProcessMonitorDelegate.h"
#import "BRProtocol.h"

@class BRCAccountSession, NSMutableSet, NSSet, NSString, NSXPCConnection;

__attribute__((visibility("hidden")))
@interface BRCXPCClient : NSObject <BRProtocol, BRCProcessMonitorDelegate>
{
    BRCAccountSession *_accountSession;
    BOOL _dieOnInvalidate;
    BOOL _isForeground;
    BOOL _invalidated;
    BOOL _entitlementsCached;
    BOOL _isProxyEntitled;
    int _clientPid;
    NSString *_debugIdentifier;
    NSMutableSet *_containers;
    NSString *_applicationIdenfier;
    NSString *_defaultContainerID;
    NSSet *_entitledContainerIDs;
    BOOL _isUsingUbiquity;
    NSXPCConnection *_connection;
}

@property(nonatomic) BOOL isUsingUbiquity; // @synthesize isUsingUbiquity=_isUsingUbiquity;
@property(readonly, nonatomic) BOOL dieOnInvalidate; // @synthesize dieOnInvalidate=_dieOnInvalidate;
@property(readonly, nonatomic) __weak NSXPCConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (id)_enabledBundleIDs;
- (void)_setupContainerID:(id)arg1 andSendReply:(CDUnknownBlockType)arg2;
- (void)_startDownloadItemsAtURLs:(id)arg1 pos:(unsigned long long)arg2 options:(unsigned long long)arg3 error:(id)arg4 reply:(CDUnknownBlockType)arg5;
- (void)_addExternalDocumentReferenceTo:(id)arg1 underParent:(id)arg2 forceReparent:(BOOL)arg3 reply:(CDUnknownBlockType)arg4;
- (id)setupContainer:(id)arg1 root:(id)arg2 error:(id *)arg3;
- (id)issueContainerExtensionForURL:(id)arg1 error:(id *)arg2;
- (BOOL)canAccessPhysicalURL:(id)arg1;
- (void)accessLogicalOrPhysicalURL:(id)arg1 needsWrite:(BOOL)arg2 asynchronously:(BOOL)arg3 handler:(CDUnknownBlockType)arg4;
- (BOOL)canAccessPath:(const char *)arg1 needsWrite:(BOOL)arg2;
- (id)copyContainerIDsForPid:(int)arg1 error:(id *)arg2;
- (id)_containerIDsForPid:(int)arg1;
@property(readonly, nonatomic) NSString *bundleID;
- (BOOL)_isContainerProxyEntitled;
@property(readonly, nonatomic) NSSet *entitledContainerIDs;
@property(readonly, nonatomic) NSString *defaultContainerID;
- (void)__cacheEntitlements;
- (BOOL)_entitlementBooleanValueForKey:(id)arg1;
- (id)_entitlementValueForKey:(id)arg1 ofClass:(Class)arg2;
- (BOOL)_hasPrivateIPCEntitlementForSelector:(SEL)arg1 error:(id *)arg2;
- (BOOL)isSandboxed;
- (BOOL)_isContainerProxyWithError:(id *)arg1;
- (BOOL)_canCreateContainerWithID:(id)arg1 error:(id *)arg2;
- (BOOL)_hasAccessToContainerID:(id)arg1 error:(id *)arg2;
- (BOOL)_isContainerAccessAllowed;
- (BOOL)_cloudEnabledStatusForContainerIDs:(id)arg1 bundleID:(id)arg2 auditToken:(CDStruct_6ad76789)arg3;
- (BOOL)cloudEnabledStatusForPID:(int)arg1;
- (BOOL)cloudEnabledStatus;
- (unsigned long long)loggedStatus;
- (void)_stopMonitoringProcess;
- (void)removeContainer:(id)arg1;
- (void)addContainer:(id)arg1;
- (void)_startMonitoringProcessIfNeeded;
- (void)process:(int)arg1 didBecomeForeground:(BOOL)arg2;
@property(readonly, copy) NSString *description;
- (void)invalidate;
- (void)_mutateToLoggedInClientWithSession:(id)arg1;
- (id)initWithConnection:(id)arg1 accountSession:(id)arg2;
- (void)performiWorkPublishingOperationAtURL:(id)arg1 forPublish:(BOOL)arg2 readonly:(BOOL)arg3 reply:(CDUnknownBlockType)arg4;
- (void)forceConflictForURL:(id)arg1 bookmarkData:(id)arg2 forcedEtag:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)getPublishedURLForItemAtURL:(id)arg1 forStreaming:(BOOL)arg2 requestedTTL:(unsigned long long)arg3 reply:(CDUnknownBlockType)arg4;
- (void)getIsContainerWithIDOverQuota:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)getContainerLastServerUpdateWithID:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)getContainerStatusWithID:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)getApplicationStatusWithPID:(int)arg1 reply:(CDUnknownBlockType)arg2;
- (void)getApplicationStatus:(CDUnknownBlockType)arg1;
- (void)getTheoriticalContainerURLWithID:(id)arg1 forPID:(int)arg2 reply:(CDUnknownBlockType)arg3;
- (void)getTheoriticalContainerURLWithID:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)resolveBookmarkDataToURL:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)getBookmarkDataForURL:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)getMigrationStatusForPrimaryiCloudAccount:(CDUnknownBlockType)arg1;
- (oneway void)forceAccountUpdateAfterMigration;
- (void)getContainersNeedingUpload:(CDUnknownBlockType)arg1;
- (void)currentAccountCopyTokenWithBundleID:(id)arg1 version:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)currentAccountLogoutWithReply:(CDUnknownBlockType)arg1;
- (void)currentAccountCreateWithID:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)currentAccountIsUsingUbiquityWithReply:(CDUnknownBlockType)arg1;
- (void)reclaimAmount:(long long)arg1 withUrgency:(int)arg2 reply:(CDUnknownBlockType)arg3;
- (void)purgeAmount:(long long)arg1 withUrgency:(int)arg2 reply:(CDUnknownBlockType)arg3;
- (void)computePurgableSpaceWithUrgency:(int)arg1 reply:(CDUnknownBlockType)arg2;
- (void)waitForFileSystemChangeProcessingWithReply:(CDUnknownBlockType)arg1;
- (void)forceSyncContainerID:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (oneway void)log:(const char *)arg1 function:(const char *)arg2 source:(const char *)arg3 line:(int)arg4 message:(id)arg5;
- (void)gatherInformationForPath:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)dumpDatabaseTo:(id)arg1 containerID:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)printStatus:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)performSelfCheck:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)resetBudgets:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)setupInstanceWithDict:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)resolveConflictWithName:(id)arg1 atURL:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)getContainerForURL:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)getContainersByID:(CDUnknownBlockType)arg1;
- (oneway void)bundleDidAccessExternalDocument:(id)arg1;
- (void)addExternalDocumentReferenceTo:(id)arg1 forPid:(int)arg2 inContainer:(id)arg3 underParent:(id)arg4 reply:(CDUnknownBlockType)arg5;
- (void)getApplicationDocumentUsageInfoForBundleID:(id)arg1 withReply:(CDUnknownBlockType)arg2;
- (void)getTotalApplicationDocumentUsageWithReply:(CDUnknownBlockType)arg1;
- (void)getNonLocalVersionSenderWithReceiver:(id)arg1 documentURL:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)getItemUpdateSenderWithReceiver:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)thumbnailChangedForItemAtURL:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)evictItemAtURL:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)startDownloadItemsAtURLs:(id)arg1 options:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;
- (void)getAttributeValues:(id)arg1 forItemAtURL:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)getNotificationInfoAtURL:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)registerInitialSyncBarrierForID:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (oneway void)updateContainerMetadataForID:(id)arg1 bundleID:(id)arg2;
- (void)getContainerURLForID:(id)arg1 forPid:(int)arg2 reply:(CDUnknownBlockType)arg3;
- (void)getContainerURLForID:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (oneway void)checkinAskClientIfUsingUbiquity:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

