//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSViewController.h"

#import "D2DInquiryDelegate.h"
#import "D2DPairingDelegate.h"
#import "NSMenuDelegate.h"
#import "NSTableViewDelegate.h"

@class BluetoothHIDDeviceController, D2DProtocolManager, D2DSortedArrayController, NSAlert, NSArray, NSButton, NSImage, NSImageView, NSMutableArray, NSMutableDictionary, NSPanel, NSProgressIndicator, NSString, NSTableView, NSTextField, NSTrackingArea, NSView;

@interface D2DCollectionView : NSViewController <D2DInquiryDelegate, D2DPairingDelegate, NSMenuDelegate, NSTableViewDelegate>
{
    BOOL mAutoAdjustButtonSize;
    BOOL mUserPasscode;
    NSTableView *mDeviceTable;
    D2DSortedArrayController *mDevicesArray;
    NSAlert *mAlert;
    NSPanel *mPairingViewPanel;
    NSView *mPairingView;
    NSTextField *mPairingText;
    NSTextField *mPairingHeader;
    NSView *mPairViewPlaceholder;
    id <D2DPairViewController> mPairViewController;
    NSView *mOptionsViewPlaceholder;
    NSPanel *mPairingOptionsPanel;
    NSView *mPairingOptionsView;
    NSTextField *mPairingPasscode;
    NSTextField *mPairingOptionsText;
    NSTextField *mPairingOptionsHeader;
    NSPanel *mUnpairWarningPanel;
    NSView *mUnpairWarningView;
    NSTextField *mUnpairWarningText;
    NSTextField *mUnpairWarningHeader;
    NSPanel *mPrinterPanel;
    NSView *mPrinterView;
    NSTextField *mPrinterViewText;
    NSTextField *mPrinterViewHeader;
    NSProgressIndicator *mProgressIndicator;
    NSButton *mRemoveSelected;
    NSString *mPairButton;
    BluetoothHIDDeviceController *_hidDeviceController;
    NSMutableDictionary *mPairingDeviceDict;
    NSMutableDictionary *mUnpairingDeviceDict;
    D2DProtocolManager *mProtocolManager;
    int mDeviceClassFilter;
    int mDeviceSubclassFilter;
    struct IOBluetoothDeviceSearchAttributes *mSearchAttributes;
    id <D2DInquiry> mInquiry;
    BOOL mNoInquiryCache;
    int mInquiryCacheTimeout;
    BOOL mBluetoothPowerOn;
    int mPairedDeviceCount;
    NSArray *mTopLevelObjects;
    NSTrackingArea *mDeviceTableTrackingArea;
    NSMutableDictionary *mDevicesGroupDict;
    NSImage *mAlertImage;
    NSImage *mPrefPane;
    NSImageView *mPrefIcon;
    BOOL mPairing;
    BOOL mSearching;
    int mInternalStopped;
    BOOL mStopped;
    BOOL mBackGround;
    BOOL mSimplePairingReceived;
    BOOL mDoubleClickNotify;
    BOOL mPerformingRename;
    BOOL mUpdateBattery;
    BOOL mMenuOpen;
    NSMutableArray *mDeviceArrayTmp;
}

+ (id)listViewForDevicesOfAttributes:(struct IOBluetoothDeviceSearchAttributes *)arg1;
+ (id)listViewForDevicesOfClass:(int)arg1 subclass:(int)arg2;
@property BOOL backGround; // @synthesize backGround=mBackGround;
@property NSString *pairButton; // @synthesize pairButton=mPairButton;
@property NSImage *prefPaneIcon; // @synthesize prefPaneIcon=mPrefPane;
@property BOOL bluetoothPowerOn; // @synthesize bluetoothPowerOn=mBluetoothPowerOn;
@property BOOL stopped; // @synthesize stopped=mStopped;
@property int internalStopped; // @synthesize internalStopped=mInternalStopped;
@property BOOL searching; // @synthesize searching=mSearching;
@property BOOL pairing; // @synthesize pairing=mPairing;
@property BOOL userPasscode; // @synthesize userPasscode=mUserPasscode;
@property(retain) NSMutableDictionary *unpairingDeviceDict; // @synthesize unpairingDeviceDict=mUnpairingDeviceDict;
@property(retain) NSMutableDictionary *pairingDeviceDict; // @synthesize pairingDeviceDict=mPairingDeviceDict;
@property(retain) NSMutableDictionary *devicesGroup; // @synthesize devicesGroup=mDevicesGroupDict;
@property struct IOBluetoothDeviceSearchAttributes *deviceSearchAttributes; // @synthesize deviceSearchAttributes=mSearchAttributes;
@property int deviceSubclassFilter; // @synthesize deviceSubclassFilter=mDeviceSubclassFilter;
@property int deviceClassFilter; // @synthesize deviceClassFilter=mDeviceClassFilter;
@property int inquiryCacheTimeout; // @synthesize inquiryCacheTimeout=mInquiryCacheTimeout;
@property BOOL noInquiryCache; // @synthesize noInquiryCache=mNoInquiryCache;
@property(retain) id <D2DInquiry> inquiry; // @synthesize inquiry=mInquiry;
- (void)simplePairing:(id)arg1 status:(unsigned char)arg2;
- (void)batteryNotification:(id)arg1;
- (void)_updateBatteryNotification:(id)arg1 selected:(BOOL)arg2;
- (void)pairingComplete:(id)arg1 error:(id)arg2;
- (void)pairingUserPasskeyNotification:(id)arg1 passkey:(unsigned long long)arg2;
- (void)pairingUserConfirmationRequest:(id)arg1 numericValue:(unsigned long long)arg2;
- (void)pairingPINCodeRequest:(id)arg1;
- (void)pairingKeyEvent:(id)arg1 eventType:(int)arg2;
- (void)pairingConnecting:(id)arg1;
- (void)pairingStarted:(id)arg1;
- (void)continueInquiryUpdate;
- (void)inquiryComplete:(id)arg1 error:(id)arg2;
- (void)inquiry:(id)arg1 updatedDevice:(id)arg2;
- (void)updateInquiryWithDelay:(id)arg1;
- (void)inquiry:(id)arg1 foundDevice:(id)arg2;
- (void)inquiryStarted:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)_beginRenameForRow:(long long)arg1;
- (void)sendUpdateFromValueTransform:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)sendOPPAppleEventWithDevice:(id)arg1;
- (void)sendOPPAppleEvent;
- (void)sendFTPAppleEventWithDevice:(id)arg1;
- (void)sendFTPAppleEvent;
- (void)handleSendFileToDevice:(id)arg1;
- (void)handleBrowseDevice:(id)arg1;
- (void)handlePANDeviceDisconnect:(id)arg1;
- (BOOL)checkActivePAN:(id)arg1;
- (void)handlePANDevice:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_powerOff:(id)arg1;
- (void)_powerOn:(id)arg1;
- (void)loadView;
- (void)stopSearch;
- (void)pauseSearch;
- (void)startSearch;
- (long long)getSelectedRowCount;
- (id)getSelectedRow;
- (void)cancelGoBack:(id)arg1;
- (void)continueUnpairing:(id)arg1;
- (void)pairUsingOptions:(id)arg1;
- (void)pairingOptions:(id)arg1;
- (void)returnToTable:(id)arg1;
- (void)cancelUnpairing:(id)arg1;
- (void)cancelPairing:(id)arg1;
- (void)cleanAfterIncomingPairing;
- (void)pairUnpairSelectedDevice:(id)arg1;
- (void)dealloc;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)prefPaneBackground;
- (void)_hitTestWithEvent:(id)arg1;
- (void)_updateTrackingArea;
- (void)_animateDisplayingTableUI;
- (void)printerAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_animateDisplayingPrinterUI;
- (void)_animateDisplayingUnpairingUI:(id)arg1;
- (void)pairAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_animateDisplayingPairingUI:(id)arg1;
- (void)unpairAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)_setupUnpairingUI:(id)arg1;
- (void)pairOptionsAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_setupPairingOptionsUI:(id)arg1;
- (void)setDoubleClickNotify;
- (void)_tableDoubleClick:(id)arg1;
- (void)_menuCancel:(id)arg1;
- (void)_menuUnpair:(id)arg1;
- (void)_menuRename:(id)arg1;
- (void)_menuPair:(id)arg1;
- (void)_menuDisconnect:(id)arg1;
- (void)_menuConnect:(id)arg1;
- (void)_restartInquiry:(id)arg1;
- (void)_resumeInquiry;
- (void)_pauseInquiry;
- (void)_unpairDeviceInDictionary:(id)arg1 skipWarning:(BOOL)arg2;
- (void)_unpairDeviceInDictionary:(id)arg1;
- (void)_pairDeviceInDictionary:(id)arg1;
- (void)_updatePairedDeviceCount;
- (void)_updatePairedDevices:(id)arg1;
- (id)_statusString:(id)arg1;
- (void)_updatePairedDevicesDelay:(id)arg1;
- (void)_deviceConnectDisconnect:(id)arg1;
- (void)_loadD2DPairingNib;
@property(retain) NSButton *pairUnpairButton;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

