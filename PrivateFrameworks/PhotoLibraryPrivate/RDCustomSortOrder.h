//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSDictionary, NSObject<OS_dispatch_queue>, NSSet, NSString, RDDatabase;

@interface RDCustomSortOrder : NSObject
{
    NSArray *_customEntries;
    NSDictionary *_uuidToCustomEntry;
    NSSet *_badCustomEntries;
    RDDatabase *_database;
    NSString *_purpose;
    NSString *_containerUuid;
    struct __CFArray *_observers;
    long long _notifyLevel;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)removeUuids:(id)arg1 fromDatabase:(id)arg2;
+ (id)insertUuids:(id)arg1 beforeUuid:(id)arg2 fromDatabase:(id)arg3;
+ (id)insertUuids:(id)arg1 afterUuid:(id)arg2 fromDatabase:(id)arg3;
+ (id)replaceUuids:(id)arg1 withUuid:(id)arg2 fromDatabase:(id)arg3;
+ (id)replaceUuid:(id)arg1 withUuid:(id)arg2 appendUuids:(id)arg3 removeUuids:(id)arg4 fromDatabase:(id)arg5;
+ (id)replaceUuid:(id)arg1 withUuid:(id)arg2 appendUuids:(id)arg3 fromDatabase:(id)arg4;
+ (id)purposesForContainerUuid:(id)arg1 fromDatabase:(id)arg2;
+ (id)containersWithCustomOrdersContainingAnyOfUuids:(id)arg1 fromDatabase:(id)arg2;
+ (void)removeFromAllCustomOrders:(id)arg1 fromDatabase:(id)arg2;
+ (id)loadCustomEntriesForContainerUuids:(id)arg1 purpose:(id)arg2 fromDatabase:(id)arg3;
+ (id)convertVersionsToUuids:(id)arg1;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) long long notifyLevel; // @synthesize notifyLevel=_notifyLevel;
@property(nonatomic) struct __CFArray *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSString *containerUuid; // @synthesize containerUuid=_containerUuid;
@property(retain, nonatomic) NSString *purpose; // @synthesize purpose=_purpose;
@property(nonatomic) __weak RDDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (id)sortVersionUuids:(id)arg1 forAlbum:(id)arg2;
- (id)sortItems:(id)arg1 ascending:(BOOL)arg2;
- (id)sortItems:(id)arg1 ascending:(BOOL)arg2 uuidSelector:(SEL)arg3;
- (id)sortItems:(id)arg1 ascending:(BOOL)arg2 uuidSelector:(SEL)arg3 selectorArg:(id)arg4;
- (id)sortUuidsForItems:(id)arg1 ascending:(BOOL)arg2 limitToItems:(BOOL)arg3;
- (id)sortUuidsForItems:(id)arg1 ascending:(BOOL)arg2 uuidSelector:(SEL)arg3 limitToItems:(BOOL)arg4;
- (id)sortUuidsForItems:(id)arg1 ascending:(BOOL)arg2 uuidSelector:(SEL)arg3 selectorArg:(id)arg4 limitToItems:(BOOL)arg5;
- (id)sortVersions:(id)arg1 ascending:(BOOL)arg2;
- (void)deleteBadSortEntries;
- (id)appendVersionsIfMissing:(id)arg1 isAscending:(BOOL)arg2;
- (id)appendObjectUuidsIfMissing:(id)arg1 isAscending:(BOOL)arg2;
- (id)removeVersions:(id)arg1;
- (id)insertVersions:(id)arg1 afterVersion:(id)arg2 isAscending:(BOOL)arg3;
- (id)replaceUuid:(id)arg1 withUuid:(id)arg2;
- (id)removeUuids:(id)arg1;
- (id)insertUuids:(id)arg1 afterUuid:(id)arg2 isAscending:(BOOL)arg3;
- (id)insertUuids:(id)arg1 beforeUuid:(id)arg2 isAscending:(BOOL)arg3;
- (id)removeEntriesAtIndexes:(id)arg1;
- (void)insertNewEntriesForUuids:(id)arg1 atIndexes:(id)arg2;
- (void)removeEntry:(id)arg1;
- (void)insertEntryForObjectUuid:(id)arg1 atIndex:(unsigned long long)arg2 insertCount:(unsigned long long)arg3;
- (id)removeEntryAtIndex:(unsigned long long)arg1;
- (void)appendEntryForObjectUuid:(id)arg1;
- (void)removeEntryFromIndex:(id)arg1;
- (void)addEntryToIndex:(id)arg1;
- (BOOL)renumberDuplicateIndexes;
- (void)renumberOrder;
- (void)deleteCustomOrder;
- (BOOL)loadCustomOrder;
- (id)resetCustomOrderTo:(id)arg1;
- (id)objectUuidsAtIndexes:(id)arg1;
- (unsigned long long)findIndexForVersion:(id)arg1 inSortedVersions:(id)arg2 ascending:(BOOL)arg3;
- (id)findIndexesForUuids:(id)arg1;
- (unsigned long long)indexOfObjectUuid:(id)arg1;
- (BOOL)containsObjectUuid:(id)arg1;
- (unsigned long long)indexOfEntry:(id)arg1;
- (id)customOrderedUuids;
- (BOOL)hasCustomOrder;
@property(retain, nonatomic) NSSet *badCustomEntries; // @synthesize badCustomEntries=_badCustomEntries;
@property(retain, nonatomic) NSDictionary *uuidToCustomEntry; // @synthesize uuidToCustomEntry=_uuidToCustomEntry;
- (void)_setCustomEntries:(id)arg1;
@property(retain, nonatomic) NSArray *customEntries; // @synthesize customEntries=_customEntries;
- (id)customOrderArray;
- (id)mutableBadCustomEntries;
- (id)mutableUuidToCustomEntry;
- (id)mutableCustomEntries;
- (id)setInitialCustomOrder:(id)arg1 isAscending:(BOOL)arg2;
- (id)description;
- (void)dealloc;
- (id)initWithContainerUuid:(id)arg1 purpose:(id)arg2 customEntries:(id)arg3 inDatabase:(id)arg4;
- (id)initWithContainerUuid:(id)arg1 purpose:(id)arg2 inDatabase:(id)arg3;

@end

