//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <PhotoLibraryPrivate/RDLibrary.h>

#import "PFResource.h"

@class LiSearchKitIndex, NSString, PFCache, PFMulticaster<RDLibraryMessagesMulticaster>, RDPlaceManager, RDVolumeCache;

@interface RDDatabase : RDLibrary <PFResource>
{
    long long _sentMulticasterServiceConnectionClosed;
    int _spinlock;
    unsigned short _openOptions;
    NSString *_uuid;
    struct PFMulticaster *_multicaster;
    RDPlaceManager *_placeManager;
    RDVolumeCache *_volumeCache;
    PFCache *_bookmarkCache;
    LiSearchKitIndex *_searchKitTokenizer;
}

+ (struct PFMulticaster *)globalMulticaster;
+ (id)libraryVersionFromLiError:(id)arg1;
+ (BOOL)sendsCreateFinished;
+ (BOOL)isLibraryKeyWellKnown:(id)arg1;
+ (BOOL)isProtocolMismatchError:(id)arg1;
+ (BOOL)isDoesNotExistError:(id)arg1;
+ (BOOL)isUnsupportedNewerSchemaError:(id)arg1;
+ (BOOL)isUnsupportedTooOldError:(id)arg1;
+ (BOOL)isUnsupportedInterimSchemaError:(id)arg1;
+ (BOOL)isUnsupportedLibraryError:(id)arg1;
+ (BOOL)isNeedsLibraryPermissionsRepairError:(id)arg1;
+ (BOOL)isNeedsLibraryRebuildError:(id)arg1;
+ (BOOL)isNeedsUpgradeError:(id)arg1;
+ (BOOL)error:(id)arg1 matchesUnderlyingErrorCode:(long long)arg2;
+ (id)databaseForUuid:(id)arg1;
+ (void)setDefaultDatabase:(id)arg1;
+ (id)database;
+ (void)sizeOfDatabaseAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) LiSearchKitIndex *searchKitTokenizer; // @synthesize searchKitTokenizer=_searchKitTokenizer;
@property(retain, nonatomic) PFCache *bookmarkCache; // @synthesize bookmarkCache=_bookmarkCache;
@property(nonatomic) unsigned short openOptions; // @synthesize openOptions=_openOptions;
@property(retain, nonatomic) RDVolumeCache *volumeCache; // @synthesize volumeCache=_volumeCache;
@property(readonly, nonatomic) RDPlaceManager *placeManager; // @synthesize placeManager=_placeManager;
@property(readonly, nonatomic) PFMulticaster<RDLibraryMessagesMulticaster> *multicaster; // @synthesize multicaster=_multicaster;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (id)computeTokensForSearchString:(id)arg1;
- (id)identifier;
- (void)handleExternalChanges:(id)arg1 ofType:(unsigned char)arg2 changeGroupType:(unsigned char)arg3 forTable:(id)arg4;
- (void)removeMessagesReceiver:(struct NSObject *)arg1;
- (void)addWeakMessagesReceiver:(struct NSObject *)arg1;
- (void)addMessagesReceiver:(struct NSObject *)arg1;
- (void)setURL:(id)arg1 forBookmark:(id)arg2;
- (id)urlForBookmark:(id)arg1 accessMode:(unsigned char)arg2;
- (id)errorCodeMappingForError:(id)arg1;
- (id)availableMasterIds;
- (id)libraryFolder;
- (BOOL)databaseDirectoryExists;
- (void)serviceConnectionClosed;
- (void)close;
- (BOOL)openCanonicalLibraryWithMode:(unsigned char)arg1 options:(unsigned short)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)openLibraryWithKey:(id)arg1 mode:(unsigned char)arg2 options:(unsigned short)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)openLibraryURL:(id)arg1 mode:(unsigned char)arg2 options:(unsigned short)arg3 completion:(CDUnknownBlockType)arg4;
- (id)initWithLibrarySchema:(id)arg1;
- (id)init;
- (Class)placeManagerClass;
- (void)linkFromURL:(id)arg1 toURL:(id)arg2 fileManager:(id)arg3 error:(id)arg4;
- (CDUnknownBlockType)nonDestructiveUpgradeConfigurationBlock;
- (id)projectsDirectoryPath;
- (id)modelResourcesDirectoryPath;
- (id)momentsDirectoryPath;
- (id)facesDirectoryPath;
- (id)pluginsDirectoryPath;
- (id)masksDirectoryPath;
- (id)thumbnailsDirectoryPath;
- (id)previewsDirectoryPath;
- (id)attachmentsDirectoryPath;
- (id)versionsDirectoryPath;
- (id)mastersDirectoryPath;
- (id)databaseDirectoryPath;
- (id)libraryPath;
- (id)bundleRootForFileType:(unsigned char)arg1;
- (id)accessPathDefaultKeys;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

