//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSPasteboardReading.h"
#import "NSPasteboardWriting.h"

@class BookmarkImportInfo, NSString;

__attribute__((visibility("hidden")))
@interface WebBookmark : NSObject <NSPasteboardWriting, NSPasteboardReading, NSCopying>
{
    // Error parsing type: ^{Bookmark=^^?{atomic<int>=Ai}^{Bookmark}^{BookmarkGroup}{String={RetainPtr<const __CFString *>=^v}}@{String={RetainPtr<const __CFString *>=^v}}{String={RetainPtr<const __CFString *>=^v}}B@@@{String={RetainPtr<const __CFString *>=^v}}{String={RetainPtr<const __CFString *>=^v}}@@@@}, name: _bookmark
    BOOL _hasDefaultSiteOrFolderIcon;
}

+ (id)bookmarkFromHistoryItem:(id)arg1;
+ (id)bookmarkFromDictionaryRepresentation:(id)arg1 topLevelOnly:(BOOL)arg2 withGroup:(id)arg3;
+ (id)bookmarkFromDictionaryRepresentation:(id)arg1 withGroup:(id)arg2;
+ (id)_bookmarkFromDictionaryRepresentation:(id)arg1 topLevelOnly:(BOOL)arg2 withGroup:(id)arg3;
+ (id)emptyFolderTitle;
+ (id)bookmarkOfType:(int)arg1;
+ (void)initializeCollections;
+ (id)allCollectionsRoot;
+ (id)bookmarkForFileOrFolderAtPath:(id)arg1;
+ (BOOL)isAcceptableBookmarkObjectPath:(id)arg1;
+ (id)_bookmarkForFileOrFolderAtPath:(id)arg1 directoryDepth:(unsigned int)arg2;
+ (id)bookmarkWithURL:(id)arg1 title:(id)arg2;
+ (id)defaultTitleFromURL:(id)arg1;
+ (void)goToAllBookmarksInTabs:(id)arg1 withTabPlacementHint:(const struct TabPlacementHint *)arg2;
+ (void)goToAllBookmarksInTabs:(id)arg1 withTabPlacementHint:(const struct TabPlacementHint *)arg2 confirmQuantity:(BOOL)arg3;
+ (void)goToAllUrlsInTabs:(id)arg1 withTitles:(id)arg2 withTabPlacementHint:(const struct TabPlacementHint *)arg3 confirmQuantity:(BOOL)arg4;
+ (id)urlsForBookmarks:(id)arg1 withTitles:(id *)arg2;
+ (id)_flattenedDescendantsOfBookmarks:(id)arg1;
+ (void)_addFlattenedDescendantsOfBookmarks:(id)arg1 toArray:(id)arg2;
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
@property(nonatomic) BOOL hasDefaultSiteOrFolderIcon; // @synthesize hasDefaultSiteOrFolderIcon=_hasDefaultSiteOrFolderIcon;
@property(retain, nonatomic) BookmarkImportInfo *importInfo;
- (BOOL)isDescendantOf:(id)arg1;
- (BOOL)isFolderWithRole:(id)arg1;
- (BOOL)isFolderWithTitle:(id)arg1;
- (void)setAutomaticallyOpensInTabs:(BOOL)arg1;
- (BOOL)automaticallyOpensInTabs;
- (BOOL)canOpenInTabs;
-     // Error parsing type: ^{Bookmark=^^?{atomic<int>=Ai}^{Bookmark}^{BookmarkGroup}{String={RetainPtr<const __CFString *>=^v}}@{String={RetainPtr<const __CFString *>=^v}}{String={RetainPtr<const __CFString *>=^v}}B@@@{String={RetainPtr<const __CFString *>=^v}}{String={RetainPtr<const __CFString *>=^v}}@@@@}16@0:8, name: bookmark
- (id)dictionaryRepresentation;
- (id)initFromDictionaryRepresentation:(id)arg1 withGroup:(id)arg2;
- (id)initFromDictionaryRepresentation:(id)arg1 topLevelOnly:(BOOL)arg2 withGroup:(id)arg3;
- (id)init;
- (id)initWithTopSite:(struct TopSite *)arg1;
- (id)initWithIdentifier:(id)arg1 UUID:(id)arg2 group:(id)arg3;
- (id)initWithBookmark:(PassRefPtr_83ad4302)arg1;
- (id)group;
- (id)UUID;
- (void)_setUUID:(id)arg1;
- (id)parent;
- (void)removeChild:(id)arg1;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)indexOfChild:(id)arg1;
- (id)childAtIndex:(unsigned long long)arg1;
- (unsigned long long)_numberOfDescendants;
- (id)leafChildren;
- (id)folderAndLeafChildren;
- (unsigned long long)numberOfChildren;
- (void)setIdentifier:(id)arg1;
- (id)identifier;
- (BOOL)shouldOmitFromUI;
- (void)setURLString:(id)arg1;
- (id)userVisibleURLString;
- (id)URLString;
@property(readonly, copy) NSString *description;
- (int)bookmarkType;
- (id)icon;
- (void)setTitle:(id)arg1;
- (id)title;
@property(copy, nonatomic) NSString *bookmarkRole;
- (BOOL)isDetached;
- (void)detachBookmark;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (BOOL)_contentItem:(id)arg1 matchesString:(id)arg2 options:(unsigned long long)arg3 searchCriteria:(int)arg4;
- (void)_collectContentItems:(id)arg1 matchingSearchStrings:(id)arg2 orWithAddressInSet:(id)arg3 fromContentItem:(id)arg4 searchCriteria:(int)arg5 searchDomain:(int)arg6;
- (BOOL)_addressOfContentItem:(id)arg1 isInSet:(id)arg2;
- (id)titleStringForContentItem:(id)arg1 forEditing:(BOOL)arg2;
- (id)parentStringForContentItem:(id)arg1;
- (id)parentOfContentItem:(id)arg1;
- (int)numberOfChildrenOfContentItem:(id)arg1;
- (id)imageForContentItem:(id)arg1;
- (BOOL)isCollection;
- (id)contentItemsToExpandOnReload;
- (id)contentItemsToInitiallyExpand;
- (id)contentItemsMatchingSearchStrings:(id)arg1 orWithAddressInSet:(id)arg2 searchCriteria:(int)arg3 searchDomain:(int)arg4;
- (BOOL)contentItemCanHaveChildren:(id)arg1;
- (BOOL)contentItem:(id)arg1 matchesStrings:(id)arg2 options:(unsigned long long)arg3 searchCriteria:(int)arg4;
- (void)didExpandContentItem:(id)arg1;
- (void)didCollapseContentItem:(id)arg1;
- (id)childAtIndex:(int)arg1 ofContentItem:(id)arg2;
- (BOOL)canDeleteContentItems;
- (BOOL)canCopyContentItems;
- (BOOL)canAddContentItems;
- (id)bookmarkFromContentItem:(id)arg1;
- (id)addressStringForContentItem:(id)arg1;
- (void)enumerateDescendantsIncludingFolders:(BOOL)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (BOOL)_enumerateDescendantsIncludingFolders:(BOOL)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)insertChild:(id)arg1 atIndex:(unsigned int)arg2 isCopy:(BOOL)arg3;
- (void)insertChildren:(id)arg1 atIndex:(int)arg2;
- (id)createInternetLocationFileHierarchyInDirectory:(id)arg1;
- (BOOL)isAncestorOf:(id)arg1;
- (id)canonicalURL;
- (BOOL)isOrHasAnyLeaves;
- (id)titleFallingBackToHostName;
- (id)browserWindowControllerMac;
- (void)goToAllInTabsWithTabPlacementHint:(const struct TabPlacementHint *)arg1 confirmQuantity:(BOOL)arg2;
- (void)goToAllInTabsWithTabPlacementHint:(const struct TabPlacementHint *)arg1;
- (id)_urlsForGoToAllWithTitles:(id *)arg1;
- (id)_flattenedDescendants;
- (void)_addFlattenedDescendantsToArray:(id)arg1;
- (void)goToAllInTabsFromMenuItem:(id)arg1;
- (void)goToFromMenuItem:(id)arg1;
- (void)goToUsingWindowPolicyFromCurrentEventWithTabPlacementHint:(const struct TabPlacementHint *)arg1;
- (void)goToInNewTabWithTabPlacementHint:(const struct TabPlacementHint *)arg1;
- (void)goToInNewWindow;
- (void)goToWithWindowPolicy:(long long)arg1 tabPlacementHint:(const struct TabPlacementHint *)arg2;
- (BOOL)insertBookmarkWithUndo:(id)arg1 atIndex:(unsigned long long)arg2 didCheckIfBookmarkEditingIsPermitted:(BOOL)arg3;
- (id)convertWithUndoToFolderTitled:(id)arg1 addedBookmarks:(id)arg2;
- (BOOL)moveWithUndoToFolder:(id)arg1 index:(unsigned long long)arg2;
- (id)addNewSubfolderWithUndoTitled:(id)arg1 insertionIndex:(unsigned long long)arg2;
- (BOOL)deleteWithUndoWithoutAuthorization;
- (void)deleteWithUndo;
- (void)toggleAutomaticallyOpensInTabsWithUndo;
- (BOOL)setAddressWithUndo:(id)arg1;
- (BOOL)setTitleWithUndo:(id)arg1;
- (BOOL)_bookmarkEditingPermitted;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

