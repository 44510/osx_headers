//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSURLDownloadDelegate.h"

@class NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSTimer;

__attribute__((visibility("hidden")))
@interface DownloadMonitorOld : NSObject <NSURLDownloadDelegate>
{
    NSMutableArray *_entries;
    NSMapTable *_downloadToEntry;
    struct HashMap<Safari::WK::Download, WTF::RetainPtr<DownloadProgressEntry>, Safari::WK::ObjectSubclassHash<Safari::WK::Download>, WTF::HashTraits<Safari::WK::Download>, WTF::HashTraits<WTF::RetainPtr<DownloadProgressEntry>>> _wkDownloadToEntry;
    NSMutableDictionary *_identifierToEntry;
    NSMutableSet *_openableDownloadURLs;
    struct HashMap<Safari::WK::Download, WTF::RetainPtr<PassFileDownload>, Safari::WK::ObjectSubclassHash<Safari::WK::Download>, WTF::HashTraits<Safari::WK::Download>, WTF::HashTraits<WTF::RetainPtr<PassFileDownload>>> _wkDownloadToPassFileDownload;
    NSMutableSet *_passFileDownloadURLs;
    NSMutableSet *_urlsOfPendingDownloadsInitiatedFromPrivateBrowsing;
    struct unique_ptr<SafariShared::CoalescedAsynchronousWriter, std::__1::default_delete<SafariShared::CoalescedAsynchronousWriter>> _historyWriter;
    BOOL _loadedDownloadHistory;
    BOOL _hadEntriesOnDisk;
    BOOL _isPlanningToWriteOnQuit;
    struct unique_ptr<SafariShared::SuddenTerminationDisabler, std::__1::default_delete<SafariShared::SuddenTerminationDisabler>> _suddenTerminationDisabler;
    NSMutableArray *_queuedAlerts;
    BOOL _waitingToShowTerminationPrompt;
    float _totalProgress;
    NSTimer *_updateTotalProgressTimer;
    NSTimer *_removeDownloadsAfterOneDayTimer;
}

+ (id)downloadBundleExtension;
+ (id)sharedDownloadMonitor;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_reportInvalidDownloadFileErrorForPath:(id)arg1;
- (void)_reportInsufficientDiskSpaceSheetForDownload:(id)arg1;
- (void)_showNextQueuedAlert;
- (void)_showTerminationPrompt;
- (float)_calculateTotalProgress;
- (void)_updateTotalProgress:(id)arg1;
- (void)_startUpdateTotalProgressTimer;
- (void)_wkDownload:(const struct Download *)arg1 entry:(id)arg2 didFailWithError:(id)arg3 wasCanceled:(BOOL)arg4;
- (void)_download:(id)arg1 entry:(id)arg2 didFailWithError:(id)arg3;
- (void)_removeEntries:(id)arg1 withNotification:(BOOL)arg2;
- (void)_loadDownloadHistoryIfNeeded;
- (id)_downloadHistoryFile;
- (id)_passFileDownloadForWKDownload:(const struct Download *)arg1;
- (id)_createEntryForRequest:(id)arg1 allowOverwrite:(BOOL)arg2 removeEntryWhenDone:(BOOL)arg3;
- (id)_createEntryForWKDownload:(const struct Download *)arg1;
- (id)_createEntryForDownload:(id)arg1 allowOverwrite:(BOOL)arg2 removeEntryWhenDone:(BOOL)arg3;
- (void)_addHistoryEntry:(id)arg1;
- (void)_addEntry:(id)arg1 withNotification:(BOOL)arg2;
- (void)_insertEntry:(id)arg1 atIndex:(unsigned int)arg2 withNotification:(BOOL)arg3 removeOld:(BOOL)arg4;
- (void)_noteDownloadsChanged;
- (void)_cancelRemoveDownloadsAfterOneDayTimer;
- (void)_scheduleCleanupOfOldestDownload;
- (void)_saveDownloadHistory;
- (void)_removeEntriesFinishedOverOneDayAgoAndUpdateTimerIfAppropriate;
- (id)_prepareToWriteDownloadHistory;
- (void)_updateSuddenTerminationSetting;
- (BOOL)_needToWriteHistoryFileOnQuit;
- (BOOL)_shouldCleanupHistoryAfterOneDay;
- (BOOL)_shouldClearHistoryOnQuit;
- (void)_downloadEntryStageChanged:(id)arg1;
- (void)_defaultsChanged:(id)arg1;
- (id)downloadMetadataIOQueue;
- (void)setEntry:(id)arg1 forDownload:(id)arg2;
- (void)savePendingChangesBeforeTermination;
- (id)validEntriesFromEntries:(id)arg1 forBooleanKey:(id)arg2;
- (void)addPendingDownloadURLInitiatedFromPrivateBrowsing:(id)arg1;
- (void)addPassFileDownloadURL:(id)arg1;
- (void)downloadMayBeOpenedForURL:(id)arg1;
- (float)totalProgress;
- (void)showDownloadAlert:(id)arg1;
- (void)showTerminationPrompt;
- (BOOL)shouldShowTerminationPrompt;
- (int)totalIdle;
- (int)totalBusy;
- (int)total;
- (void)removeEntriesFinishedBeforeDate:(id)arg1;
- (void)removeEntriesAddedAfterDate:(id)arg1;
- (void)removePassFileDownloadForWKDownload:(const struct Download *)arg1;
- (void)removeIdleEntries;
- (void)removeEntry:(id)arg1;
- (void)removeEntries:(id)arg1;
- (void)insertEntry:(id)arg1 atIndex:(unsigned int)arg2;
- (unsigned int)indexOfEntry:(id)arg1;
- (id)busyEntries;
- (id)entries;
- (void)resumeDownloadAtPath:(id)arg1;
- (void)cancelDownloadForEntry:(id)arg1 withError:(id)arg2;
- (void)stopAllDownloads;
- (void)startDownloadForRequest:(id)arg1 mayOpenWhenDone:(BOOL)arg2 allowOverwrite:(BOOL)arg3 removeEntryWhenDone:(BOOL)arg4 path:(id)arg5 tags:(id)arg6;
- (void)startDownloadForRequest:(id)arg1 mayOpenWhenDone:(BOOL)arg2 removeEntryWhenDone:(BOOL)arg3;
- (void)download:(id)arg1 didFailWithError:(id)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)download:(id)arg1 didCreateDestination:(id)arg2;
- (BOOL)download:(id)arg1 shouldDecodeSourceDataOfMIMEType:(id)arg2;
- (void)download:(id)arg1 didReceiveDataOfLength:(unsigned long long)arg2;
- (void)download:(id)arg1 decideDestinationWithSuggestedFilename:(id)arg2;
- (void)download:(id)arg1 didReceiveResponse:(id)arg2;
- (void)download:(id)arg1 willResumeWithResponse:(id)arg2 fromByte:(long long)arg3;
- (void)downloadDidBegin:(id)arg1;
- (id)init;
- (void)wkDownloadProcessDidCrash:(const struct Download *)arg1;
- (void)wkDownloadDidCancel:(const struct Download *)arg1;
- (void)wkDownload:(const struct Download *)arg1 didFailWithError:(const struct Error *)arg2;
- (void)wkDownloadDidFinish:(const struct Download *)arg1;
- (void)wkDownload:(const struct Download *)arg1 didCreateDestination:(const struct String *)arg2;
- (struct String)wkDownload:(const struct Download *)arg1 decideDestinationWithSuggestedFilename:(const struct String *)arg2 allowOverwrite:(_Bool *)arg3;
- (_Bool)wkDownload:(const struct Download *)arg1 shouldDecodeSourceDataOfMIMEType:(const struct String *)arg2;
- (void)wkDownload:(const struct Download *)arg1 didReceiveDataOfLength:(unsigned long long)arg2;
- (void)wkDownload:(const struct Download *)arg1 willResumeWithResponse:(const struct URLResponse *)arg2 fromByte:(long long)arg3;
- (void)wkDownload:(const struct Download *)arg1 didReceiveResponse:(const struct URLResponse *)arg2;
- (void)wkDownloadDidStart:(const struct Download *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

