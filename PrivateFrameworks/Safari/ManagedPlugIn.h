//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSMutableDictionary, NSString;

__attribute__((visibility("hidden")))
@interface ManagedPlugIn : NSObject
{
    NSString *_identifier;
    NSString *_name;
    NSString *_version;
    NSString *_path;
    NSMutableDictionary *_hostnamesToPolicies;
    struct HashMap<Safari::BrowserContentViewController *, WTF::RetainPtr<NSURL>, WTF::PtrHash<Safari::BrowserContentViewController *>, WTF::HashTraits<Safari::BrowserContentViewController *>, WTF::HashTraits<WTF::RetainPtr<NSURL>>> _browserContentViewControllerToPageURL;
    NSString *_pluginVersionWhenUnavailableDialogWasLastShown;
    BOOL _updateWasAvailableWhenUnavailableDialogWasLastShown;
    BOOL _disallowPromptBeforeUseDialog;
    int _firstVisitPolicy;
    BOOL _firstVisitPolicyManagedByAdmin;
    BOOL _changingPolicyPerSitePreventedByAdmin;
    BOOL _blockedByXProtect;
    BOOL _pluginUpdateAvailable;
    BOOL _sandboxed;
    BOOL _runUnsandboxedOnFirstVisit;
}

@property(nonatomic, getter=isSandboxed) BOOL sandboxed; // @synthesize sandboxed=_sandboxed;
@property(nonatomic, getter=isPluginUpdateAvailable) BOOL pluginUpdateAvailable; // @synthesize pluginUpdateAvailable=_pluginUpdateAvailable;
@property(nonatomic, getter=isBlockedByXProtect) BOOL blockedByXProtect; // @synthesize blockedByXProtect=_blockedByXProtect;
@property(nonatomic, getter=isChangingPolicyPerSitePreventedByAdmin) BOOL changingPolicyPerSitePreventedByAdmin; // @synthesize changingPolicyPerSitePreventedByAdmin=_changingPolicyPerSitePreventedByAdmin;
@property(nonatomic, getter=isFirstVisitPolicyManagedByAdmin) BOOL firstVisitPolicyManagedByAdmin; // @synthesize firstVisitPolicyManagedByAdmin=_firstVisitPolicyManagedByAdmin;
@property(nonatomic) BOOL runUnsandboxedOnFirstVisit; // @synthesize runUnsandboxedOnFirstVisit=_runUnsandboxedOnFirstVisit;
@property(nonatomic) int firstVisitPolicy; // @synthesize firstVisitPolicy=_firstVisitPolicy;
@property(nonatomic) BOOL disallowPromptBeforeUseDialog; // @synthesize disallowPromptBeforeUseDialog=_disallowPromptBeforeUseDialog;
@property(nonatomic) BOOL updateWasAvailableWhenUnavailableDialogWasLastShown; // @synthesize updateWasAvailableWhenUnavailableDialogWasLastShown=_updateWasAvailableWhenUnavailableDialogWasLastShown;
@property(copy, nonatomic) NSString *pluginVersionWhenUnavailableDialogWasLastShown; // @synthesize pluginVersionWhenUnavailableDialogWasLastShown=_pluginVersionWhenUnavailableDialogWasLastShown;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)clearBlockPolicies;
- (BOOL)clearExpiredAllowWithSecurityRestrictionsPolicies;
- (BOOL)clearBlockPolicyForPageURL:(id)arg1;
- (BOOL)clearAllPolicies;
- (BOOL)_clearHostPoliciesPassingTest:(CDUnknownBlockType)arg1;
- (id)activePolicyForBrowserContentViewController:(struct BrowserContentViewController *)arg1;
- (BOOL)browserContentViewControllerWillClose:(struct BrowserContentViewController *)arg1;
- (BOOL)browserContentViewController:(struct BrowserContentViewController *)arg1 didFinishUsingPlugInOnPageWithURL:(id)arg2;
- (BOOL)browserContentViewController:(struct BrowserContentViewController *)arg1 didBeginUsingPlugInOnPageWithURL:(id)arg2;
- (BOOL)_removeUnusedPolicyForHostnameIfNeeded:(id)arg1;
- (BOOL)_openPageIsUsingPlugInForHostname:(id)arg1;
- (int)_defaultFirstVisitPolicy;
- (id)policyForPageURL:(id)arg1 wasCreated:(char *)arg2;
- (id)existingPolicyForPageURL:(id)arg1;
- (id)_hostnameForPageURL:(id)arg1;
- (void)clearPolicy:(id)arg1;
- (void)appendPoliciesInDictionaryRepresentation:(id)arg1 isManagedByAdmin:(BOOL)arg2;
- (void)addPolicy:(id)arg1;
- (id)dictionaryRepresentation;
- (BOOL)isUnsafe;
@property(readonly, nonatomic) NSArray *sortedBlockedPluginHostPolicies;
- (id)initWithPlugInInfo:(id)arg1;
- (id)init;

@end

