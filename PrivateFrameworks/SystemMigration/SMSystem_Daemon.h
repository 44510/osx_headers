//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <SystemMigration/SMSystem.h>

@class NSArray, NSDictionary, NSImage, NSString, NSURL, SMCollectIncompatibleApps, SMDBAccess, SMODDBAccess, SMPathAnalysis, SMViewController;

@interface SMSystem_Daemon : SMSystem
{
    NSArray *_users;
    NSArray *_groups;
    SMPathAnalysis *_pathAnalysis;
    SMCollectIncompatibleApps *_incompatibleAppsListedPaths;
    NSString *_systemName;
    NSString *_systemVersion;
    NSString *_productVersion;
    BOOL valid;
    BOOL selected;
    BOOL _systemPrepared;
    BOOL _ineligible;
    NSURL *url;
    NSString *modelID;
    unsigned long long state;
    NSString *daDiskID;
    NSImage *volumeIcon;
    NSURL *remoteDiskID;
    NSString *_path;
    NSString *_volumeName;
    NSString *_ineligibleReasonKey;
    SMDBAccess *_dsdb;
    SMODDBAccess *_oddb;
}

+ (id)timeMachineSystemWithPath:(id)arg1 volumeName:(id)arg2 machineName:(id)arg3 isLiteBackup:(BOOL)arg4 backedUpOnVolume:(id)arg5;
+ (id)archivedSystemWithPath:(id)arg1 onVolume:(id)arg2;
+ (id)keyPathsForValuesAffectingModelIcon;
+ (id)keyPathsForValuesAffectingDisplayIcon;
+ (Class)systemClassForLongTermIdentifier:(id)arg1;
+ (id)currentSystem;
+ (id)systemWithPath:(id)arg1;
+ (id)systemWithURL:(id)arg1;
+ (unsigned long long)requiredScannerState;
@property(retain) SMODDBAccess *oddb; // @synthesize oddb=_oddb;
@property(retain) SMDBAccess *dsdb; // @synthesize dsdb=_dsdb;
@property(retain) NSString *ineligibleReasonKey; // @synthesize ineligibleReasonKey=_ineligibleReasonKey;
@property BOOL ineligible; // @synthesize ineligible=_ineligible;
@property BOOL systemPrepared; // @synthesize systemPrepared=_systemPrepared;
@property(retain) NSString *volumeName; // @synthesize volumeName=_volumeName;
@property(retain) NSString *path; // @synthesize path=_path;
@property(retain) NSURL *remoteDiskID; // @synthesize remoteDiskID;
@property(copy) NSString *daDiskID; // @synthesize daDiskID;
- (void)setState:(unsigned long long)arg1;
- (unsigned long long)state;
@property BOOL selected; // @synthesize selected;
@property BOOL valid; // @synthesize valid;
@property(retain) NSString *modelID; // @synthesize modelID;
@property(retain) NSURL *url; // @synthesize url;
- (void).cxx_destruct;
- (void)cancelSizing;
- (void)sizeAllUsersIncludingVaultUsers:(BOOL)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (id)getGroupWithGeneratedUID:(id)arg1;
- (id)getGroupWithID:(unsigned int)arg1;
- (id)getGroup:(id)arg1;
- (id)getUserWithUUID:(id)arg1;
- (id)getUserWithID:(unsigned int)arg1;
- (id)getUser:(id)arg1;
- (id)getUserByLongName:(id)arg1;
- (id)pathToFile:(id)arg1 error:(id *)arg2;
- (void)invalidateCachedData;
- (void)cleanupSystem;
- (void)prepareSystem;
- (struct __DADisk *)copyDisk;
- (BOOL)authenticateAdminUser:(id)arg1 withPassword:(id)arg2;
- (BOOL)authenticateUser:(id)arg1 withPassword:(id)arg2;
- (BOOL)isUser:(id)arg1 inGroup:(id)arg2;
- (BOOL)isUserAnAdmin:(id)arg1;
- (unsigned int)nextAvailableGroupID;
- (id)allGroups;
- (id)allUsers;
- (id)fdeSignedUsers;
- (id)directoryServicesDatabase;
- (id)defaultDatabase;
- (id)pathAnalysis;
- (BOOL)pathAnalysisCancelationSupport;
- (unsigned long long)usedSize;
- (unsigned long long)totalSize;
- (id)macAddress;
- (id)networkInterfaces;
- (id)networkPreferences;
- (BOOL)_isRunningSystem;
- (id)sanityCheck;
@property(readonly, retain) SMViewController *accessoryProgressViewController;
- (void)evaluateServerType;
- (id)serverVersionOnSystem;
- (BOOL)isMountableByUser;
- (BOOL)matches:(id)arg1;
- (id)description;
- (BOOL)isVeryOldSystemVersion;
- (id)mobileMeNamesInUserRecordNames;
- (id)hiddenSystemUsers;
- (id)filteredUsers:(id)arg1;
- (BOOL)isOverAFP;
- (BOOL)isMounted;
- (void)reclaimMobileTimeMachineFreeSpace;
- (unsigned long long)mobileTimeMachineJunkSpace;
- (unsigned long long)freeSpace;
- (id)passcode;
- (BOOL)isMounting;
- (BOOL)slashUsersIsASymlink;
- (BOOL)isNetworkSystem;
- (BOOL)isTargetDiskModeSystem;
@property(readonly) NSArray *childSystems;
@property(readonly) BOOL enabled;
@property(readonly) BOOL selectableSystem;
- (void)pressedActionButton:(id)arg1;
@property(readonly) BOOL availableAction;
- (id)accessibilityDescription;
- (BOOL)pathAnalysisBundleSupport;
- (BOOL)isInternal;
- (id)autoLoginShortName;
- (id)systemVersion;
@property(readonly) NSString *productVersion;
@property(readonly) NSImage *modelIcon;
@property(readonly) NSImage *volumeIcon; // @synthesize volumeIcon;
@property(readonly) NSImage *warningBadge;
@property(readonly) NSImage *displayIcon;
@property(readonly) NSString *systemName;
- (id)UUID;
- (void)mountWithCredentials:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isUpToDate;
- (id)extendedDescription;
- (BOOL)matchesLongTermIdentifier:(id)arg1;
@property(readonly) NSDictionary *longTermIdentifier;
- (BOOL)isEqual:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)initWithURL:(id)arg1;
- (void)commonInit;
- (id)incompatibleAppData;
- (BOOL)isPathInIncompatibleApplicationsList:(id)arg1;
- (id)incompatiblePathsUnderPath:(id)arg1;
- (void)prepareIncompatibleApplicationsList;

@end

