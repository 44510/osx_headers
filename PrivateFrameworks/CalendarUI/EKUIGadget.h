//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "EKUILayoutItem.h"

@class EKEventViewController, EKUIGadgetScrollView, NSLayoutConstraint, NSString, NSView;

@interface EKUIGadget : NSObject <EKUILayoutItem>
{
    BOOL _alwaysScrollIfNeeded;
    BOOL _isVisible;
    BOOL _shouldScrollToTop;
    BOOL _observingKeyViews;
    BOOL _isScrolling;
    NSView *_gadgetView;
    id <EKUILayoutItem> _parentItem;
    NSView *_firstKeyView;
    NSView *_lastKeyView;
    EKUIGadgetScrollView *_scrollView;
    EKEventViewController *_eventViewController;
    NSString *_uuid;
    NSLayoutConstraint *_scrollContentHeightConstraint;
    NSLayoutConstraint *_scrollViewMaxHeightConstraint;
}

+ (id)interestedChangeKeys;
@property BOOL isScrolling; // @synthesize isScrolling=_isScrolling;
@property BOOL observingKeyViews; // @synthesize observingKeyViews=_observingKeyViews;
@property(retain) NSLayoutConstraint *scrollViewMaxHeightConstraint; // @synthesize scrollViewMaxHeightConstraint=_scrollViewMaxHeightConstraint;
@property(retain) NSLayoutConstraint *scrollContentHeightConstraint; // @synthesize scrollContentHeightConstraint=_scrollContentHeightConstraint;
@property BOOL shouldScrollToTop; // @synthesize shouldScrollToTop=_shouldScrollToTop;
@property BOOL isVisible; // @synthesize isVisible=_isVisible;
@property(retain) NSString *uuid; // @synthesize uuid=_uuid;
@property __weak EKEventViewController *eventViewController; // @synthesize eventViewController=_eventViewController;
@property(retain) EKUIGadgetScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) __weak NSView *lastKeyView; // @synthesize lastKeyView=_lastKeyView;
@property(nonatomic) __weak NSView *firstKeyView; // @synthesize firstKeyView=_firstKeyView;
@property __weak id <EKUILayoutItem> parentItem; // @synthesize parentItem=_parentItem;
@property BOOL alwaysScrollIfNeeded; // @synthesize alwaysScrollIfNeeded=_alwaysScrollIfNeeded;
@property(retain) NSView *gadgetView; // @synthesize gadgetView=_gadgetView;
- (void).cxx_destruct;
- (BOOL)performDragOperation:(id)arg1;
- (id)claimedPboardTypes;
- (id)timeZoneToDisplayEventIn;
- (id)alignmentLabel;
- (BOOL)shouldDisplayForEvent:(id)arg1;
- (void)animationDidFinish:(id)arg1;
- (void)inspectorWindowWillClose;
- (BOOL)wantsAnimationSuppression;
- (BOOL)needsExpansion;
- (BOOL)hasContent;
- (BOOL)isSeparator;
- (BOOL)isContainer;
- (id)enclosingGadgetContainer;
@property(setter=setExpanded:) BOOL isExpanded;
- (BOOL)isEditable;
- (id)event;
- (BOOL)updateWithDiff:(id)arg1;
- (void)updateWithChanges:(id)arg1;
- (BOOL)isInterestedInChanges:(id)arg1;
- (void)saveCompleteChangeWithoutPromptingUserAboutDecline;
- (void)saveCompleteChange;
- (void)savePartialChange;
- (void)mouseExitedGadgetView;
- (void)mouseEnteredGadgetView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setNeedsUpdateConstraints:(BOOL)arg1;
- (void)updateConstraints;
- (id)view;
- (double)maxHeight;
- (void)setEvent:(id)arg1;
- (void)_scrollViewFrameDidChange:(id)arg1;
- (void)dealloc;
- (void)scrollToBottom;
- (void)scrollToTop;
- (void)updateScrollState;
- (id)initWithEventViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

