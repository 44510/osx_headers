//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class CALayer, FIAirDropViewGutsController, FIIconViewICloudSortViewController, FIScrollViewMirrorView, FI_IActionButtonCell, FI_IPropertyValueExtractor, FI_NewFolderController, FI_TAirDropDiscoveryController, FI_TAirDropLegacyModePopoverViewController, FI_TAirDropProgressLayer, FI_TBrowserBackgroundView, FI_TBrowserViewDataSource, FI_TBrowserViewSwitchAnimator, FI_TColumnPreviewController, FI_TColumnViewController, FI_TDelayedPopulationViewController, FI_TDrawRectView, FI_TFileSizeFormatter, FI_TFloatingInputView, FI_TGradientSeparator, FI_TICloudNoDocumentsViewController, FI_TIconView, FI_TIconViewCellOffscreenRenderer, FI_TIconViewSettings, FI_TImageView, FI_TInlineCancelButtonLayer, FI_TInlinePreviewData, FI_TInlineProgressBarLayer, FI_TLayer, FI_TLayoutBinder, FI_TListHeaderCellView, FI_TListViewSettings, FI_TNodeViewSettings, FI_TPopover, FI_TPopoverController, FI_TProgressView, FI_TProgressWindowController, FI_TQLPreviewViewZoomController, FI_TScrollView, FI_TShrinkToFitWindow, FI_TSidebarSplitView, FI_TSplitView, FI_TStandardStatusViewController, FI_TTagColumnTableViewController, FI_TTagEditorController, FI_TTagOperationDelegate, FI_TTagSuggestionsWindowController, FI_TTaggingSuggestionsViewController, FI_TTargetActionFunctor, FI_TTextField, FI_TTextWithTitleFieldImpl, FI_TTitleField, FI_TUpdateLayerView, FI_TValidatingDateFormatter, FI_TView, FI_TViewController, FI_TWindowHistory, NSArray, NSColor, NSData, NSDate, NSDateComponents, NSDictionary, NSFont, NSFormatter, NSImage, NSImageView, NSIndexSet, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSObject, NSOperationQueue, NSString, NSTimer, NSTrackingArea, NSURL, NSView, NSWindow, QLPreviewPanel, SFAirDropDiscoveryController, SFWirelessSettingsController, TBackupContainerDelegate, TBulkRenameController;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct ColumnDesc;

struct DSSemaphore;

struct DataBrowserItemSpatialData {
    int _field1;
    int _field2;
    int _field3;
    short _field4;
};

struct FolderContentChangeDescriptor {
    struct TFENode *_field1;
    struct TFENodeVector *_field2;
    struct TFENodeVector *_field3;
    struct TGroupedNodes *_field4;
    id _field5;
    _Bool _field6;
};

struct HFSUniStr255 {
    unsigned short length;
    unsigned short unicode[255];
};

struct IBaseQueueStyle<TNSRef<NSURL *>>;

struct INWOperationController {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
};

struct IPrefsObserver {
    CDUnknownFunctionPointerType *_field1;
    struct TNSRef<FI_TPrefsObserverBridge *> _field2;
};

struct ISpawnOrigin;

struct NSObject {
    Class _field1;
};

struct NodeEventReply {
    struct DSSemaphore *_field1;
    unsigned int _field2;
    int _field3;
};

struct NodeNameSyntaxHint {
    unsigned int _field1;
    unsigned int _field2;
    unsigned char _field3;
};

struct OpaqueCoreDrag;

struct OpaqueEventNotifier;

struct OpaqueEventQueue;

struct OpaqueIconRef;

struct OpaqueLSSharedFileListItemRef;

struct OpaqueMonitorData;

struct OpaqueNodeRef;

struct OpaqueOperationData;

struct OpaquePropertyListRef;

struct OperationErrorRecord {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    char _field4[1024];
    _Bool _field5;
};

struct OperationIterator {
    struct OpaqueOperationData *fData;
    CDUnknownFunctionPointerType fFirstProc;
    CDUnknownFunctionPointerType fNextProc;
};

struct OperationMonitor {
    struct OpaqueMonitorData *fMonitorData;
    unsigned char fCancelRequested;
    struct OperationStatus *fStatus;
    unsigned int fAccumulatedStatusMask;
    unsigned int fStatusChangeInterval;
    struct DSSemaphore *fRequestSemaphoreID;
    struct OpaqueEventQueue *fQueue;
    CDUnknownFunctionPointerType fTickleProc;
    CDUnknownFunctionPointerType fUniqueNameProc;
};

struct OperationRecord {
    struct OpaqueNodeRef *_field1;
    struct OpaqueNodeRef *_field2;
    struct PropertyList *_field3;
    unsigned int _field4;
    unsigned int _field5;
    struct HFSUniStr255 _field6;
    struct OpaqueNodeRef *_field7;
    struct OpaqueNodeRef *_field8;
    struct OpaqueNodeRef *_field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    unsigned char _field18;
    unsigned char _field19;
};

struct OperationStatus {
    unsigned int fStage;
    struct HFSUniStr255 fCurrentName;
    long long fTimeEstimate;
    long long fItemsTotal;
    long long fItemsCompleted;
    long long fBytesTotal;
    long long fBytesCompleted;
    long long fFSItemsTotal;
    long long fFSItemsCompleted;
};

struct PropertyList;

struct RGBColor {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct SearchScopeDefinition;

struct SortCollator {
    struct TRef<TBaseNodeComparator *, TRetainReleasePolicy<TBaseNodeComparator *>> _field1;
};

struct StColumnOptimizer {
    struct TColumnOptimizerContainers _field1;
    id _field2;
    struct StColumnOptimizer *_field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct TAirDropSenderOperationController {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
    struct TMutex _field9;
    struct TNSRef<NSDictionary *> _field10;
    struct TString _field11;
    struct TFENode _field12;
};

struct TAliasesTargets {
    struct __tree<std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, std::__1::pair<short, TFENode>>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct TAsyncNodeOperationAssistant {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct TBaseNodeComparator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct TRef<const __CFLocale *, TRetainReleasePolicy<CFLocaleRef>> _field3;
    struct TString _field4;
    unsigned int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
};

struct TCachedRelativeDates {
    struct TNSRef<NSDate *> _field1;
    struct TNSRef<NSDate *> _field2;
    struct TNSRef<NSDate *> _field3;
};

struct TCoalescedNodesAddedMap {
    struct __tree<std::__1::__value_type<const TFENode, const TFENodeVector *const>, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, const TFENodeVector *const>, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::__value_type<const TFENode, const TFENodeVector *const>>> {
        struct __tree_node<std::__1::__value_type<const TFENode, const TFENodeVector *const>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TFENode, const TFENodeVector *const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, const TFENodeVector *const>, std::__1::less<const TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct TCoalescedNodesChangedMap {
    struct __tree<std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>>> {
        struct __tree_node<std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, const TFENodeUpdateList *const>, std::__1::less<const TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct TCoalescingNodeObserver;

struct TCoalescingNodeObserverCocoaBridge {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TCoalescingNodeObserver *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field10;
    set_55a3e8f7 _field11;
    _Bool _field12;
    id _field13;
    unsigned int _field14;
};

struct TColor {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct TColumnOptimizerContainers {
    struct __tree<std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::__map_value_compare<std::__1::pair<long, TFENode>, std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::less<std::__1::pair<long, TFENode>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<long, TFENode>, short>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<long, TFENode>, short>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<long, TFENode>, short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<long, TFENode>, std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::less<std::__1::pair<long, TFENode>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct TColumnPreviewQTEjectHelper {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TCoalescingNodeObserver *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field10;
    set_55a3e8f7 _field11;
    _Bool _field12;
    struct TFENodeVector _field13;
    id _field14;
    _Bool _field15;
};

struct TConditionVariable {
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } fCondition;
};

struct TDropOperation {
    CDUnknownFunctionPointerType *_field1;
    struct OpaqueCoreDrag *_field2;
    id _field3;
    id _field4;
    struct TFENode _field5;
    struct TFENodeVector _field6;
    struct TFENodeVector _field7;
    struct TFENodeVector _field8;
    struct TFENode _field9;
    struct TFENodeVector _field10;
};

struct TFCGImage {
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field1;
};

struct TFENode {
    struct OpaqueNodeRef *fNodeRef;
};

struct TFENodeData {
    struct TString _field1;
    struct TString _field2;
    struct TString _field3;
    struct UTCDateTime _field4;
    _Bool _field5;
    _Bool _field6;
    struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> _field7;
};

struct TFENodePropertyList {
    struct OpaquePropertyListRef *_field1;
};

struct TFENodeUpdate;

struct TFENodeUpdateList {
    struct TFENodeUpdate *_field1;
    struct TFENodeUpdate *_field2;
    struct __compressed_pair<TFENodeUpdate *, std::__1::allocator<TFENodeUpdate>> {
        struct TFENodeUpdate *_field1;
    } _field3;
};

struct TFENodeVector {
    struct TFENode *__begin_;
    struct TFENode *__end_;
    struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> {
        struct TFENode *__first_;
    } __end_cap_;
};

struct TFlowViewQTEjectHelper {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TCoalescingNodeObserver *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field10;
    set_55a3e8f7 _field11;
    _Bool _field12;
    struct TFENodeVector _field13;
    id _field14;
    _Bool _field15;
};

struct TFormattedDateEntry;

struct TGroup {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct TGroupManager *_field3;
    unsigned int _field4;
};

struct TGroupChanges {
    struct TFENodeVector _field1;
    struct TFENodeVector _field2;
    struct TFENodeVector _field3;
};

struct TGroupClientNodes {
    struct map<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, std::__1::allocator<std::__1::pair<const std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> _field1;
    struct map<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> _field2;
};

struct TGroupManager {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
};

struct TGroupedNodes {
    struct TNodeGroups _field1;
};

struct TIconBrowserSettings {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    struct CGPoint _field9;
    short _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    struct RGBColor _field14;
    struct TFENode _field15;
    unsigned char _field16;
};

struct TIconLayoutDataCache {
    struct unordered_map<TFENode, TIconLayoutData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TIconLayoutData>>> _field1;
    struct unordered_map<TFENode, TCachedMetricsData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCachedMetricsData>>> _field2;
};

struct TIconRef {
    struct TRef<OpaqueIconRef *, TRetainReleasePolicy<IconRef>> fIconRef;
};

struct TIconViewLayout {
    CDUnknownFunctionPointerType *_field1;
    struct TNSRef<FI_TIconView *> _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    unsigned short _field5;
    int _field6;
    struct TFENode _field7;
    struct TFENodeVector _field8;
    struct TNSRef<NSMutableDictionary *> _field9;
    _Bool _field10;
    struct TIconLayoutDataCache _field11;
    struct TNSRef<FI_TIconSpatialDataController *> _field12;
    struct unordered_map<TFENode, Point32, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, Point32>>> _field13;
    _Bool _field14;
    struct CGSize _field15;
    struct CGPoint _field16;
    struct vector<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>, std::__1::allocator<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>>> _field17;
    struct TNSRef<FI_TIconViewMonitorController *> _field18;
};

struct TInfoExtractor {
    struct TMutex _field1;
    struct TInfoExtractorThread *_field2;
    unsigned long long _field3;
    struct function<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
        struct function<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
            struct type _field1;
            struct __base<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> *_field2;
        } _field1;
        struct TNSRef<void (^)(const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> _field2;
    } _field4;
    struct function<bool (const TFENode &, TInfoExtractorData &)> {
        struct function<bool (const TFENode &, TInfoExtractorData &)> {
            struct type _field1;
            struct __base<bool (const TFENode &, TInfoExtractorData &)> *_field2;
        } _field1;
        struct TNSRef<bool (^)(const TFENode &, TInfoExtractorData &)> _field2;
    } _field5;
    _Bool _field6;
};

struct TInfoExtractorController {
    CDUnknownFunctionPointerType *_field1;
    struct TValidatorItem<IInfoExtractorController> _field2;
    struct TInfoExtractor _field3;
    id _field4;
};

struct TInfoExtractorThread;

struct TInfoPreviewViewQTEjectHelper {
    CDUnknownFunctionPointerType *_vptr$TNodeEventHandler;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> fObservedNodes;
    struct TNodeChangeNotifier fNodeChangeNotifier;
    _Bool fClearObserversOnNodeDeleted;
    struct TString fObserverName;
    struct TCoalescingNodeObserver *fNextObserverToFlush;
    unsigned long long fNextFlushTime;
    unsigned long long fLastBusyTime;
    unsigned long long fMicrosecondsToCoalesce;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> fCoalescedEventsMap;
    set_55a3e8f7 fChildListChangesPending;
    _Bool fSupportsBulkEventHandling;
    struct TFENodeVector fPreviouslyPreviewedNodes;
    id fClient;
    _Bool fResettingTarget;
};

struct TKeyValueBinder {
    NSObject *fReceiverObj;
    struct TString fReceiversBinding;
};

struct TKeyValueObserver {
    NSObject *fObserver;
    NSObject *fObjectToObserve;
    NSArray *fArrayOfObjectsToObserve;
    struct TNSRef<NSIndexSet *> fIndexesOfObjectsToObserve;
    struct TString fKeyPathToObserve;
    void *fContext;
};

struct TLayoutBinding {
    struct TSideLayoutBinding top;
    struct TSideLayoutBinding left;
    struct TSideLayoutBinding bottom;
    struct TSideLayoutBinding right;
};

struct TListBrowserSettings {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    vector_abc0d4d8 _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct TMDQueryAliasNode {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TNSRef<NSMutableDictionary *> _field6;
    struct TMutex _field7;
    struct map<TNodeObserver *, TObserverStats, std::__1::less<TNodeObserver *>, std::__1::allocator<std::__1::pair<TNodeObserver *const, TObserverStats>>> _field8;
    struct TFENode _field9;
    _Bool _field10;
    struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> _field11;
    struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> _field12;
    struct TString _field13;
    unsigned int _field14;
    struct TFENode _field15;
    struct TFENode _field16;
    struct TFENode _field17;
    struct TFENode _field18;
    struct TString _field19;
    struct TString _field20;
    struct TString _field21;
    struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> _field22;
    int _field23;
    int _field24;
    unsigned int _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    struct TFENode _field41;
    int _field42;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field43;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field44;
    struct TFENode _field45;
    struct TMDQueryDefinition _field46;
};

struct TMDQueryDefinition {
    struct TString _field1;
    struct TString _field2;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field3;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field4;
    long long _field5;
    unsigned int _field6;
};

struct TMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TNSRef<CALayer *> {
    CALayer *fRef;
};

struct TNSRef<FIAirDropViewGutsController *> {
    FIAirDropViewGutsController *fRef;
};

struct TNSRef<FIIconViewICloudSortViewController *> {
    FIIconViewICloudSortViewController *fRef;
};

struct TNSRef<FIScrollViewMirrorView *> {
    FIScrollViewMirrorView *fRef;
};

struct TNSRef<FI_IActionButtonCell *> {
    FI_IActionButtonCell *fRef;
};

struct TNSRef<FI_IPropertyValueExtractor *> {
    FI_IPropertyValueExtractor *fRef;
};

struct TNSRef<FI_NewFolderController *> {
    FI_NewFolderController *fRef;
};

struct TNSRef<FI_TAirDropDiscoveryController *> {
    FI_TAirDropDiscoveryController *fRef;
};

struct TNSRef<FI_TAirDropLegacyModePopoverViewController *> {
    FI_TAirDropLegacyModePopoverViewController *fRef;
};

struct TNSRef<FI_TAirDropProgressLayer *> {
    FI_TAirDropProgressLayer *fRef;
};

struct TNSRef<FI_TBrowserBackgroundView *> {
    FI_TBrowserBackgroundView *fRef;
};

struct TNSRef<FI_TBrowserViewDataSource *> {
    FI_TBrowserViewDataSource *fRef;
};

struct TNSRef<FI_TBrowserViewSwitchAnimator *> {
    FI_TBrowserViewSwitchAnimator *fRef;
};

struct TNSRef<FI_TColumnPreviewController *> {
    FI_TColumnPreviewController *fRef;
};

struct TNSRef<FI_TColumnViewController *> {
    FI_TColumnViewController *fRef;
};

struct TNSRef<FI_TDelayedPopulationViewController *> {
    FI_TDelayedPopulationViewController *fRef;
};

struct TNSRef<FI_TDrawRectView *> {
    FI_TDrawRectView *fRef;
};

struct TNSRef<FI_TFileSizeFormatter *> {
    FI_TFileSizeFormatter *fRef;
};

struct TNSRef<FI_TFloatingInputView *> {
    FI_TFloatingInputView *fRef;
};

struct TNSRef<FI_TGradientSeparator *> {
    FI_TGradientSeparator *fRef;
};

struct TNSRef<FI_TICloudNoDocumentsViewController *> {
    FI_TICloudNoDocumentsViewController *fRef;
};

struct TNSRef<FI_TIconSpatialDataController *> {
    id _field1;
};

struct TNSRef<FI_TIconView *> {
    FI_TIconView *fRef;
};

struct TNSRef<FI_TIconViewCellOffscreenRenderer *> {
    FI_TIconViewCellOffscreenRenderer *fRef;
};

struct TNSRef<FI_TIconViewMonitorController *> {
    id _field1;
};

struct TNSRef<FI_TIconViewSettings *> {
    FI_TIconViewSettings *fRef;
};

struct TNSRef<FI_TImageView *> {
    FI_TImageView *fRef;
};

struct TNSRef<FI_TInlineCancelButtonLayer *> {
    FI_TInlineCancelButtonLayer *fRef;
};

struct TNSRef<FI_TInlinePreviewData *> {
    FI_TInlinePreviewData *fRef;
};

struct TNSRef<FI_TInlineProgressBarLayer *> {
    FI_TInlineProgressBarLayer *fRef;
};

struct TNSRef<FI_TLayer *> {
    FI_TLayer *fRef;
};

struct TNSRef<FI_TLayoutBinder *> {
    FI_TLayoutBinder *fRef;
};

struct TNSRef<FI_TListHeaderCellView *> {
    FI_TListHeaderCellView *fRef;
};

struct TNSRef<FI_TListViewSettings *> {
    FI_TListViewSettings *fRef;
};

struct TNSRef<FI_TNodeViewSettings *> {
    FI_TNodeViewSettings *fRef;
};

struct TNSRef<FI_TPopover *> {
    FI_TPopover *fRef;
};

struct TNSRef<FI_TPopoverController *> {
    FI_TPopoverController *fRef;
};

struct TNSRef<FI_TPrefsObserverBridge *> {
    id _field1;
};

struct TNSRef<FI_TProgressView *> {
    FI_TProgressView *fRef;
};

struct TNSRef<FI_TProgressWindowController *> {
    FI_TProgressWindowController *fRef;
};

struct TNSRef<FI_TQLPreviewViewZoomController *> {
    FI_TQLPreviewViewZoomController *fRef;
};

struct TNSRef<FI_TRenameOperation *> {
    id _field1;
};

struct TNSRef<FI_TScrollView *> {
    FI_TScrollView *fRef;
};

struct TNSRef<FI_TShrinkToFitWindow *> {
    FI_TShrinkToFitWindow *fRef;
};

struct TNSRef<FI_TSidebarSplitView *> {
    FI_TSidebarSplitView *fRef;
};

struct TNSRef<FI_TSplitView *> {
    FI_TSplitView *fRef;
};

struct TNSRef<FI_TStandardProgressController *> {
    id _field1;
};

struct TNSRef<FI_TStandardStatusViewController *> {
    FI_TStandardStatusViewController *fRef;
};

struct TNSRef<FI_TTagColumnTableViewController *> {
    FI_TTagColumnTableViewController *fRef;
};

struct TNSRef<FI_TTagEditorController *> {
    FI_TTagEditorController *fRef;
};

struct TNSRef<FI_TTagOperationDelegate *> {
    FI_TTagOperationDelegate *fRef;
};

struct TNSRef<FI_TTagSuggestionsWindowController *> {
    FI_TTagSuggestionsWindowController *fRef;
};

struct TNSRef<FI_TTaggingSuggestionsViewController *> {
    FI_TTaggingSuggestionsViewController *fRef;
};

struct TNSRef<FI_TTargetActionFunctor *> {
    FI_TTargetActionFunctor *fRef;
};

struct TNSRef<FI_TTaskErrorViewController *> {
    id _field1;
};

struct TNSRef<FI_TTextField *> {
    FI_TTextField *fRef;
};

struct TNSRef<FI_TTextWithTitleFieldImpl *> {
    FI_TTextWithTitleFieldImpl *fRef;
};

struct TNSRef<FI_TTitleField *> {
    FI_TTitleField *fRef;
};

struct TNSRef<FI_TUpdateLayerView *> {
    FI_TUpdateLayerView *fRef;
};

struct TNSRef<FI_TValidatingDateFormatter *> {
    FI_TValidatingDateFormatter *fRef;
};

struct TNSRef<FI_TView *> {
    FI_TView *fRef;
};

struct TNSRef<FI_TViewController *> {
    FI_TViewController *fRef;
};

struct TNSRef<FI_TWindowHistory *> {
    FI_TWindowHistory *fRef;
};

struct TNSRef<NSArray *> {
    NSArray *fRef;
};

struct TNSRef<NSColor *> {
    NSColor *fRef;
};

struct TNSRef<NSData *> {
    NSData *fRef;
};

struct TNSRef<NSDate *> {
    NSDate *fRef;
};

struct TNSRef<NSDateComponents *> {
    NSDateComponents *fRef;
};

struct TNSRef<NSDictionary *> {
    NSDictionary *fRef;
};

struct TNSRef<NSFont *> {
    NSFont *fRef;
};

struct TNSRef<NSFormatter *> {
    NSFormatter *fRef;
};

struct TNSRef<NSImage *(^)(TFENode, double)> {
    CDUnknownBlockType _field1;
};

struct TNSRef<NSImage *> {
    NSImage *fRef;
};

struct TNSRef<NSImageView *> {
    NSImageView *fRef;
};

struct TNSRef<NSIndexSet *> {
    NSIndexSet *fRef;
};

struct TNSRef<NSMutableArray *> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableDictionary *> {
    NSMutableDictionary *fRef;
};

struct TNSRef<NSMutableIndexSet *> {
    NSMutableIndexSet *fRef;
};

struct TNSRef<NSObject *> {
    NSObject *fRef;
};

struct TNSRef<NSOperationQueue *> {
    NSOperationQueue *fRef;
};

struct TNSRef<NSString *> {
    NSString *fRef;
};

struct TNSRef<NSTimer *> {
    NSTimer *fRef;
};

struct TNSRef<NSTrackingArea *> {
    NSTrackingArea *fRef;
};

struct TNSRef<NSURL *> {
    NSURL *fRef;
};

struct TNSRef<NSView *> {
    NSView *fRef;
};

struct TNSRef<NSWindow *> {
    NSWindow *fRef;
};

struct TNSRef<QLPreviewPanel *> {
    QLPreviewPanel *fRef;
};

struct TNSRef<SFAirDropDiscoveryController *> {
    SFAirDropDiscoveryController *fRef;
};

struct TNSRef<SFWirelessSettingsController *> {
    SFWirelessSettingsController *fRef;
};

struct TNSRef<TBackupContainerDelegate *> {
    TBackupContainerDelegate *fRef;
};

struct TNSRef<TBulkRenameController *> {
    TBulkRenameController *fRef;
};

struct TNSRef<bool (^)(const TFENode &, TInfoExtractorData &)> {
    CDUnknownBlockType _field1;
};

struct TNSRef<id<FI_TAirDropNotAvailableDelegateProtocol>> {
    id fRef;
};

struct TNSRef<id<TStdAlertSheetClientProtocol>> {
    id fRef;
};

struct TNSRef<id> {
    id fRef;
};

struct TNSRef<void (^)()> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(FIAirDropListViewCellView *)> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(const TFENode &)> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(const TFENodeVector &, const TError &)> {
    CDUnknownBlockType fRef;
};

struct TNSRef<void (^)(const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
    CDUnknownBlockType _field1;
};

struct TNSRef<void (^)(long)> {
    CDUnknownBlockType fRef;
};

struct TNewFolderAction {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
    CDUnknownFunctionPointerType *_field8;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field9;
    struct TNodeChangeNotifier _field10;
    _Bool _field11;
    struct TString _field12;
    id _field13;
    struct TFENode _field14;
    struct TFENodePropertyList _field15;
    struct TFENode _field16;
    _Bool _field17;
    _Bool _field18;
    struct TValidatorItem<TNewFolderAction> _field19;
};

struct TNewFolderCallbackHandler {
    id _field1;
    long long _field2;
    struct TValidatorToken<TNewFolderAction> _field3;
    _Bool _field4;
};

struct TNodeBrowser {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field3;
    struct TNodeChangeNotifier _field4;
    _Bool _field5;
    struct TString _field6;
    struct TCoalescingNodeObserver *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field11;
    set_55a3e8f7 _field12;
    _Bool _field13;
    struct TMutex _field14;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field15;
    struct unordered_map<TFENode, TNodeEngine::ObservingRecord, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNodeEngine::ObservingRecord>>> _field16;
    struct vector<TNodeEngineNotificationHandler *, std::__1::allocator<TNodeEngineNotificationHandler *>> _field17;
    _Bool _field18;
    struct TRef<dispatch_queue_s *, TRetainReleasePolicy<dispatch_queue_t>> _field19;
    struct TFENodeVector _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct TValidatorItem<TNodeEngine> _field24;
    id _field25;
    struct TTargetPathObserver _field26;
    struct TFENodeVector _field27;
    struct TFENodeVector _field28;
    _Bool _field29;
    _Bool _field30;
    struct TNSRef<FI_TRenameOperation *> _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
};

struct TNodeChangeNotifier {
    struct OpaqueEventNotifier *fChangeNotifier;
};

struct TNodeEngineNotificationHandler;

struct TNodeGroups {
    struct __tree<std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, std::__1::__map_value_compare<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, std::__1::less<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, true>, std::__1::allocator<std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>>> {
        struct __tree_node<std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::__value_type<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, std::__1::less<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct TNodeObserverCocoaBridge {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    id _field6;
    unsigned int _field7;
};

struct TNodeToChildrenMap {
    set_55a3e8f7 _field1;
    struct unordered_map<TFENode, TChildList, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildList>>> _field2;
    unsigned int _field3;
};

struct TNotificationCenterObserver {
    NSObject *fObserver;
    struct TString fNotificationName;
    id fObject;
};

struct TOperationRecord {
    struct OperationRecord _field1;
    struct TFENode _field2;
    struct TFENode _field3;
    struct TFENode _field4;
};

struct TPromiseDragReceiverThread {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct _opaque_pthread_t *_field3;
    struct TThreadSafeQueue<TNSRef<NSURL *>> _field4;
    struct function<void (const TFENodeVector &, const TError &)> {
        struct function<void (const TFENodeVector &, const TError &)> {
            struct type _field1;
            struct __base<void (const TFENodeVector &, const TError &)> *_field2;
        } _field1;
        struct TNSRef<void (^)(const TFENodeVector &, const TError &)> _field2;
    } _field5;
    _Bool _field6;
    _Bool _field7;
};

struct TQLPreviewQTEjectHelper {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TCoalescingNodeObserver *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field10;
    set_55a3e8f7 _field11;
    _Bool _field12;
    struct TFENodeVector _field13;
    id _field14;
    _Bool _field15;
};

struct TReadWriteLock {
    struct _opaque_pthread_rwlock_t {
        long long __sig;
        char __opaque[192];
    } fRWLock;
};

struct TRecursiveMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> {
    struct CGImage *fRef;
};

struct TRef<OpaqueIconRef *, TRetainReleasePolicy<IconRef>> {
    struct OpaqueIconRef *fRef;
};

struct TRef<OpaqueLSSharedFileListItemRef *, TRetainReleasePolicy<LSSharedFileListItemRef>> {
    struct OpaqueLSSharedFileListItemRef *_field1;
};

struct TRef<TBaseNodeComparator *, TRetainReleasePolicy<TBaseNodeComparator *>> {
    struct TBaseNodeComparator *fRef;
};

struct TRef<TTagsAction *, TRefCountedRetainReleasePolicy> {
    struct TTagsAction *_field1;
};

struct TRef<TUndoableAction *, TRefCountedRetainReleasePolicy> {
    struct TUndoableAction *fRef;
};

struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> {
    struct __CFFileSecurity *_field1;
};

struct TRef<__CFMachPort *, TRetainReleasePolicy<CFMachPortRef>> {
    struct __CFMachPort *fRef;
};

struct TRef<__CFRunLoopSource *, TRetainReleasePolicy<CFRunLoopSourceRef>> {
    struct __CFRunLoopSource *fRef;
};

struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> {
    struct __SFOperation *_field1;
};

struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> {
    struct __CFArray *_field1;
};

struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> {
    struct __CFDictionary *_field1;
};

struct TRef<const __CFLocale *, TRetainReleasePolicy<CFLocaleRef>> {
    struct __CFLocale *_field1;
};

struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> {
    struct __CFString *fRef;
};

struct TRef<dispatch_queue_s *, TRetainReleasePolicy<dispatch_queue_t>> {
    struct dispatch_queue_s *_field1;
};

struct TRenameAction {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
    CDUnknownFunctionPointerType *_field8;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field9;
    struct TNodeChangeNotifier _field10;
    _Bool _field11;
    struct TString _field12;
    struct TFENodeVector _field13;
    struct TStringVector _field14;
    struct TStringVector _field15;
    struct TStringVector _field16;
    struct vector<bool, std::__1::allocator<bool>> _field17;
    struct TNSRef<FI_TRenameOperation *> _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
};

struct TRenameUndoRedoOperationHelper {
    struct TRenameAction *_field1;
};

struct TSharedFileListItem {
    struct TRef<OpaqueLSSharedFileListItemRef *, TRetainReleasePolicy<LSSharedFileListItemRef>> _field1;
};

struct TSideLayoutBinding {
    struct TNSRef<NSView *> masterView;
    int kind;
    struct CGRect frame;
};

struct TString {
    struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> fString;
};

struct TStringVector {
    struct TString *__begin_;
    struct TString *__end_;
    struct __compressed_pair<TString *, std::__1::allocator<TString>> {
        struct TString *__first_;
    } __end_cap_;
};

struct TTagsAction;

struct TTagsTask {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    unsigned long long _field5;
    struct TFENodeVector _field6;
    struct TRef<TTagsAction *, TRefCountedRetainReleasePolicy> _field7;
};

struct TTargetPathObserver {
    CDUnknownFunctionPointerType *_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct TNodeChangeNotifier _field3;
    _Bool _field4;
    struct TString _field5;
    struct TNodeBrowser *_field6;
};

struct TTask {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field3;
    struct TNSRef<FI_TTaskErrorViewController *> _field4;
    struct TNSRef<FI_TStandardProgressController *> _field5;
    struct TNSRef<FI_TStandardStatusViewController *> _field6;
    double _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    long long _field11;
};

struct TThreadSafeQueue<TNSRef<NSURL *>> {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TConditionVariable _field3;
    struct IBaseQueueStyle<TNSRef<NSURL *>> *_field4;
    struct vector<TNSRef<NSURL *>, std::__1::allocator<TNSRef<NSURL *>>> _field5;
};

struct TThumbnailExtractorController;

struct TThumbnailExtractorData {
    struct TFENode _field1;
    struct map<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TThumbnailExtractorData::TThumbnailData>>> _field2;
    struct TFENodeData _field3;
};

struct TTypeSelectController {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    struct TString _field3;
    void *_field4;
};

struct TTypedData;

struct TUndoableAction;

struct TValidatorItem<IInfoExtractorController> {
    long long _field1;
};

struct TValidatorItem<TNewFolderAction> {
    long long _field1;
};

struct TValidatorItem<TNodeEngine> {
    long long _field1;
};

struct TValidatorToken<TNewFolderAction> {
    long long _field1;
};

struct TriStateBool {
    int fState;
};

struct UTCDateTime {
    unsigned short _field1;
    unsigned int _field2;
    unsigned short _field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>;

struct __hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>;

struct __list_node<TNSRef<NSURL *>, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct dispatch_queue_s;

struct list<TNSRef<NSURL *>, std::__1::allocator<TNSRef<NSURL *>>> {
    struct __list_node_base<TNSRef<NSURL *>, void *> {
        struct __list_node<TNSRef<NSURL *>, void *> *__prev_;
        struct __list_node<TNSRef<NSURL *>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<TNSRef<NSURL *>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<TFENode, CGRect, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGRect>>> {
    struct __tree<std::__1::__value_type<TFENode, CGRect>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, CGRect>>> {
        struct __tree_node<std::__1::__value_type<TFENode, CGRect>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, TFENode, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENode>>> {
    struct __tree<std::__1::__value_type<TFENode, TFENode>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TFENode>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TFENode>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TFENode>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TFENode>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TFENode>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TNSRef<FI_TContainerExtraData *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<FI_TContainerExtraData *>>>> {
    struct __tree<std::__1::__value_type<TFENode, TNSRef<FI_TContainerExtraData *>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<FI_TContainerExtraData *>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TNSRef<FI_TContainerExtraData *>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TNSRef<FI_TContainerExtraData *>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TNSRef<FI_TContainerExtraData *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<FI_TContainerExtraData *>>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TNSRef<NSMutableDictionary *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary *>>>> {
    struct __tree<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> {
    struct __tree<std::__1::__value_type<TFENode, TObserverStats>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TObserverStats>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TObserverStats>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TObserverStats>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TObserverStats>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TObserverStats>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> {
    struct __tree<std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> {
        struct __tree_node<std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TNSRef<NSView *>, unsigned long, std::__1::less<TNSRef<NSView *>>, std::__1::allocator<std::__1::pair<const TNSRef<NSView *>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TNSRef<NSView *>, unsigned long>, std::__1::__map_value_compare<TNSRef<NSView *>, std::__1::__value_type<TNSRef<NSView *>, unsigned long>, std::__1::less<TNSRef<NSView *>>, true>, std::__1::allocator<std::__1::__value_type<TNSRef<NSView *>, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<TNSRef<NSView *>, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TNSRef<NSView *>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TNSRef<NSView *>, std::__1::__value_type<TNSRef<NSView *>, unsigned long>, std::__1::less<TNSRef<NSView *>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TNodeObserver *, TObserverStats, std::__1::less<TNodeObserver *>, std::__1::allocator<std::__1::pair<TNodeObserver *const, TObserverStats>>> {
    struct __tree<std::__1::__value_type<TNodeObserver *, TObserverStats>, std::__1::__map_value_compare<TNodeObserver *, std::__1::__value_type<TNodeObserver *, TObserverStats>, std::__1::less<TNodeObserver *>, true>, std::__1::allocator<std::__1::__value_type<TNodeObserver *, TObserverStats>>> {
        struct __tree_node<std::__1::__value_type<TNodeObserver *, TObserverStats>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TNodeObserver *, TObserverStats>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TNodeObserver *, std::__1::__value_type<TNodeObserver *, TObserverStats>, std::__1::less<TNodeObserver *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> {
    struct __tree<std::__1::__value_type<const TFENode, TCoalescedEvents *>, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, TCoalescedEvents *>, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::__value_type<const TFENode, TCoalescedEvents *>>> {
        struct __tree_node<std::__1::__value_type<const TFENode, TCoalescedEvents *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TFENode, TCoalescedEvents *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, std::__1::__value_type<const TFENode, TCoalescedEvents *>, std::__1::less<const TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, std::__1::allocator<std::__1::pair<const std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, std::__1::__map_value_compare<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, std::__1::__value_type<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TThumbnailExtractorData::TThumbnailData>>> {
    struct __tree<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct pair<TFENode, TFENodePropertyList>;

struct pair<TNSRef<FI_TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<FI_TLayoutBinder *>>;

struct set<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
    struct __tree<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
        struct __tree_node<TFENode, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TFENode, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TFENode>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TString, std::__1::less<TString>, std::__1::allocator<TString>> {
    struct __tree<TString, std::__1::less<TString>, std::__1::allocator<TString>> {
        struct __tree_node<TString, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TString, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TString>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> {
    struct __tree<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> {
        struct __tree_node<UDefaults::RegistryID, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UDefaults::RegistryID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UDefaults::RegistryID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<double, std::__1::less<double>, std::__1::allocator<double>> {
    struct __tree<double, std::__1::less<double>, std::__1::allocator<double>> {
        struct __tree_node<double, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<double, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<double>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<ISpawnOrigin> {
    struct ISpawnOrigin *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TThumbnailExtractorController> {
    struct TThumbnailExtractorController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<TAirDropSenderOperationController, std::__1::default_delete<TAirDropSenderOperationController>>;

struct unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>;

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, TString>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<TFENode, Point32, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, Point32>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, Point32>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, Point32>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, Point32>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, Point32>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, Point32>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, Point32>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, Point32>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TCachedMetricsData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCachedMetricsData>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TCachedMetricsData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TCachedMetricsData>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TCachedMetricsData>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TChildList, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildList>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TChildList>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TChildList>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TChildList>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TChildList>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TChildList>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TChildList>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TChildList>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENode>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TFENode>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TFENode>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TIconLayoutData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TIconLayoutData>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TIconLayoutData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TIconLayoutData>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TIconLayoutData>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TNSRef<FI_TInlineProgressHostLayer *>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<FI_TInlineProgressHostLayer *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<FI_TInlineProgressHostLayer *>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNSRef<NSMutableDictionary *>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNodeEngine::ObservingRecord, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNodeEngine::ObservingRecord>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNodeEngine::ObservingRecord>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TProgressState, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TProgressState>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TProgressState>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TProgressState>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TProgressState>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TString, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TString>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TString>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TString>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TString>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TString, TNSRef<NSImage *>, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<std::__1::pair<const TString, TNSRef<NSImage *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::hash<TString>, true>, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::equal_to<TString>, true>, std::__1::allocator<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::hash<TString>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage *>>, std::__1::equal_to<TString>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>, TStringCaseInsensitiveHash, TStringCaseInsensitiveCompare, std::__1::allocator<std::__1::pair<const TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveHash, true>, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveCompare, true>, std::__1::allocator<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveCompare, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<Browser::ColumnDesc, std::__1::allocator<Browser::ColumnDesc>> {
    struct ColumnDesc *_field1;
    struct ColumnDesc *_field2;
    struct __compressed_pair<Browser::ColumnDesc *, std::__1::allocator<Browser::ColumnDesc>> {
        struct ColumnDesc *_field1;
    } _field3;
};

struct vector<DataBrowserItemSpatialData, std::__1::allocator<DataBrowserItemSpatialData>> {
    struct DataBrowserItemSpatialData *__begin_;
    struct DataBrowserItemSpatialData *__end_;
    struct __compressed_pair<DataBrowserItemSpatialData *, std::__1::allocator<DataBrowserItemSpatialData>> {
        struct DataBrowserItemSpatialData *__first_;
    } __end_cap_;
};

struct vector<TFENodePropertyList, std::__1::allocator<TFENodePropertyList>> {
    struct TFENodePropertyList *_field1;
    struct TFENodePropertyList *_field2;
    struct __compressed_pair<TFENodePropertyList *, std::__1::allocator<TFENodePropertyList>> {
        struct TFENodePropertyList *_field1;
    } _field3;
};

struct vector<TFormattedDateEntry, std::__1::allocator<TFormattedDateEntry>> {
    struct TFormattedDateEntry *__begin_;
    struct TFormattedDateEntry *__end_;
    struct __compressed_pair<TFormattedDateEntry *, std::__1::allocator<TFormattedDateEntry>> {
        struct TFormattedDateEntry *__first_;
    } __end_cap_;
};

struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> {
    struct SearchScopeDefinition *_field1;
    struct SearchScopeDefinition *_field2;
    struct __compressed_pair<TMDQueryAliasNode::SearchScopeDefinition *, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> {
        struct SearchScopeDefinition *_field1;
    } _field3;
};

struct vector<TNSRef<NSURL *>, std::__1::allocator<TNSRef<NSURL *>>> {
    struct TNSRef<NSURL *> *_field1;
    struct TNSRef<NSURL *> *_field2;
    struct __compressed_pair<TNSRef<NSURL *>*, std::__1::allocator<TNSRef<NSURL *>>> {
        struct TNSRef<NSURL *> *_field1;
    } _field3;
};

struct vector<TNodeEngineNotificationHandler *, std::__1::allocator<TNodeEngineNotificationHandler *>> {
    struct TNodeEngineNotificationHandler **_field1;
    struct TNodeEngineNotificationHandler **_field2;
    struct __compressed_pair<TNodeEngineNotificationHandler **, std::__1::allocator<TNodeEngineNotificationHandler *>> {
        struct TNodeEngineNotificationHandler **_field1;
    } _field3;
};

struct vector<TOperationRecord, std::__1::allocator<TOperationRecord>> {
    struct TOperationRecord *__begin_;
    struct TOperationRecord *__end_;
    struct __compressed_pair<TOperationRecord *, std::__1::allocator<TOperationRecord>> {
        struct TOperationRecord *__first_;
    } __end_cap_;
};

struct vector<TTypedData, std::__1::allocator<TTypedData>> {
    struct TTypedData *__begin_;
    struct TTypedData *__end_;
    struct __compressed_pair<TTypedData *, std::__1::allocator<TTypedData>> {
        struct TTypedData *__first_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *_field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long _field1;
    } _field3;
};

struct vector<char, std::__1::allocator<char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<TNSRef<FI_TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<FI_TLayoutBinder *>>, std::__1::allocator<std::__1::pair<TNSRef<FI_TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<FI_TLayoutBinder *>>>> {
    struct pair<TNSRef<FI_TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<FI_TLayoutBinder *>> *__begin_;
    struct pair<TNSRef<FI_TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<FI_TLayoutBinder *>> *__end_;
    struct __compressed_pair<std::__1::pair<TNSRef<FI_TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<FI_TLayoutBinder *>>*, std::__1::allocator<std::__1::pair<TNSRef<FI_TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<FI_TLayoutBinder *>>>> {
        struct pair<TNSRef<FI_TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<FI_TLayoutBinder *>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::unique_ptr<TAirDropSenderOperationController, std::__1::default_delete<TAirDropSenderOperationController>>, std::__1::allocator<std::__1::unique_ptr<TAirDropSenderOperationController, std::__1::default_delete<TAirDropSenderOperationController>>>> {
    struct unique_ptr<TAirDropSenderOperationController, std::__1::default_delete<TAirDropSenderOperationController>> *__begin_;
    struct unique_ptr<TAirDropSenderOperationController, std::__1::default_delete<TAirDropSenderOperationController>> *__end_;
    struct __compressed_pair<std::__1::unique_ptr<TAirDropSenderOperationController, std::__1::default_delete<TAirDropSenderOperationController>>*, std::__1::allocator<std::__1::unique_ptr<TAirDropSenderOperationController, std::__1::default_delete<TAirDropSenderOperationController>>>> {
        struct unique_ptr<TAirDropSenderOperationController, std::__1::default_delete<TAirDropSenderOperationController>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>, std::__1::allocator<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>>> {
    struct unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>> *_field1;
    struct unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>*, std::__1::allocator<std::__1::unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>>>> {
        struct unique_ptr<TIconLayoutBitmap, std::__1::default_delete<TIconLayoutBitmap>> *_field1;
    } _field3;
};

#if 0
// Names with conflicting types:
typedef struct ?<NSImage *(TFENode, double)> {
    struct type _field1;
    struct __base<NSImage *(TFENode, double)> *_field2;
} function_ef29e158;

typedef struct ?<bool (const TFENode &, TInfoExtractorData &)> {
    struct type _field1;
    struct __base<bool (const TFENode &, TInfoExtractorData &)> *_field2;
} function_67946993;

typedef struct ?<void ()> {
    struct type __buf_;
    struct __base<void ()> *__f_;
} function_f9feaa7d;

typedef struct ?<void (FIAirDropListViewCellView *)> {
    struct type __buf_;
    struct __base<void (FIAirDropListViewCellView *)> *__f_;
} function_988d70bf;

typedef struct ?<void (const TFENode &)> {
    struct type __buf_;
    struct __base<void (const TFENode &)> *__f_;
} function_35ade228;

typedef struct ?<void (const TFENodeVector &, const TError &)> {
    struct type __buf_;
    struct __base<void (const TFENodeVector &, const TError &)> *__f_;
} function_85df7881;

typedef struct ?<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
    struct type _field1;
    struct __base<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> *_field2;
} function_ebaa1d07;

typedef struct ?<void (long)> {
    struct type __buf_;
    struct __base<void (long)> *__f_;
} function_2d7db078;

typedef struct ?<NSImage *(TFENode, double)> {
    struct function<NSImage *(TFENode, double)> {
        struct type _field1;
        struct __base<NSImage *(TFENode, double)> *_field2;
    } _field1;
    struct TNSRef<NSImage *(^)(TFENode, double)> _field2;
} function_a54c24b5;

typedef struct ?<bool (const TFENode &, TInfoExtractorData &)> {
    struct function<bool (const TFENode &, TInfoExtractorData &)> {
        struct type _field1;
        struct __base<bool (const TFENode &, TInfoExtractorData &)> *_field2;
    } _field1;
    struct TNSRef<bool (^)(const TFENode &, TInfoExtractorData &)> _field2;
} function_ee22d9c0;

typedef struct ?<void ()> {
    function_f9feaa7d fStandardFunction;
    struct TNSRef<void (^)()> fManagedBlock;
} function_e430924f;

typedef struct ?<void (FIAirDropListViewCellView *)> {
    function_988d70bf fStandardFunction;
    struct TNSRef<void (^)(FIAirDropListViewCellView *)> fManagedBlock;
} function_06505f9d;

typedef struct ?<void (const TFENode &)> {
    function_35ade228 fStandardFunction;
    struct TNSRef<void (^)(const TFENode &)> fManagedBlock;
} function_966f7bb5;

typedef struct ?<void (const TFENodeVector &, const TError &)> {
    function_85df7881 fStandardFunction;
    struct TNSRef<void (^)(const TFENodeVector &, const TError &)> fManagedBlock;
} function_40a2a9af;

typedef struct ?<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
    struct function<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> {
        struct type _field1;
        struct __base<void (const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> *_field2;
    } _field1;
    struct TNSRef<void (^)(const std::__1::vector<TInfoExtractorData, std::__1::allocator<TInfoExtractorData>>&)> _field2;
} function_31d84ef5;

typedef struct ?<void (long)> {
    function_2d7db078 fStandardFunction;
    struct TNSRef<void (^)(long)> fManagedBlock;
} function_1729d245;

#endif

#pragma mark Typedef'd Structures

// Template types
typedef struct TRef<TUndoableAction *, TRefCountedRetainReleasePolicy> {
    struct TUndoableAction *fRef;
} TRef_9e01da98;

typedef struct map<TFENode, CGRect, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGRect>>> {
    struct __tree<std::__1::__value_type<TFENode, CGRect>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, CGRect>>> {
        struct __tree_node<std::__1::__value_type<TFENode, CGRect>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_7cee3aba;

typedef struct set<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
    struct __tree<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
        struct __tree_node<TFENode, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TFENode, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TFENode>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_55a3e8f7;

typedef struct set<double, std::__1::less<double>, std::__1::allocator<double>> {
    struct __tree<double, std::__1::less<double>, std::__1::allocator<double>> {
        struct __tree_node<double, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<double, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<double>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_bb8d1d1f;

typedef struct shared_ptr<ISpawnOrigin> {
    struct ISpawnOrigin *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_524a2e6c;

typedef struct shared_ptr<TThumbnailExtractorController> {
    struct TThumbnailExtractorController *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0f967b3d;

typedef struct unordered_map<TFENode, TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENode>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TFENode>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TFENode>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TFENode, TFENode>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::hash<TFENode>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENode>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_3cc67d30;

typedef struct vector<Browser::ColumnDesc, std::__1::allocator<Browser::ColumnDesc>> {
    struct ColumnDesc *_field1;
    struct ColumnDesc *_field2;
    struct __compressed_pair<Browser::ColumnDesc *, std::__1::allocator<Browser::ColumnDesc>> {
        struct ColumnDesc *_field1;
    } _field3;
} vector_abc0d4d8;

typedef struct vector<DataBrowserItemSpatialData, std::__1::allocator<DataBrowserItemSpatialData>> {
    struct DataBrowserItemSpatialData *__begin_;
    struct DataBrowserItemSpatialData *__end_;
    struct __compressed_pair<DataBrowserItemSpatialData *, std::__1::allocator<DataBrowserItemSpatialData>> {
        struct DataBrowserItemSpatialData *__first_;
    } __end_cap_;
} vector_3577cbd0;

typedef struct vector<TFENodePropertyList, std::__1::allocator<TFENodePropertyList>> {
    struct TFENodePropertyList *_field1;
    struct TFENodePropertyList *_field2;
    struct __compressed_pair<TFENodePropertyList *, std::__1::allocator<TFENodePropertyList>> {
        struct TFENodePropertyList *_field1;
    } _field3;
} vector_d50fdf79;

typedef struct vector<TTypedData, std::__1::allocator<TTypedData>> {
    struct TTypedData *__begin_;
    struct TTypedData *__end_;
    struct __compressed_pair<TTypedData *, std::__1::allocator<TTypedData>> {
        struct TTypedData *__first_;
    } __end_cap_;
} vector_3d8babec;

