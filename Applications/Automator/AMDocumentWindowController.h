//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

#import "AMMediaPanelObserver.h"
#import "NSToolbarDelegate.h"
#import "NSWindowDelegate.h"

@class AMAction, AMGlossyStatusView, AMLibraryViewController, AMLoadingErrorsDisplayController, AMLogViewController, AMPersonalityChooserDisplayController, AMSplitView, AMVariablesViewController, AMWorkflowController, AMWorkflowLog, AMWorkflowView, NSButton, NSDictionary, NSProgressIndicator, NSString, NSTabView, NSTextField, NSView;

__attribute__((visibility("hidden")))
@interface AMDocumentWindowController : NSWindowController <NSToolbarDelegate, NSWindowDelegate, AMMediaPanelObserver>
{
    AMSplitView *majorSplitView;
    NSView *libraryViewContainer;
    AMWorkflowView *workflowView;
    AMSplitView *minorSplitView;
    NSTabView *logTabView;
    AMGlossyStatusView *statusView;
    NSProgressIndicator *progressIndicator;
    NSTextField *statusField;
    NSButton *logButton;
    NSButton *variablesButton;
    NSButton *workflowStatusButton;
    AMWorkflowController *_workflowController;
    AMLogViewController *_logViewController;
    AMVariablesViewController *_variablesViewController;
    AMLibraryViewController *_libraryViewController;
    AMWorkflowLog *_workflowLog;
    AMAction *_recordingAction;
    NSWindowController *_recordingHUDWindowController;
    AMLoadingErrorsDisplayController *_loadingErrorsDisplayController;
    AMPersonalityChooserDisplayController *_startingPointsDisplayController;
    AMPersonalityChooserDisplayController *_convertDisplayController;
    NSDictionary *_blackTextAttributes;
    NSDictionary *_grayTextAttributes;
    int _documentWindowControllerState;
    BOOL _observersAdded;
    CDUnknownBlockType _versionBrowserExitBlock;
}

+ (BOOL)hasLoadedWindow;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)playFailedSound;
+ (void)playCompletedSound;
+ (void)findAndPlaySoundNamed:(id)arg1 soundID:(unsigned int *)arg2;
@property(copy) CDUnknownBlockType versionBrowserExitBlock; // @synthesize versionBrowserExitBlock=_versionBrowserExitBlock;
@property int documentWindowControllerState; // @synthesize documentWindowControllerState=_documentWindowControllerState;
@property(retain) AMAction *recordingAction; // @synthesize recordingAction=_recordingAction;
@property(readonly, retain) AMWorkflowLog *workflowLog; // @synthesize workflowLog=_workflowLog;
@property(readonly, retain) AMVariablesViewController *variablesViewController; // @synthesize variablesViewController=_variablesViewController;
@property(readonly, retain) AMWorkflowController *workflowController; // @synthesize workflowController=_workflowController;
@property(readonly, retain) AMWorkflowView *workflowView; // @synthesize workflowView;
- (void)windowWillExitVersionBrowser:(id)arg1;
- (void)windowWillEnterVersionBrowser:(id)arg1;
- (void)hideHUD:(id)arg1;
- (void)showHUD:(id)arg1;
@property(getter=hudEnabled, setter=setHUDEnabled:) BOOL hudEnabled;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (id)toolbarItemWithIdentifier:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (void)setupToolbar;
- (void)deleteVariable:(id)arg1;
- (void)removeGroups:(id)arg1;
- (void)editGroup:(id)arg1;
- (void)addGroup:(id)arg1;
- (void)addSmartGroup:(id)arg1;
- (void)addAutomatorVariables:(id)arg1;
- (void)addAutomatorActions:(id)arg1;
- (void)selectActionInLibrary:(id)arg1;
- (void)showLibrary:(id)arg1;
- (void)toggleLibrary:(id)arg1;
@property(readonly) BOOL isShowingLibrary;
- (void)findInLibrary:(id)arg1;
- (void)didStopRecording:(id)arg1;
- (void)noAccessibilityAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)recordUIEvents:(id)arg1;
- (void)convertTo:(id)arg1;
- (void)document:(id)arg1 didDuplicateWithConversion:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)convertToSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)stopProgress;
- (void)startProgress;
- (void)resetWorkflow:(id)arg1;
- (void)pause:(id)arg1;
- (void)step:(id)arg1;
- (void)stop:(id)arg1;
- (void)run:(id)arg1;
- (void)mediaPanelDidClose:(id)arg1;
- (void)mediaPanelDidOpen:(id)arg1;
- (void)toggleMediaPanel:(id)arg1;
- (BOOL)isShowingMediaPanel;
- (void)toggleVariablesView:(id)arg1;
- (void)showVariablesView:(id)arg1;
- (void)toggleWorkflowLog:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)showWorkflowLog:(id)arg1;
- (BOOL)isShowingLogView;
- (void)updateStatusBarButtons;
- (id)workflowFinishedStatusMessageWithError:(id)arg1;
- (void)startingPointsSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)displayStartingPoints;
- (void)displayLoadingErrors:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)workflow:(id)arg1 didAddVariable:(id)arg2;
- (void)workflowController:(id)arg1 workflowWasModified:(id)arg2;
- (void)workflowController:(id)arg1 didLogMessage:(id)arg2 ofType:(unsigned long long)arg3 fromAction:(id)arg4;
- (void)workflowController:(id)arg1 didError:(id)arg2;
- (void)workflowController:(id)arg1 didRunConversion:(id)arg2;
- (void)workflowController:(id)arg1 willRunConversion:(id)arg2;
- (void)workflowController:(id)arg1 didRunAction:(id)arg2;
- (void)workflowController:(id)arg1 willRunAction:(id)arg2;
- (void)workflowControllerDidPause:(id)arg1;
- (void)workflowControllerDidStop:(id)arg1;
- (void)workflowControllerDidRun:(id)arg1;
- (void)workflowController:(id)arg1 didResumeWithAction:(id)arg2;
- (void)workflowControllerWillRun:(id)arg1;
- (void)notifyWorkflowOfActivation;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
@property(readonly) BOOL personalityControllerExists;
- (BOOL)isRunning;
- (BOOL)isPaused;
- (BOOL)canStep;
- (BOOL)canStop;
- (BOOL)canRunOrPause;
- (BOOL)canRun;
- (BOOL)canRecord;
@property(readonly) BOOL documentIsInViewingMode;
- (void)restoreStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (id)convertDisplayController;
@property(readonly, retain) AMPersonalityChooserDisplayController *startingPointsDisplayController;
- (id)loadingErrorsDisplayController;
- (void)windowDidLoad;
- (void)dealloc;
- (void)removeFromMaps_ask;
- (void)recursiveRemoveFromMaps:(id)arg1;
- (id)windowNibName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

