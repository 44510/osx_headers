//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "PVContentView.h"

@class NSColor, NSLayoutConstraint, NSProgressIndicator, NSTextField, NSTimer, PVPSFileContainer;

@interface PVContentLoadingView : NSView <PVContentView>
{
    NSView *_containerView;
    NSProgressIndicator *_progressIndicator;
    NSTextField *_titleLabel;
    NSTextField *_progressLabel;
    PVPSFileContainer *_mediaContainer;
    NSTimer *_delayedProgressIndicationUITimer;
    unsigned long long _stateToDisplayAfterDelayTimerFires;
    BOOL _ignoreUIStateChangesUntilDelayTimerFires;
    BOOL autoResizes;
    BOOL showsCheckerboardBackground;
    NSLayoutConstraint *_pinToTopConstraint;
    NSLayoutConstraint *_verticallyCenterConstraint;
    long long toolMode;
    long long defaultToolMode;
    NSColor *backgroundColor;
}

@property BOOL showsCheckerboardBackground; // @synthesize showsCheckerboardBackground;
@property(retain) NSColor *backgroundColor; // @synthesize backgroundColor;
@property BOOL autoResizes; // @synthesize autoResizes;
@property(readonly) long long defaultToolMode; // @synthesize defaultToolMode;
@property long long toolMode; // @synthesize toolMode;
@property(retain, nonatomic) NSLayoutConstraint *verticallyCenterConstraint; // @synthesize verticallyCenterConstraint=_verticallyCenterConstraint;
@property(retain, nonatomic) NSLayoutConstraint *pinToTopConstraint; // @synthesize pinToTopConstraint=_pinToTopConstraint;
@property PVPSFileContainer *mediaContainer; // @synthesize mediaContainer=_mediaContainer;
@property NSTextField *titleLabel; // @synthesize titleLabel=_titleLabel;
@property NSTextField *progressLabel; // @synthesize progressLabel=_progressLabel;
@property NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property NSView *containerView; // @synthesize containerView=_containerView;
- (BOOL)shouldAnimateToAndFromContactSheet;
- (id)layerFromCurrentViewStateInRect:(struct CGRect)arg1;
- (id)layerFromCurrentViewState;
- (struct CGRect)contentRect;
- (double)zoomToFitZoomFactorWithContentSize:(struct CGSize)arg1;
- (double)zoomFactorForUIZoomFactor:(double)arg1 withContentResolution:(double)arg2;
- (double)uiZoomFactorForZoomFactor:(double)arg1 withContentResolution:(double)arg2;
- (double)zoomFactorForUIZoomFactor:(double)arg1;
- (double)uiZoomFactorForZoomFactor:(double)arg1;
- (double)clampedZoomFactor:(double)arg1;
- (double)maxZoomFactor;
- (double)minZoomFactor;
@property(readonly) struct CGPoint zoomCenter;
- (void)setZoomFactor:(double)arg1 withCenter:(struct CGPoint)arg2 animate:(BOOL)arg3 stickyFit:(BOOL)arg4;
- (void)setZoomFactor:(double)arg1 animate:(BOOL)arg2 stickyFit:(BOOL)arg3;
@property double zoomFactor;
- (void)zoomToSelection;
@property(readonly) double zoomToFitZoomFactor;
@property(readonly) BOOL canZoomToSelection;
@property(readonly) BOOL canZoomToFit;
@property(readonly) BOOL canZoomOut;
@property(readonly) BOOL canZoomIn;
@property(readonly) BOOL hasCroppableSelection;
- (BOOL)supportsEyeDropperMode;
- (BOOL)supportsToolMode:(long long)arg1;
- (id)undoManager;
- (void)_showLoadingState;
@property(readonly) struct CGSize naturalLoadingSize;
- (void)updateProgressPage:(unsigned long long)arg1 ofTotal:(unsigned long long)arg2;
- (void)setConversionStartDate:(id)arg1;
- (void)setConstraintsForLayout:(unsigned long long)arg1;
- (void)setLoadingState:(unsigned long long)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property long long addingMarkupType;
@property long long addingStampShape;
@property(readonly) double defaultAnnotationFontSize;
@property BOOL inEyeDropperMode;

@end

