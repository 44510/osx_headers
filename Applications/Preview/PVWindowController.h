//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

#import "AKControllerDelegateProtocol.h"
#import "IKHierarchicalDatasource.h"
#import "NSMenuDelegate.h"
#import "NSOpenSavePanelDelegate.h"
#import "NSSharingServiceDelegate.h"
#import "NSSplitViewDelegate.h"
#import "NSTextFieldDelegate.h"
#import "NSToolbarDelegate.h"
#import "PVC3DCameraElementDelegate.h"
#import "PVEventInterceptorDelegate.h"
#import "PVFloatingSidebarDelegate.h"
#import "PVFullScreenToolbarDelegate.h"
#import "PVResizeOverlayViewDelegate.h"
#import "PVTextSearchQueryDelegate.h"
#import "PVTransitionOverlayViewDelegate.h"

@class IKHierarchicalDatasourceAdaptor, IKSaveOptions, NSArray, NSArrayController, NSButton, NSColor, NSCountedSet, NSDictionary, NSDocument, NSLayoutConstraint, NSMenu, NSMutableArray, NSMutableSet, NSObject<PVMediaElement>, NSOperationQueue, NSOutlineView, NSPanel, NSString, NSTableView, NSTimer, NSTitlebarAccessoryViewController, NSView, NSView<PVContentView>, NSWindow, PVActivityMonitor, PVAnnotationsSidebarController, PVBookmarksSidebarController, PVC3DView, PVContentLoadingView, PVEditBannerViewController, PVFloatingSidebarWindow, PVFloatingStringPanel, PVFullScreenOverlayView, PVIKImageBrowserView, PVIKImageView2, PVInlineScanViewController, PVLegacyBookmark, PVMediaContainerBase, PVNSSplitView, PVPDFView, PVPSFileContainer, PVPlaceholderThumbnailItem, PVQuickLookView, PVSearchBannerViewController, PVSearchResultsController, PVSidebarView, PVSubToolbarItemView, PVToolController, PVToolbarAccessoryViewSeparatorLineView, PVTransitionOverlayView, PVUndoCoalescer, PVUndoManager, SidebarPaneBottomView;

@interface PVWindowController : NSWindowController <IKHierarchicalDatasource, NSTextFieldDelegate, NSToolbarDelegate, NSSplitViewDelegate, PVC3DCameraElementDelegate, PVTextSearchQueryDelegate, PVEventInterceptorDelegate, PVFullScreenToolbarDelegate, PVFloatingSidebarDelegate, NSOpenSavePanelDelegate, PVTransitionOverlayViewDelegate, PVResizeOverlayViewDelegate, NSSharingServiceDelegate, NSMenuDelegate, AKControllerDelegateProtocol>
{
    NSArrayController *_containersArrayController;
    NSArrayController *_currentAnnotationsController;
    NSView *_rootView;
    PVNSSplitView *_splitView;
    PVSidebarView *_sidebarViewHolder;
    NSView *_rightSplitViewPane;
    NSView *_contentViewHolder;
    SidebarPaneBottomView *_sidebarPaneBottomView;
    NSView *_utilityViewHolder;
    NSMutableSet *_allLoadedNibTopLevelViews;
    PVPDFView *_pdfView;
    NSView *_imageViewContainerView;
    PVIKImageView2 *_imageView;
    PVQuickLookView *_quickLookView;
    PVC3DView *_c3dView;
    PVContentLoadingView *_contentLoadingView;
    NSMenu *_thumbnailContextMenu;
    NSMenu *_utilityViewContextMenu;
    NSView *_utilityThumbnailView;
    PVIKImageBrowserView *_thumbnailView;
    NSView *_utilityOutlineView;
    NSOutlineView *_outlineView;
    NSArrayController *_sidebarAnnotationsArrayController;
    NSView *_utilityAnnotationsView;
    NSTableView *_annotationsTableView;
    NSArrayController *_sidebarBookmarksArrayController;
    NSView *_utilityBookmarksView;
    NSTableView *_bookmarksTableView;
    NSView *_utilitySearchResultsView;
    NSOutlineView *_searchResultsOutlineView;
    NSView *_printPreviewView;
    NSButton *_printPreviewPrintButton;
    NSPanel *_slideshowControls;
    id _slideshowBackButton;
    id _slideshowForwardButton;
    id _slideshowPlayPauseButton;
    id _slideshowExitButton;
    BOOL _sidebarHolderUsesHUDStyle;
    double _sidebarHolderInnerMargin;
    double _sidebarHolderTopMargin;
    double _sidebarHolderBottomMargin;
    BOOL _printPreviewWasCancelled;
    IKHierarchicalDatasourceAdaptor *_thumbnailDataSource;
    long long _thumbnailGroupingStyle;
    NSColor *_thumbnailGroupHeaderColor;
    PVToolController *_toolController;
    PVUndoManager *_metaUndoManager;
    PVUndoManager *_windowUndoManager;
    PVUndoCoalescer *_currentUndoCoalescer;
    PVUndoCoalescer *_mostRecentUndoCoalescer;
    BOOL _waitingForSendEventToFinishForUndoCoalescing;
    unsigned long long _undoManagersStillBeingTracked;
    BOOL _disabledMetaUndoRegistrationForSubmanagerUndo;
    BOOL _allowWindowToLoad;
    BOOL _windowIsBeingRestored;
    NSMutableArray *_currentBanners;
    NSObject<PVMediaElement> *_currentMediaElement;
    PVMediaContainerBase *_currentMediaContainer;
    NSMutableArray *_outlineRoots;
    unsigned long long _beginAddingFilesMark;
    NSMutableArray *_mediaContainersToValidate;
    BOOL _hasLoadedAnnotations;
    PVLegacyBookmark *_initialRemoteGoToLinkBookmark;
    NSOperationQueue *_buildThumbnailOpQueue;
    IKSaveOptions *_exportSelectionSaveOptions;
    BOOL _exportSelectionCanReplace;
    long long _viewMode;
    long long _targetViewMode;
    BOOL _inContactSheetMode;
    long long _pageViewMode;
    long long _userSetWindowedPageViewMode;
    long long _userSetFullscreenPageViewMode;
    long long _contentViewKind;
    NSView<PVContentView> *_contentView;
    NSView *_contentRootView;
    BOOL _documentPathMenuEnabled;
    BOOL _userClosedNotesGutter;
    struct CGRect _contactSheetContentBoundsOnExit;
    NSObject<PVMediaElement> *_mediaElementOnEnteringContactSheet;
    BOOL _setupWindowDidFinish;
    BOOL _didSetupInitialWindowSize;
    BOOL _didSetupImageView;
    BOOL _didSetupPDFView;
    BOOL _didSetupC3DView;
    BOOL _didSetupQuickLookView;
    BOOL _readyToUpdateKeyViewLoop;
    BOOL _shouldUpdateFirstResponderWithKeyViewLoop;
    BOOL _shouldSelectSidebarAsFirstResponder;
    BOOL _thumbnailSidebarViewNeedUpdate;
    BOOL _thumbnailSidebarViewExpandedStateIsInited;
    BOOL _outlineSidebarViewNeedUpdate;
    BOOL _outlineViewExpandedStateIsInited;
    BOOL _annotationsSidebarViewNeedUpdate;
    BOOL _bookmarksSidebarViewNeedsUpdate;
    BOOL _persistSidebarWidthChanges;
    BOOL _didExitContactSheetViaEnter;
    long long _viewModeBeforeSearch;
    BOOL _isDisplayingSearchResults;
    PVSearchBannerViewController *_searchBannerViewController;
    BOOL _wholeWordSearch;
    BOOL _ignoreCaseSearch;
    NSString *_lastSearchQuery;
    PVSearchResultsController *_searchResultsController;
    NSArray *_searchResultSelections;
    long long _searchResultCurrentIndex;
    NSMutableSet *_asyncSearchObjects;
    BOOL _findingPrevious;
    PVAnnotationsSidebarController *_annotationsSidebarController;
    PVBookmarksSidebarController *_bookmarksSidebarController;
    PVEditBannerViewController *_editBannerViewController;
    PVToolbarAccessoryViewSeparatorLineView *_toolbarAccessorySeparatorView;
    BOOL _restoreEditBannerToVisible;
    NSDictionary *_toolbarItems;
    NSMenu *_shareMenu;
    long long _contactSheetThumbnailSize;
    unsigned long long _thumbnailViewFlavor;
    long long _containerSortOrder;
    BOOL _windowWillClose;
    BOOL _isClosingEntireWindow;
    BOOL _isClosingWindowBecauseOfTermination;
    NSDocument *_documentBeingClosed;
    BOOL _windowSizeIsNotStandard;
    BOOL _ignoreThumbnailSelectionChange;
    BOOL _ignoreOutlineViewSelectionChange;
    BOOL _ignoreQuickLookPageChange;
    NSTimer *_refreshUtilityViewTimer;
    NSTimer *_showPagePanelTimer;
    PVFloatingStringPanel *_pageNumberPanel;
    BOOL _slideshowRunning;
    BOOL _slideshowStartedFromFullScreen;
    long long _viewModeBeforeFullScreenSlideshow;
    long long _pageViewModeBeforeFullScreenSlideshow;
    BOOL _animateSyncFromMediaContainer;
    BOOL _dontStopAutoplayTimer;
    NSTimer *_autoplayTimer;
    NSMutableArray *_mediaContainers;
    long long _viewAreaUpdatesCount;
    unsigned long long _dragOperation;
    BOOL _isBypassingUIUpdatesForBulkChanges;
    BOOL _isRevertingCurrentContainer;
    BOOL _lastSetCurrentMediaElementWasForCaching;
    BOOL _isInSetCurrentMediaElement;
    BOOL _isInSetCurrentMediaContainer;
    BOOL _ignoreSetDocument;
    BOOL _someDocumentIsInAddWindowController;
    BOOL _isViewStateSynchingEnabled;
    BOOL _didFinishValidatingContainers;
    BOOL _pendingUpdateFileBookmarksInRestorableState;
    id _annotationSelectionChangeAdditionObserver;
    id _annotationSelectionChangeRemovalObserver;
    unsigned long long _regularWindowMask;
    struct CGRect _windowedContentRect;
    BOOL _sidebarWasOpen;
    long long _windowedViewMode;
    NSWindow *_fullScreenOverlayWindow;
    PVFullScreenOverlayView *_fullScreenOverlayView;
    BOOL _isInFullScreenMode;
    BOOL _isEnteringFullScreen;
    BOOL _isExitingFullScreen;
    struct CGRect _windowedFrame;
    NSTimer *_contactSheetColorFadeTimer;
    long long _toolbarVisibleInWindowedMode;
    BOOL _windowFrameChangedSinceNoteToggle;
    struct CGRect _windowFrameBeforeNoteToggle;
    PVTransitionOverlayView *_transitionOverlayView;
    BOOL _isInTransitionMode;
    id _currentTransitionStartElement;
    id _currentTransitionEndElement;
    BOOL _currentTransitionIsForward;
    BOOL _currentTransitionWasConfirmed;
    int _currentTransitionAxis;
    BOOL _contentViewWasFirstResponderBeforeTransition;
    id _furthestForwardCachedElement;
    id _furthestBackwardCachedElement;
    double _lastTransitionProgress;
    BOOL _swipeInProgress;
    char *_swipeAnimationCanceled;
    PVFloatingSidebarWindow *_sidebarOverlayWindow;
    NSView *_utilityViewBeforeSearch;
    BOOL _isMovingBannerInOut;
    BOOL _readyToPreloadLayers;
    NSMutableArray *_batchEditErrorsAndRecoveryBlocks;
    BOOL _asyncFileAccessIsDueToCheckCanCloseOnDocuments;
    unsigned long long _asyncFileAccessCount;
    unsigned long long _asyncFileAccessMaxCount;
    double _asyncFileAccessBeginTime;
    double _asyncFileAccessLastUIUpdateTime;
    PVActivityMonitor *_asyncFileAccessActivityMonitor;
    PVActivityMonitor *_invariantCreationActivityMonitor;
    double _firstInvariantCreationTime;
    double _lastInvariantCreationTime;
    BOOL _eatRemainderOfCurrentMouseGesture;
    PVInlineScanViewController *_scanViewController;
    BOOL _isShowingScanView;
    PVPlaceholderThumbnailItem *_placeholderThumbnailItem;
    unsigned long long _placeholderThumbnailIndex;
    BOOL _isFirstSearchForMessageTracer;
    NSCountedSet *_fileOpeningUTICountsForMessageTracer;
    NSCountedSet *_windowOpeningContainerTypeCountsForMessageTracer;
    NSMutableArray *_conflictResolutionBlocks;
    BOOL _isHandlingConflictResolutionBlocks;
    NSTitlebarAccessoryViewController *_editBannerAuxiliaryViewContainerController;
    NSTitlebarAccessoryViewController *_searchBannerAuxiliaryViewContainerController;
    PVPSFileContainer *_observedFileConversionOperation;
    NSArray *_lastSelectedAnnotations;
    NSLayoutConstraint *_contentViewWidthConstraint;
    NSLayoutConstraint *_contentViewMinimumHeightConstraint;
    NSLayoutConstraint *_sidebarViewWidthConstraint;
    NSLayoutConstraint *_sidebarViewMinimumWidthConstraint;
    NSLayoutConstraint *_sidebarViewMaximumWidthConstraint;
    NSLayoutConstraint *_sidebarHolderViewLeftConstraint;
    NSLayoutConstraint *_sidebarHolderViewRightConstraint;
    NSLayoutConstraint *_sidebarHolderViewTopConstraint;
    NSLayoutConstraint *_sidebarHolderViewBottomConstraint;
    NSLayoutConstraint *_sidebarHolderViewWidthConstraint;
    NSLayoutConstraint *_sidebarPaneBottomViewLayoutConstraint;
    NSLayoutConstraint *_utilityViewHolderLeftConstraint;
    NSLayoutConstraint *_utilityViewHolderRightConstraint;
    NSLayoutConstraint *_utilityViewHolderTopConstraint;
    NSLayoutConstraint *_utilityViewHolderBottomConstraint;
    double maxWidthOfBookmarksAndNotesTitle;
    NSLayoutConstraint *_highlightsAndNotesWidthConstraint;
    NSLayoutConstraint *_bookmarksWidthConstraint;
    NSLayoutConstraint *_windowContentViewPinToTopConstraint;
    NSLayoutConstraint *_contentViewHolderPinToTopConstraint;
    NSLayoutConstraint *_contentViewHolderPinToBottomConstraint;
    NSLayoutConstraint *_contentRootViewPinToBottomConstraint;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) NSLayoutConstraint *contentRootViewPinToBottomConstraint; // @synthesize contentRootViewPinToBottomConstraint=_contentRootViewPinToBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *contentViewHolderPinToBottomConstraint; // @synthesize contentViewHolderPinToBottomConstraint=_contentViewHolderPinToBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *contentViewHolderPinToTopConstraint; // @synthesize contentViewHolderPinToTopConstraint=_contentViewHolderPinToTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *windowContentViewPinToTopConstraint; // @synthesize windowContentViewPinToTopConstraint=_windowContentViewPinToTopConstraint;
@property NSLayoutConstraint *bookmarksWidthConstraint; // @synthesize bookmarksWidthConstraint=_bookmarksWidthConstraint;
@property NSLayoutConstraint *highlightsAndNotesWidthConstraint; // @synthesize highlightsAndNotesWidthConstraint=_highlightsAndNotesWidthConstraint;
@property(readonly) PVIKImageBrowserView *thumbnailView; // @synthesize thumbnailView=_thumbnailView;
@property(nonatomic) long long contentViewKind; // @synthesize contentViewKind=_contentViewKind;
@property BOOL printPreviewWasCancelled; // @synthesize printPreviewWasCancelled=_printPreviewWasCancelled;
@property(readonly) BOOL hasLoadedAnnotations; // @synthesize hasLoadedAnnotations=_hasLoadedAnnotations;
@property(retain, nonatomic) PVMediaContainerBase *currentMediaContainer; // @synthesize currentMediaContainer=_currentMediaContainer;
@property(retain, nonatomic) NSObject<PVMediaElement> *currentMediaElement; // @synthesize currentMediaElement=_currentMediaElement;
@property double maxWidthOfBookmarksAndNotesTitle; // @synthesize maxWidthOfBookmarksAndNotesTitle;
@property(retain, nonatomic) NSLayoutConstraint *utilityViewHolderBottomConstraint; // @synthesize utilityViewHolderBottomConstraint=_utilityViewHolderBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *utilityViewHolderTopConstraint; // @synthesize utilityViewHolderTopConstraint=_utilityViewHolderTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *utilityViewHolderRightConstraint; // @synthesize utilityViewHolderRightConstraint=_utilityViewHolderRightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *utilityViewHolderLeftConstraint; // @synthesize utilityViewHolderLeftConstraint=_utilityViewHolderLeftConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarPaneBottomViewLayoutConstraint; // @synthesize sidebarPaneBottomViewLayoutConstraint=_sidebarPaneBottomViewLayoutConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarHolderViewWidthConstraint; // @synthesize sidebarHolderViewWidthConstraint=_sidebarHolderViewWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarHolderViewBottomConstraint; // @synthesize sidebarHolderViewBottomConstraint=_sidebarHolderViewBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarHolderViewTopConstraint; // @synthesize sidebarHolderViewTopConstraint=_sidebarHolderViewTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarHolderViewRightConstraint; // @synthesize sidebarHolderViewRightConstraint=_sidebarHolderViewRightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarHolderViewLeftConstraint; // @synthesize sidebarHolderViewLeftConstraint=_sidebarHolderViewLeftConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarViewMaximumWidthConstraint; // @synthesize sidebarViewMaximumWidthConstraint=_sidebarViewMaximumWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarViewMinimumWidthConstraint; // @synthesize sidebarViewMinimumWidthConstraint=_sidebarViewMinimumWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *sidebarViewWidthConstraint; // @synthesize sidebarViewWidthConstraint=_sidebarViewWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *contentViewMinimumHeightConstraint; // @synthesize contentViewMinimumHeightConstraint=_contentViewMinimumHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *contentViewWidthConstraint; // @synthesize contentViewWidthConstraint=_contentViewWidthConstraint;
@property(retain) NSColor *thumbnailGroupHeaderColor; // @synthesize thumbnailGroupHeaderColor=_thumbnailGroupHeaderColor;
@property long long thumbnailGroupingStyle; // @synthesize thumbnailGroupingStyle=_thumbnailGroupingStyle;
@property BOOL isBypassingUIUpdatesForBulkChanges; // @synthesize isBypassingUIUpdatesForBulkChanges=_isBypassingUIUpdatesForBulkChanges;
@property(retain, nonatomic) NSArray *lastSelectedAnnotations; // @synthesize lastSelectedAnnotations=_lastSelectedAnnotations;
@property(retain) PVPSFileContainer *observedFileConversionOperation; // @synthesize observedFileConversionOperation=_observedFileConversionOperation;
@property(readonly) PVToolController *toolController; // @synthesize toolController=_toolController;
@property(readonly) PVUndoManager *metaUndoManager; // @synthesize metaUndoManager=_metaUndoManager;
@property(readonly) NSMenu *shareMenu; // @synthesize shareMenu=_shareMenu;
@property BOOL someDocumentIsInAddWindowController; // @synthesize someDocumentIsInAddWindowController=_someDocumentIsInAddWindowController;
@property BOOL swipeInProgress; // @synthesize swipeInProgress=_swipeInProgress;
@property(readonly) BOOL isExitingFullscreenMode; // @synthesize isExitingFullscreenMode=_isExitingFullScreen;
@property(readonly) BOOL isEnteringFullscreenMode; // @synthesize isEnteringFullscreenMode=_isEnteringFullScreen;
@property(readonly) BOOL isInFullscreenMode; // @synthesize isInFullscreenMode=_isInFullScreenMode;
@property(retain, nonatomic) NSObject<PVMediaElement> *mediaElementOnEnteringContactSheet; // @synthesize mediaElementOnEnteringContactSheet=_mediaElementOnEnteringContactSheet;
@property(readonly) BOOL isInContactSheetMode; // @synthesize isInContactSheetMode=_inContactSheetMode;
@property(readonly) NSArrayController *currentAnnotationsController; // @synthesize currentAnnotationsController=_currentAnnotationsController;
@property BOOL allowWindowToLoad; // @synthesize allowWindowToLoad=_allowWindowToLoad;
@property(readonly) PVNSSplitView *splitView; // @synthesize splitView=_splitView;
@property BOOL isClosingEntireWindow; // @synthesize isClosingEntireWindow=_isClosingEntireWindow;
@property BOOL windowIsBeingRestored; // @synthesize windowIsBeingRestored=_windowIsBeingRestored;
- (void)_logLayerContentsPropertyForViewHierarchy:(id)arg1;
- (void)assignProfileSheetEnded:(id)arg1 withResult:(long long)arg2 context:(void *)arg3;
- (void)searchSheetEnded:(id)arg1 withResult:(long long)arg2 context:(void *)arg3;
- (void)scaleFactorSheetEnded:(id)arg1 withResult:(long long)arg2 context:(void *)arg3;
- (void)goToPageNumberSheetEnded:(id)arg1 withResult:(long long)arg2 context:(void *)arg3;
- (id)currentPageNumberString;
- (id)pageLabel:(id)arg1;
- (BOOL)haveMultipleSelection;
- (BOOL)isOptionKeyPressed;
- (id)translateKeyCodeFromEvent:(id)arg1;
- (void)sendKeyEventToView:(id)arg1 withKeyCode:(unsigned short)arg2;
- (void)updateOutlineSelectionScrollingSelectionToBeVisible:(BOOL)arg1;
- (void)updateThumbnailsSelectionScrollingSelectionToBeVisible:(BOOL)arg1;
- (void)updateAppropriateSidebarSelectionsScrollingSelectionToBeVisible:(BOOL)arg1;
- (void)updateEditToolbarItem;
- (void)updateMarkupToolbarItem;
- (void)updateLoupeToolbarItem;
- (void)updateSelectionToolbarItem;
- (void)updateScaleFactorToolbarItems;
- (void)updateSearchCount:(long long)arg1 documentCount:(long long)arg2;
- (void)resetSearchCount;
- (void)updateCurrentPageNumberUI;
- (void)_hideMagicPocketOverlayIfNecessary;
- (void)_updateMagicPocketOverlayVisibilityIfNecessary;
- (void)setPageViewMode:(long long)arg1 persist:(BOOL)arg2;
- (long long)pageViewMode;
- (long long)displayMode;
- (id)searchField;
- (void)exitContactSheetToViewMode:(long long)arg1;
- (void)enterContactSheetMode;
- (void)setPlaceholderThumbnailParent:(id)arg1 andIndex:(unsigned long long)arg2;
- (unsigned long long)placeholderThumbnailIndex;
- (id)placeholderThumbnailParent;
- (id)placeholderThumbnailItem;
@property BOOL isShowingScanViewOverlay;
- (void)setCurrentUtilitySubview:(id)arg1;
- (id)currentUtilitySubview;
- (id)sidebarViewForUtilityView:(id)arg1;
- (void)setViewMode:(long long)arg1;
- (long long)viewMode;
- (BOOL)viewModeIncludesThumbnails;
- (void)reloadUtilityViewDataScrollingSelectionToBeVisible:(BOOL)arg1;
- (id)printPreviewSoftProofProfileName;
- (BOOL)printPreviewCanSoftProof;
- (void)searchbarSearchResultsOrderChanged;
- (void)searchbarSearchScopeChanged;
- (void)clearHighlightedSearchResults;
- (void)highlightSearchResultSelection:(id)arg1;
- (void)highlightSearchResultMatches:(id)arg1 andSelectFirst:(BOOL)arg2;
- (void)gotoPDFDestination:(id)arg1;
- (void)ensureSearchResultsAreShown;
- (void)startAsyncSearchQuery:(id)arg1 ofKind:(unsigned long long)arg2;
- (void)refreshSearchResultsForDisplayMode:(unsigned long long)arg1;
- (void)_reallyPerformSearch:(id)arg1;
- (void)_setupSearchResultsControllerIfNecessary;
- (void)performSearch:(id)arg1;
- (void)cropPages:(id)arg1 toRects:(id)arg2 marqueePage:(id)arg3;
- (void)flipElementsVertical:(id)arg1;
- (void)flipElementsHorizontal:(id)arg1;
- (void)rotateElementsRight:(id)arg1;
- (void)rotateElementsLeft:(id)arg1;
- (void)_setCenterPage:(id)arg1 andPoint:(struct CGPoint)arg2;
- (void)getCenterPage:(id *)arg1 andPoint:(struct CGPoint *)arg2;
- (void)warnThatCroppingIsNonDestructive;
- (void)buildOutlineRoots;
- (id)selectedThumbnailItems;
- (void)stopShowingCurrentPagePanelNow;
- (void)stopShowingCurrentPagePanel:(id)arg1;
- (void)startShowingCurrentPagePanel;
- (void)_resetPagePanelFrame;
- (void)refreshUtilityViewTimerFired:(id)arg1;
- (void)setupSearchField:(id)arg1;
- (struct CGRect)seamlessOpeningContentFrame;
- (BOOL)contentViewIsAtActualSize;
- (struct CGRect)bestWindowFrameForCurrentMediaContainer;
- (struct CGSize)bestSizeForImages:(id)arg1 withZoomFactor:(double)arg2 autoResizing:(BOOL)arg3 initialSetup:(BOOL)arg4 forMaxContentSize:(struct CGSize)arg5;
- (struct CGSize)medianSizeForCurrentDocumentInPDFViewWithGetter:(CDUnknownBlockType)arg1;
- (long long)bestViewModeForMediaContainers;
- (void)_updateUtilityViewContextMenu;
- (void)_setupUtilityView;
- (void)disconnectFromPDFView;
- (void)connectToPDFView;
- (void)gotoPageWithoutNotification:(id)arg1;
- (void)updateKeyViewLoop;
- (void)_setupSplitView;
- (void)_setupConstraints;
- (void)_setupToolbar;
- (void)_setupSlideshowControlsIfNecessary;
- (void)_setupPrintPreviewViewIfNecessary;
- (void)_setupSearchResultsViewIfNecessary;
- (void)_setupBookmarksViewIfNecessary;
- (void)_setupHighlightsAndNotesViewIfNecessary;
- (void)_setupHighlightsAndBookmarksConstraintsIfNecessary;
- (void)_setupOutlineViewIfNecessary;
- (void)_setupThumbnailViewIfNecessary;
- (void)_setupSidebarContextMenusIfNecessary;
- (void)_setupC3DViewIfNecessary;
- (void)_setupQuickLookViewIfNecessary;
- (void)_setupImageViewIfNecessary;
- (void)_setupLoadingViewIfNecessary;
- (void)_setupPDFViewIfNecessary;
- (void)_loadNibNamed:(id)arg1;
- (void)setThumbnailViewAppearanceForStyle:(unsigned long long)arg1;
@property(readonly) PVSubToolbarItemView *subToolbarItemViewNoCreate;
- (void)destroyEditBannerViewController;
- (id)editBannerViewController;
- (void)destroySearchBannerViewController;
- (id)searchBannerViewController;
- (void)stopObservingConversion:(id)arg1;
- (void)startObservingConversion:(id)arg1;
- (void)stopObservingContainers:(id)arg1;
- (void)startObservingContainers:(id)arg1;
- (void)stopObservingUndoManager:(id)arg1;
- (void)startObservingUndoManager:(id)arg1;
- (void)multiErrorAlertDidEnd:(id)arg1 returnCode:(long long)arg2 soContinue:(CDUnknownBlockType)arg3;
- (void)_stopRecordingErrorsForBatchDelayedViaBlockEnqueuing;
- (void)_stopRecordingErrorsForBatchDelayedViaNotificationEnqueuing;
- (void)stopRecordingErrorsForBatchEditAndPresentThem;
- (void)document:(id)arg1 encounteredError:(id)arg2 withDidPresentCompletion:(CDUnknownBlockType)arg3;
- (void)startRecordingErrorsForBatchEdit;
- (void)_recoverFromErrors:(id)arg1 withOptionIndex:(long long)arg2 thenContinue:(CDUnknownBlockType)arg3;
- (void)_attemptToStartHandlingConflictResolutionsBlocks:(id)arg1;
- (void)document:(id)arg1 needsToShowConflictResolutionDialogUsingBlock:(CDUnknownBlockType)arg2;
- (void)hideSPODExplanationSheetsIfNecessary;
- (void)_closeInvariantSheetIfNecessary;
- (void)_updateInvariantSheetVisibility:(id)arg1;
- (void)showInvariantSheetIfNecessary;
- (void)undoManagerActionNameChanged:(id)arg1;
- (void)undoManagerDidFinishUndoingOrRedoing:(id)arg1;
- (void)undoManagerWillBeginUndoing:(id)arg1;
- (void)undoManagerDidAddRealEdits:(id)arg1;
- (void)sendEventFinished:(id)arg1;
- (void)undoManagerDidEndEditTracking:(id)arg1;
- (void)undoManagerWillBeginEditTracking:(id)arg1;
- (void)_endUndoTracking;
- (void)_beginUndoTrackingIfNecessary;
- (void)windowWillEnterVersions:(id)arg1;
- (void)pdfSelectionRectChanged:(id)arg1;
- (void)imageLoadComplete:(id)arg1;
- (void)pageContainerCropRectChanged:(id)arg1;
- (void)mediaElementThumbnailChanged:(id)arg1;
- (void)_mediaElementThumbnailChanged:(id)arg1;
- (void)usePageLabelsChanged:(id)arg1;
- (void)antiAliasingChanged:(id)arg1;
- (void)backgroundColorChanged:(id)arg1;
- (void)gutterDidChange:(id)arg1;
- (void)scaleChanged:(id)arg1;
- (void)pageChanged:(id)arg1;
- (void)documentChanged:(id)arg1;
- (void)passwordWarningSheetForPrintEnded:(id)arg1 withResult:(long long)arg2 context:(void *)arg3;
- (void)printAllContainers:(id)arg1;
- (id)_printOperationWithSettings:(id)arg1 containersToPrint:(id)arg2 selectedElements:(id)arg3 error:(id *)arg4;
- (void)deleteSelectedTableViewItem:(id)arg1;
- (void)gotoEncryptionView:(id)arg1;
- (void)moveToTrash:(id)arg1;
- (void)closeSelectedContainers:(id)arg1;
- (void)openInNewWindow:(id)arg1;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)alertSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)didEndSheet:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)exportSelection:(id)arg1;
- (void)sortIgnore:(id)arg1;
- (void)sortBySize:(id)arg1;
- (void)sortByKind:(id)arg1;
- (void)sortByDate:(id)arg1;
- (void)sortByFullpath:(id)arg1;
- (void)sortByName:(id)arg1;
- (void)showGeoLocationData:(id)arg1;
- (void)assignProfile:(id)arg1;
- (void)imageCorrection:(id)arg1;
- (void)imageSizing:(id)arg1;
- (void)toggleIgnoreCaseSearch:(id)arg1;
- (void)toggleWholeWordSearch:(id)arg1;
- (void)doUseSelectionForFind:(id)arg1;
- (void)doFindPrevious:(id)arg1;
- (void)doFindNext:(id)arg1;
- (void)doFind:(id)arg1;
- (void)delete:(id)arg1;
- (void)printPreviewCancel:(id)arg1;
- (void)printPreviewPrint:(id)arg1;
- (void)printPreviewSoftProofButton:(id)arg1;
- (void)sidebarExpandAllItems:(id)arg1;
- (void)sidebarCollapseAllItems:(id)arg1;
- (void)sidebarExpandOrCollapseAllItemsShouldExpand:(BOOL)arg1;
- (void)setViewModeContactSheet:(id)arg1;
- (void)setViewModeContentAndBookmarks:(id)arg1;
- (void)setViewModeContentAndAnnotations:(id)arg1;
- (void)setViewModeContentAndOutline:(id)arg1;
- (void)setViewModeContentAndThumbnails:(id)arg1;
- (void)setViewModeContentOnly:(id)arg1;
- (void)dummyActionForShareButton:(id)arg1;
- (void)dummyActionForViewButton:(id)arg1;
- (void)teardownSidebarTransitionView:(id)arg1;
- (id)setupSidebarTransitionViewWithDestinationBounds:(struct CGRect)arg1;
- (void)closeSidebarWithAnimation:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)openSidebarWithAnimation:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_addAnimationSidebarConstraints;
- (void)_removeAnimationSidebarConstraints;
- (void)_addNormalSidebarConstraints;
- (void)_removeNormalSidebarConstraints;
- (void)openSearchPanel:(id)arg1;
- (void)doSearchField:(id)arg1;
- (void)insertPagesFromFile:(id)arg1;
- (void)insertBlankPage:(id)arg1;
- (void)cropSelection:(id)arg1;
- (void)invertSelection:(id)arg1;
- (void)showInspectorWindow:(id)arg1;
- (void)slideshowToggleAutoplay:(id)arg1;
- (void)slideshowStopAutoplay:(id)arg1;
- (void)slideshowStartAutoplay:(id)arg1;
- (void)slideshowExit:(id)arg1;
- (void)slideshow:(id)arg1;
- (void)setPageViewModeBookFacingPages:(id)arg1;
- (void)setPageViewModeBookSinglePage:(id)arg1;
- (void)setPageViewModeScroll:(id)arg1;
- (void)bookmarkCurrentPage:(id)arg1;
- (void)toggleEditBanner:(id)arg1;
- (void)showEditBannerIfNecessary;
- (void)flipVertical:(id)arg1;
- (void)flipHorizontal:(id)arg1;
- (void)rotateLeft:(id)arg1;
- (void)rotateRight:(id)arg1;
- (void)softProofToPrintPreviewProfile:(id)arg1;
- (void)softProofToProfile:(id)arg1;
- (void)softProofToNoProfile:(id)arg1;
- (void)toggleImageBackgroundShown:(id)arg1;
- (void)openScaleFactorPanel:(id)arg1;
- (void)doZoomToFactor:(id)arg1;
- (void)doZoomToSelection:(id)arg1;
- (void)doZoomToFit:(id)arg1;
- (void)doZoomToActualSize:(id)arg1;
- (void)doZoomIn:(id)arg1;
- (void)doZoomOut:(id)arg1;
- (void)goToPageNumberPanel:(id)arg1;
- (void)goToPageNumber:(id)arg1;
- (void)doGoForwardInHistory:(id)arg1;
- (void)doGoBackInHistory:(id)arg1;
- (void)doGoToNextContainerInstantly:(id)arg1;
- (void)doGoToPreviousContainerInstantly:(id)arg1;
- (void)doGoForwardInstantly:(id)arg1;
- (void)doGoBackwardInstantly:(id)arg1;
- (void)doScrollDown:(id)arg1;
- (void)doScrollUp:(id)arg1;
- (void)pickAKToolFromSenderTag:(id)arg1;
- (void)pickToolFromSenderTag:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)setAKToolControllerToDefaultMode;
- (BOOL)contentViewSupportsEditBanner;
- (void)controllerWillShowSignatureCaptureView:(id)arg1;
- (BOOL)shouldPlaceFormElementAtPoint:(struct CGPoint)arg1 onOverlayAtPageIndex:(unsigned long long)arg2 forAnnotationController:(id)arg3;
- (BOOL)controllerShouldDetectFormElements:(id)arg1;
- (void)_calculateModelBaseScaleFactorForCurrentContainerIfNecessary;
- (struct CGRect)postioningRectForCandidatePicker;
- (void)controllerDidExitToolMode:(id)arg1;
- (void)controllerWillExitToolMode:(id)arg1;
- (void)controllerDidEnterToolMode:(id)arg1;
- (void)controllerWillEnterToolMode:(id)arg1;
- (void)controller:(id)arg1 didPlaceSingleShotAnnotation:(id)arg2 onPageModelController:(id)arg3;
- (void)controller:(id)arg1 willPlaceSingleShotAnnotation:(id)arg2 onProposedPageModelController:(id *)arg3;
- (void)setAnnotationCursor:(id)arg1;
- (id)newContentSnapshotPDFDataIncludingAdornments:(BOOL)arg1 atScale:(double)arg2 inRect:(struct CGRect)arg3 onOverlayAtPageIndex:(unsigned long long)arg4 forAnnotationController:(id)arg5;
- (struct CGRect)maxPageRectWithPageIndex:(unsigned long long)arg1 forAnnotationController:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromModelToOverlayWithPageIndex:(unsigned long long)arg2 forAnnotationController:(id)arg3;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromOverlayToModelWithPageIndex:(unsigned long long)arg2 forAnnotationController:(id)arg3;
- (void)_updateShareMenu;
- (void)_shareServiceSelected:(id)arg1;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (void)imageSizer:(id)arg1 concludedWithResult:(unsigned long long)arg2 context:(id)arg3;
- (void)contentView:(id)arg1 didAddAnnotation:(id)arg2;
- (void)searchBannerFindPrevButtonHit:(id)arg1;
- (void)searchBannerFindNextButtonHit:(id)arg1;
- (void)textSearchQueryDidEndSearching:(id)arg1;
- (void)textSearchQuery:(id)arg1 foundResults:(id)arg2 isDone:(BOOL)arg3;
- (void)textSearchQueryWillBeginSearching:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)imageBrowser:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2;
- (void)imageBrowser:(id)arg1 writeItemsFromPasteboardDictionary:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)imageBrowser:(id)arg1 addChildren:(id)arg2 ofItem:(id)arg3 toPasteboardDictionary:(id)arg4;
- (id)freshPasteboardContentAggregatorForImageBrowser:(id)arg1;
- (void)_generateDraggingDataForItem:(id)arg1 writingToPDFData:(id)arg2 andTiffData:(id)arg3;
- (id)undoManager;
- (id)imageBrowser:(id)arg1 removeItemsAtIndexes:(id)arg2 ofItem:(id)arg3;
- (unsigned long long)imageBrowser:(id)arg1 addItems:(id)arg2 atIndex:(unsigned long long)arg3 ofItem:(id)arg4;
- (void)imageBrowserDidEndEditingItems:(id)arg1;
- (void)imageBrowserWillBeginEditingItems:(id)arg1;
- (BOOL)imageBrowser:(id)arg1 itemAllowsChildAddAndRemove:(id)arg2;
- (id)imageBrowser:(id)arg1 groupForItem:(id)arg2;
- (BOOL)imageBrowser:(id)arg1 itemHasChildren:(id)arg2;
- (unsigned long long)imageBrowser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)imageBrowser:(id)arg1 parentOfChild:(id)arg2;
- (unsigned long long)imageBrowser:(id)arg1 indexOfChild:(id)arg2 ofItem:(id)arg3;
- (id)imageBrowser:(id)arg1 child:(unsigned long long)arg2 ofItem:(id)arg3;
- (void)imageBrowser:(id)arg1 rotatedItemAtIndex:(unsigned long long)arg2 byAngle:(long long)arg3;
- (void)imageBrowser:(id)arg1 magnifiedThumbnailsToSize:(unsigned long long)arg2;
- (BOOL)imageBrowser:(id)arg1 canRemoveItemsAtIndexes:(id)arg2;
- (void)imageBrowser:(id)arg1 backgroundWasRightClickedWithEvent:(id)arg2;
- (void)imageBrowser:(id)arg1 cellWasRightClickedAtIndex:(unsigned long long)arg2 withEvent:(id)arg3;
- (void)imageBrowser:(id)arg1 cellWasDoubleClickedAtIndex:(unsigned long long)arg2;
- (void)imageBrowser:(id)arg1 enterButtonPressedWithCellIndex:(unsigned long long)arg2;
- (void)imageBrowserSelectionDidChange:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (void)splitViewDidExpandOrCollapse:(id)arg1;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
@property(nonatomic) double persistentSidebarWidth;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (double)PDFViewScrollOpenGutterToWidth:(double)arg1;
- (void)PDFViewOrderVisiblePageDrawing:(id)arg1;
- (void)PDFViewOpenPDF:(id)arg1 forRemoteGoToAction:(id)arg2;
- (void)PDFViewPerformPrint:(id)arg1;
- (void)PDFViewPerformGoToPage:(id)arg1;
- (void)PDFViewPerformFind:(id)arg1;
- (void)PDFViewWillClickOnLink:(id)arg1 withURL:(id)arg2;
- (double)PDFViewWillChangeScaleFactor:(id)arg1 toScale:(double)arg2;
- (id)resizeOverlay:(id)arg1 layerForPDFPage:(id)arg2;
- (struct CGRect)resizeOverlay:(id)arg1 frameForPDFPage:(id)arg2;
- (void)transitionOverlay:(id)arg1 removedLayerForElement:(id)arg2;
- (id)transitionOverlay:(id)arg1 layerForElement:(id)arg2 isStartElement:(BOOL)arg3;
- (BOOL)transitionOverlay:(id)arg1 shouldUseTexturedBackgroundforElement:(id)arg2;
- (struct CGColor *)transitionOverlay:(id)arg1 backgroundColorforElement:(id)arg2;
- (void)performCleanupForTransitionOverlay:(id)arg1 confirmed:(BOOL)arg2 forceEnd:(BOOL)arg3;
- (void)fullScreenToolbarAutohidingDidChangeForWindow:(id)arg1;
- (void)updateFileBookmarksInRestorableState;
- (void)_updateFileBookmarksInRestorableState;
- (void)didRestoreWindow:(id)arg1;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)exitFullScreenAnimationFinished;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (void)enterFullScreenAnimationFinished;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (id)_targetLayerForImageViewFromSourceRect:(struct CGRect)arg1 toDestRect:(struct CGRect)arg2 storeBaseTransform:(struct CGAffineTransform *)arg3;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (void)_goToWindowedAppearance;
- (void)_goToFullScreenAppearance;
- (id)_getLayerForPage:(id)arg1 withScale:(double)arg2;
- (id)_windowScreenshotLayer;
- (void)_tearDownFullscreenAnimationOverlayWindow;
- (void)_setupFullscreenAnimationOverlayWindow;
- (long long)_fullscreenPageViewMode;
- (BOOL)_shouldSwitchToBookMode;
- (struct CGPoint)_convertPointFromScreenSpaceToFullScreenOverlay:(struct CGPoint)arg1;
- (struct CGRect)_screenFrameForFullScreen;
- (void)_autoplayTimerFire:(id)arg1;
- (void)_stopAutoplayTimer;
- (void)_startAutoplayTimer;
- (BOOL)slideshowCanGoToNext;
- (BOOL)slideshowCanGoToPrevious;
- (void)_hideSlideshowControlsAndCursor;
- (void)_hideSlideshowControls;
- (void)_showSlideshowControls;
- (void)floatingSidebarWillExpand:(id)arg1 needsUpdate:(BOOL)arg2;
- (void)floatingSidebar:(id)arg1 didResizeToWidth:(double)arg2;
- (double)maxWidthForFloatingSidebar:(id)arg1;
- (double)minWidthForFloatingSidebar:(id)arg1;
- (void)_updateFloatingSidebarHeight;
- (void)_disableFloatingSidebar;
- (void)_enableFloatingSidebar;
- (void)setSidebarHolderInnerMargin:(double)arg1;
- (void)setSidebarHolderBottomMargin:(double)arg1;
- (void)setSidebarHolderTopMargin:(double)arg1;
- (void)setSidebarHolderUsesHUDStyle:(BOOL)arg1;
- (void)_updateSidebarStyleForThumbnails;
- (void)_applySidebarHolderMargins;
- (double)_fullscreenToolbarHeight;
- (struct CGRect)_parentRectForFloatingSidebar;
- (void)openToBookmark:(id)arg1;
- (void)navigateToBookmark:(id)arg1;
- (void)setInitialBookmark:(id)arg1;
- (void)searchEvent:(id)arg1;
- (void)_delayedSearchEvent:(id)arg1;
- (void)documentChangedThumbnails;
- (void)undoMoveContainersToTrash:(id)arg1 urlsInTrash:(id)arg2 toPaths:(id)arg3 indexes:(id)arg4;
- (void)moveContainersToTrashAlertSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)moveContainersToTrash:(id)arg1;
- (void)finishedWithAsynchronousFileAccessOnDocument:(id)arg1;
- (void)willPerformAsynchronousFileAccessOnDocument:(id)arg1;
- (void)_updateAsyncFileActivityMonitor;
- (void)_destroyAsyncFileActivityMonitor;
- (void)_hideAsyncFileActivityMonitor;
- (void)_ensureAsyncFileActivityMonitor;
- (void)didRevertContainer:(id)arg1;
- (void)willRevertContainer:(id)arg1;
- (id)selectedElementsDescription;
- (id)selectedContainersDescription;
- (void)selectedContainers:(id *)arg1 andSelectedElementIndexes:(id *)arg2;
- (id)selectedPDFElements;
- (id)selectedC3DElements;
- (id)selectedImageElements;
- (id)selectedMediaElements;
- (id)selectedMediaContainers;
- (void)setContainerSortDescriptor:(id)arg1;
- (void)setContainerFilterPredicate:(id)arg1;
- (BOOL)mediaContainersAreFilteredOrSorted;
- (id)arrangedMediaContainers;
- (unsigned long long)addedFileCount;
- (void)finishedValidatingContainers;
- (void)validateNextContainer:(id)arg1;
- (void)didEndAddingFiles;
- (id)addFileURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)willBeginAddingFiles;
- (id)pageContainerWithPDFDocumentEqualTo:(id)arg1;
- (id)mediaContainerWithURLEqualTo:(id)arg1;
@property(readonly) BOOL hasAnnotations;
@property(readonly) BOOL allContainersAreImageMedia;
@property(readonly) BOOL allContainersArePDFMedia;
- (BOOL)hasMultipleMediaElements;
@property(readonly) unsigned long long mediaElementCount;
@property(readonly) NSArray *mediaElements;
@property(readonly) unsigned long long mediaContainerCount;
@property(readonly) NSArray *mediaContainers;
- (void)replaceMediaContainersAtIndexes:(id)arg1 withMediaContainers:(id)arg2;
- (void)removeMediaContainersAtIndexes:(id)arg1;
- (void)insertMediaContainers:(id)arg1 atIndexes:(id)arg2;
@property long long containerSortOrder;
- (void)synchronizeWindowTitleWithDocumentName;
- (void)setCurrentMediaElement:(id)arg1 cacheHint:(long long)arg2;
- (void)gotoMediaElementWithLabel:(id)arg1;
@property(readonly) NSView<PVContentView> *contentView;
- (void)_setupSidebarMinimumWidthConstraintForUtilityView:(id)arg1;
- (void)_setupBookmarksSidebarControllerIfNecessary;
- (void)_setupAnnotationsSidebarControllerIfNecessary;
@property(readonly) BOOL showsLinkAnnotations;
@property(readonly) NSOperationQueue *buildThumbnailOpQueue;
@property(readonly) long long thumbnailSizeToFitSidebarWidthAnimationTarget;
@property(readonly) long long thumbnailSizeToFitSidebarWidth;
- (long long)_sidebarThumbnailSizeForSidebarWidth:(double)arg1;
- (double)_currentSidebarThumbnailMarginWidth;
@property long long contactSheetThumbnailSize;
@property long long currentThumbnailSize;
@property(readonly) PVC3DView *c3dView;
@property(readonly) PVQuickLookView *quickLookView;
@property(readonly) PVContentLoadingView *contentLoadingView;
@property(readonly) PVPDFView *pdfViewNoCreate;
@property(readonly) PVPDFView *pdfView;
@property(readonly) PVIKImageView2 *imageView;
- (void)keyDown:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (BOOL)interceptEvent:(id)arg1;
- (void)close;
- (void)documentWillClose:(id)arg1;
- (void)endClosingWindowBecauseOfTermination:(BOOL)arg1;
- (void)beginClosingWindowBecauseOfTermination;
- (void)pvSomething:(id)arg1 didSomething:(BOOL)arg2 soContinue:(CDUnknownBlockType)arg3;
- (void)pvSomethingDidSomething:(BOOL)arg1 soContinue:(CDUnknownBlockType)arg2;
- (void)checkCanCloseOnDocuments:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)checkCanCloseOnAllDocuments:(CDUnknownBlockType)arg1;
- (void)windowWillClose:(id)arg1;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)showAlertForFailedLoadOfDocumentIfNecessary:(id)arg1;
- (void)showAlertForConvertedDocumentIfNecessary:(id)arg1;
- (void)reloadConvertedPSContainer:(id)arg1;
- (void)reloadDocument:(id)arg1 fromURL:(id)arg2;
- (id)document;
- (void)setDocument:(id)arg1;
- (void)_setupWindow;
- (void)_startPreloadingLayers;
- (void)windowDidLoad;
- (id)window;
- (void)showWindow:(id)arg1;
- (void)showWindowOnMainThread;
- (void)enableViewAreaUpdates;
- (void)disableViewAreaUpdates;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (oneway void)release;
- (id)retain;
- (id)initWithWindowNibName:(id)arg1;
- (void)_setupToolbarAuxiliaryViewContainers;
- (void)_adjustContentViewInsetForEditBannerHeight:(double)arg1;
- (void)bannerDidUninstall:(id)arg1;
- (void)bannerWillUninstall:(id)arg1;
- (void)bannerDidInstall:(id)arg1;
- (void)bannerWillInstall:(id)arg1;
- (void)installBanner:(id)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)uninstallBanner:(id)arg1 animated:(BOOL)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)performFadeTransitionForwards:(BOOL)arg1;
- (BOOL)performSwipeTransitionForwards:(BOOL)arg1 axis:(int)arg2;
- (BOOL)performTransitionForwards:(BOOL)arg1 axis:(int)arg2 swipe:(BOOL)arg3 duration:(double)arg4;
- (void)fluidSwipeWithEvent:(id)arg1;
- (void)cancelTransitionOverlay;
- (void)hideTransitionOverlay;
- (void)_hideTransitionOverlay;
- (void)showTransitionOverlay;
- (void)setupTransitionOverlay;
- (void)destroyTransitionOverlay;
- (BOOL)transitionOverlayIsVisible;
- (id)layerForTransitionWithMediaElement:(id)arg1 isStartElement:(BOOL)arg2;
- (void)mediaElementDiscardedLayer:(id)arg1;
- (void)mediaContainerNeedsNewLayers:(id)arg1;
- (void)mediaElementNeedsNewLayer:(id)arg1;
- (void)nearbyMediaElementsNeedNewLayers;
- (void)preloadNextLayersWithHint:(long long)arg1;
- (void)preloadLayersWithHint:(long long)arg1;
- (void)_preloadLayersForElements:(id)arg1;
- (void)_asyncLoadLayerForElement:(id)arg1 discardingPreviousLayer:(BOOL)arg2;
- (id)mediaElementsToCacheForHint:(long long)arg1;
- (id)nearbyMediaElements;
- (void)updateLayerCacheSize;
- (id)layerForMediaElement:(id)arg1;
- (id)layerForMediaElement:(id)arg1 isStartElement:(BOOL)arg2;
- (BOOL)_shouldDoFluidSwipeFromCurrentViewStateInDirection:(BOOL)arg1;
- (struct CGRect)_layerFrameForPage:(id)arg1 isStartElement:(BOOL)arg2;
- (BOOL)_currentTransitionUsesViewSnapshot;
- (BOOL)wantsForwardedScrollEventsForAxis:(long long)arg1;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (BOOL)isSmoothScrollingEnabled;
- (BOOL)canNavigateToNextContainer;
- (void)navigateToNextContainerInstantly;
- (BOOL)canNavigateToPreviousContainer;
- (void)navigateToPreviousContainerInstantly;
- (BOOL)canNavigateForwardInstantly;
- (void)navigateForwardInstantly;
- (BOOL)canNavigateBackwardInstantly;
- (void)navigateBackwardInstantly;
- (BOOL)canNavigateForwardWithSwipe;
- (void)navigateForwardWithSwipeOnAxis:(int)arg1;
- (BOOL)canNavigateBackwardWithSwipe;
- (void)navigateBackwardWithSwipeOnAxis:(int)arg1;
- (BOOL)canScrollDownOneScreen;
- (void)scrollDownOneScreen;
- (BOOL)canScrollUpOneScreen;
- (void)scrollUpOneScreen;
- (id)previousContainerForNavigationFromContainer:(id)arg1;
- (id)nextContainerForNavigationFromContainer:(id)arg1;
- (id)previousElementForInstantNavigationFromElement:(id)arg1;
- (id)nextElementForInstantNavigationFromElement:(id)arg1;
- (id)previousElementForSwipeNavigationFromElement:(id)arg1;
- (id)nextElementForSwipeNavigationFromElement:(id)arg1;
- (id)facingPageElementForElement:(id)arg1;
- (id)_previousElementForNavigationFromElement:(id)arg1 skipInterior:(BOOL)arg2;
- (id)_nextElementForNavigationFromElement:(id)arg1 skipInterior:(BOOL)arg2;
- (void)syncViewStateToCurrentMediaContainer;
- (void)syncViewStateFromCurrentMediaContainerIncludingLocation:(BOOL)arg1;
- (void)syncViewStateFromMediaContainer:(id)arg1 includingLocation:(BOOL)arg2;
- (void)syncViewStateToMediaContainer:(id)arg1;
- (void)initializeViewStateOnMediaContainer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

