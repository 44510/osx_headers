//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PDFView.h"

#import "NSScrollViewDelegate.h"
#import "PVContentView.h"
#import "PVContentViewAKControllerDelegate.h"
#import "PVLoupeMagnifiableView.h"

@class NSArray, NSColor, NSCursor, NSImage, NSMutableIndexSet, NSObject, NSSet, NSString, NSTextField, NSTimer, NSTrackingArea, PDFAnnotationPopup, PDFPage, PDFPageCache, PVAnnotation, PVPDFGutterView, PVPDFPageContainer, PVPDFSelectionRect;

@interface PVPDFView : PDFView <PVContentView, PVLoupeMagnifiableView, PVContentViewAKControllerDelegate, NSScrollViewDelegate>
{
    PVPDFPageContainer *_pageContainer;
    NSObject *_annotationsContainer;
    NSString *_annotationsKeyPath;
    NSObject *_annotationsSelectionIndexesContainer;
    NSString *_annotationsSelectionIndexesKeyPath;
    NSArray *_selectedAnnotationsCache;
    NSMutableIndexSet *_undoSelectionIndexes;
    PVPDFSelectionRect *_selectionRect;
    BOOL _trackingSelectionRect;
    long long _toolMode;
    NSTextField *_popupControl;
    PDFAnnotationPopup *_popupAnnotation;
    BOOL _softProof;
    NSImage *_selectionKnob;
    unsigned long long _addingAnnotationType;
    long long _addingMarkupType;
    unsigned long long _addingTextStyle;
    long long _addingStampShape;
    BOOL _trackingMarkupSelection;
    BOOL _trackingTextSelection;
    PVAnnotation *_controlClickedAnnotation;
    PVAnnotation *_controlClickedStrikethrough;
    PVPDFGutterView *_gutterView;
    long long _pasteboardChangeCount;
    long long _pasteCascadeNumber;
    struct CGPoint _pasteCascadeDelta;
    PDFPage *_pageBeingRotated;
    double _rotationAngle;
    BOOL _cachingEnable;
    PDFPageCache *_pageCache;
    NSTimer *_cacheRedrawTimer;
    NSTimer *_resumeCacheTimer;
    BOOL _forceSourceRedraw;
    BOOL _ignoreColorChange;
    BOOL _displayLinks;
    BOOL _respectScreenDPIForScale;
    struct CGSize _screenResolution;
    BOOL _showCheckerboardBackground;
    BOOL _autoHandle;
    BOOL _drawingEnabled;
    BOOL _isZooming;
    NSCursor *_cursor;
    NSTrackingArea *_loupeTrackingArea;
    id _loupeEventMonitor;
    BOOL _periodicEventsEnabled;
    double _lastLoupeMagnificationLevel;
    id _altSpaceEventMonitor;
    struct CGPoint _selectionStartPoint;
    struct CGPoint _selectionEndPoint;
    BOOL _hadSelectionAtMouseDown;
    BOOL _wasEditingTextAnnotationAtMouseDown;
    BOOL _isRemovingTextEditor;
    NSImage *_bookmarkImage;
    BOOL _observingAnnotationController;
    NSCursor *_annotationCursor;
    NSSet *_annotationsBeingDragged;
}

+ (id)pdfPageOfAnnotation:(id)arg1;
+ (id)backgroundPatternColor;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)initialize;
@property BOOL observingAnnotationController; // @synthesize observingAnnotationController=_observingAnnotationController;
@property(retain) NSSet *annotationsBeingDragged; // @synthesize annotationsBeingDragged=_annotationsBeingDragged;
@property(retain) NSCursor *annotationCursor; // @synthesize annotationCursor=_annotationCursor;
@property long long addingStampShape; // @synthesize addingStampShape=_addingStampShape;
@property unsigned long long addingTextStyle; // @synthesize addingTextStyle=_addingTextStyle;
@property(retain) NSArray *selectedAnnotationsCache; // @synthesize selectedAnnotationsCache=_selectedAnnotationsCache;
@property(retain) PVAnnotation *controlClickedStrikethrough; // @synthesize controlClickedStrikethrough=_controlClickedStrikethrough;
@property(retain) PVAnnotation *controlClickedAnnotation; // @synthesize controlClickedAnnotation=_controlClickedAnnotation;
@property BOOL isZooming; // @synthesize isZooming=_isZooming;
@property BOOL drawingEnabled; // @synthesize drawingEnabled=_drawingEnabled;
- (id)layerFromCurrentViewStateInRect:(struct CGRect)arg1;
- (id)layerFromCurrentViewState;
- (void)visiblePagesChanged:(id)arg1;
- (void)currentPageChanged:(id)arg1;
- (void)elementDidRotateNotification:(id)arg1;
- (void)_elementsDidRotate:(id)arg1;
- (void)thumbnailSelectionChanged:(id)arg1;
- (void)respectScreenDPIPrefChanged:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowChangedScreen:(id)arg1;
- (void)_annotationControllerWillTearDown:(id)arg1;
- (void)setCursorForContentView:(id)arg1;
- (id)bookmarkImage;
- (id)facingPageForPage:(id)arg1;
- (id)selectedPDFPages;
- (void)stopObservingAnnotations:(id)arg1;
- (void)startObservingAnnotations:(id)arg1;
- (BOOL)handleBackTabInFormField:(id)arg1;
- (BOOL)handleTabInFormField:(id)arg1;
- (BOOL)handleBackTabInTextWidget:(id)arg1;
- (BOOL)handleTabInTextWidget:(id)arg1;
- (BOOL)findNextFormFieldFromAnnotation:(id)arg1 forwards:(BOOL)arg2;
- (id)_PVAnnotationForPDFAnnotation:(id)arg1;
- (unsigned long long)currentPageIndex;
- (struct CGRect)alignedAnnotationRect:(struct CGRect)arg1 otherAnnotationRects:(struct CGRect *)arg2 count:(unsigned long long)arg3 alignedX:(double *)arg4 alignedY:(double *)arg5 alignAnyEdge:(BOOL)arg6;
- (void)commitTextAnnotationEditor;
- (void)stopEditingTextAnnotation;
- (void)startEditingTextAnnotation:(id)arg1 editorResizes:(BOOL)arg2;
- (void)ensureAnnotationPopupIsOpen:(id)arg1 selectAll:(BOOL)arg2;
- (void)deleteSelectedAnnotations;
- (BOOL)addAnnotation:(id)arg1 toPageElement:(id)arg2;
- (void)toggleMarkupOfType:(long long)arg1 overSelection:(id)arg2;
- (BOOL)clearMarkupsMatchingMask:(long long)arg1 except:(id)arg2 inRange:(struct _NSRange)arg3 ofPage:(id)arg4;
- (void)addAnnotationOfType:(unsigned long long)arg1 overSelection:(id)arg2;
- (void)addAnnotationOfType:(unsigned long long)arg1 onPage:(id)arg2 overRect:(struct CGRect)arg3;
- (void)createNewAnnotationOfType:(unsigned long long)arg1 withEvent:(id)arg2 onPage:(id)arg3 withBounds:(struct CGRect)arg4 singleClickCanCreate:(BOOL)arg5;
- (void)selectAnnotation:(id)arg1 byModifyingExistingSelection:(BOOL)arg2;
- (id)editableAnnotationUnderPoint:(struct CGPoint)arg1 isSelected:(char *)arg2 grabHandle:(long long *)arg3;
- (id)markupAnnotationAtCharacterIndex:(unsigned long long)arg1 onPage:(id)arg2;
- (id)markupAnnotationsInCharacterIndexRange:(struct _NSRange)arg1 onPage:(id)arg2;
- (id)annotationsUnderPoint:(struct CGPoint)arg1 onPage:(id)arg2;
- (id)annotationUnderPoint:(struct CGPoint)arg1 isSelected:(char *)arg2 grabHandle:(long long *)arg3;
- (void)changeAnnotationsSelectionIndexes:(id)arg1;
- (id)selectedAnnotationsOnPage:(id)arg1;
- (id)selectedAnnotations;
- (id)annotationsSelectionIndexes;
- (id)mutableAnnotations;
- (id)annotations;
- (BOOL)windowControllerSelectionContainsPage:(id)arg1;
- (void)orderVisiblePageDrawing:(id)arg1;
- (void)setSoftProof:(BOOL)arg1;
- (BOOL)softProof;
- (id)softProofProfileName;
- (BOOL)canSoftProof;
- (BOOL)overInteractiveItem:(id)arg1;
- (BOOL)moveSelectedAnnotationsHorizontal:(double)arg1 vertical:(double)arg2;
- (void)_trackAnnotationDrag:(id)arg1 withEvent:(id)arg2;
- (void)downTextTool:(id)arg1;
- (void)downMarkupTool:(id)arg1;
- (void)moveSelectionHorizontal:(double)arg1 vertical:(double)arg2;
- (void)trackSelectionDrag:(id)arg1;
- (void)trackSelectionResize:(id)arg1 usingHandle:(long long)arg2;
- (void)downSelectTool:(id)arg1;
- (void)trackScrollPDF:(id)arg1;
- (void)downScrollTool:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)scrollViewMagnificationDidEnd:(id)arg1;
- (void)scrollViewMagnificationDidBegin:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)searchInGoogle:(id)arg1;
- (void)contextMenuStrikethroughOnSelection:(id)arg1;
- (void)contextMenuRemoveNoteFromAnnotation:(id)arg1;
- (void)contextMenuEditNoteFromAnnotation:(id)arg1;
- (void)contextMenuAddNoteToAnnotation:(id)arg1;
- (void)contextMenuDeleteStrikethough:(id)arg1;
- (void)contextMenuDeleteAnnotation:(id)arg1;
- (void)delete:(id)arg1;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (BOOL)wantsForwardedScrollEventsForAxis:(long long)arg1;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setCursorForAreaOfInterest:(long long)arg1;
- (void)updateCursorForContentView:(id)arg1;
- (id)annotationCursorForMouseLocation:(struct CGPoint)arg1;
- (id)marqueeCursorForMouseLocation:(struct CGPoint)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)removeMarkupOverCurrentSelection:(long long)arg1;
- (void)removeControlClickedAnnotation;
- (void)applyTagColorToControlClickedAnnotation:(long long)arg1;
- (BOOL)toggleMarkupOverCurrentSelection:(long long)arg1;
- (BOOL)plopAnnotation:(unsigned long long)arg1;
- (BOOL)addAnnotationOverCurrentSelection:(unsigned long long)arg1;
- (BOOL)displaysLinks;
- (void)setDisplaysLinks:(BOOL)arg1;
@property long long addingMarkupType;
@property unsigned long long addingAnnotationType; // @synthesize addingAnnotationType=_addingAnnotationType;
- (void)clearPreviousTool;
@property long long toolMode;
@property PDFPage *marqueePage;
@property struct CGRect marquee;
@property(readonly) BOOL hasCroppableSelection;
- (void)setGreekingThreshold:(double)arg1;
- (void)setShouldAntiAlias:(BOOL)arg1;
- (void)setDisplayBox:(long long)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)pageIsSmallEnoughToCache:(id)arg1;
- (void)resumeCacheTimerElapsed:(id)arg1;
- (void)cacheRedrawTimerElapsed:(id)arg1;
- (void)tossCache;
- (void)setCachingEnable:(BOOL)arg1;
- (id)magnificationInflectionPointsForScrollView:(id)arg1;
- (void)_uninstallAllOverlaysOfController:(id)arg1;
- (void)_uninstallOverlayOfController:(id)arg1 forPageAtIndex:(unsigned long long)arg2;
- (void)_installOverlayOfController:(id)arg1 forPageAtIndex:(unsigned long long)arg2;
- (void)_setupOrTeardownOverlaysBasedOnVisiblityForController:(id)arg1;
- (id)newContentSnapshotPDFDataIncludingAdornments:(BOOL)arg1 atScale:(double)arg2 inRect:(struct CGRect)arg3 onOverlayAtPageIndex:(unsigned long long)arg4 forAnnotationController:(id)arg5;
- (struct CGRect)maxPageRectWithPageIndex:(unsigned long long)arg1 forAnnotationController:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromModelToOverlayWithPageIndex:(unsigned long long)arg2 forAnnotationController:(id)arg3;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromOverlayToModelWithPageIndex:(unsigned long long)arg2 forAnnotationController:(id)arg3;
- (BOOL)isSelectionVisible:(id)arg1;
- (void)prepareForFluidSwipe;
- (void)loadElement:(id)arg1 ofContainer:(id)arg2;
- (struct CGRect)centeredRectForPage:(id)arg1 scaleFactor:(double)arg2;
- (struct CGSize)pageViewSizeForPage:(id)arg1 scaleFactor:(double)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromPage:(id)arg2 forScaleFactor:(double)arg3;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromPage:(id)arg2 forScaleFactor:(double)arg3;
- (struct CGRect)contentRect;
- (double)zoomFactorForUIZoomFactor:(double)arg1 withContentResolution:(double)arg2;
- (double)uiZoomFactorForZoomFactor:(double)arg1 withContentResolution:(double)arg2;
- (double)zoomFactorForUIZoomFactor:(double)arg1;
- (double)uiZoomFactorForZoomFactor:(double)arg1;
- (double)clampedZoomFactor:(double)arg1;
- (double)maxZoomFactor;
- (double)minZoomFactor;
- (double)_calculateMaxZoomFactor;
- (double)_calculateMinZoomFactor;
- (void)_updateMinAndMaxZoomFactors;
@property BOOL autoResizes;
@property(readonly) struct CGPoint zoomCenter;
@property double zoomFactor;
- (void)setZoomFactor:(double)arg1 animate:(BOOL)arg2 stickyFit:(BOOL)arg3;
- (void)_alternateSetZoomFactor:(double)arg1 withCenter:(struct CGPoint)arg2 animate:(BOOL)arg3 stickyFit:(BOOL)arg4;
- (void)setZoomFactor:(double)arg1 withCenter:(struct CGPoint)arg2 animate:(BOOL)arg3 stickyFit:(BOOL)arg4;
- (void)_enableAutoResizingIfWithinEpsilon;
- (double)zoomToFitZoomFactorWithContentSize:(struct CGSize)arg1;
@property(readonly) double zoomToFitZoomFactor;
- (double)autoScaleFactorForPage:(id)arg1;
- (void)zoomToSelection;
@property(readonly) BOOL canZoomToSelection;
@property(readonly) BOOL canZoomToFit;
@property(readonly) BOOL canZoomOut;
@property(readonly) BOOL canZoomIn;
- (BOOL)shouldAnimateToAndFromContactSheet;
@property(readonly) double defaultAnnotationFontSize;
- (BOOL)supportsEyeDropperMode;
- (BOOL)supportsToolMode:(long long)arg1;
@property(readonly) long long defaultToolMode;
@property(readonly) struct CGSize loupeMagnifiedSizeDefault;
@property(readonly) double loupeMagnificationLevelDefault;
@property(readonly) double loupeMagnificationLevelMax;
@property(readonly) double loupeMagnificationLevelMin;
- (struct CGImage *)newLoupeImageInRect:(struct CGRect)arg1 withScale:(double)arg2;
- (void)updateLoupeNotification:(id)arg1;
- (void)loupeEventPeek:(id)arg1 mouseLocation:(struct CGPoint)arg2;
- (void)setCurrentSelection:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)setAutoScales:(BOOL)arg1;
- (void)setShowsGutter:(BOOL)arg1;
- (BOOL)showsGutter;
- (void)setAutomaticallyHandleGutter:(BOOL)arg1;
- (BOOL)automaticallyHandleGutter;
- (void)drawShadowedRect:(struct CGRect)arg1 blur:(double)arg2;
@property BOOL showsCheckerboardBackground;
- (void)goToPage:(id)arg1;
- (id)textSelectCursor;
- (void)drawPagePost:(id)arg1;
- (void)drawPage:(id)arg1;
- (void)drawPagePre:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)scrollHorizontalWithoutSwitchingPagesBy:(double)arg1;
- (void)scrollVerticalWithoutSwitchingPagesBy:(double)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollSelectionToVisible:(id)arg1;
- (void)viewDidEndLiveResize;
- (BOOL)acceptsFirstResponder;
- (void)awakeFromNib;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (BOOL)hasSelection;
@property(retain) PVPDFPageContainer *pageContainer;
- (BOOL)doDrawPageContent;
- (void)layoutDocumentView;
- (void)setGutterWidth:(double)arg1;
- (void)runDataDetectorsForVisiblePages;
- (void)resizeDisplayView:(id)arg1;
- (void)renewGState;
- (id)undoManager;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(retain) NSColor *backgroundColor; // @dynamic backgroundColor;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property BOOL inEyeDropperMode;
@property(readonly) Class superclass;

@end

