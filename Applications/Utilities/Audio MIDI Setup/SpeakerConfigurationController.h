//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

@class NSButton, NSMatrix, NSMutableArray, NSPopUpButton, NSScrollView, NSText, NSTextField, NSView, NSWindow, SpeakerConfigurationView;

@interface SpeakerConfigurationController : NSWindowController
{
    SpeakerConfigurationView *uiConfigurationView;
    NSTextField *uiDeviceNameString;
    NSMatrix *uiOutputFormatMatrix;
    NSText *uiSurroundTypeTitle;
    NSPopUpButton *uiSurroundFormatPopUp;
    NSScrollView *uiStreamMatrixContainer;
    NSView *uiStreamConfigContainer;
    NSButton *uiApplyButton;
    NSWindow *window;
    BOOL mConfigurationHasBeenChanged;
    struct CAAudioHardwareDevice *mDevice;
    unsigned char mDeviceSection;
    NSButton *mStreamButtonTemplate;
    NSMatrix *mStreamMatrix;
    struct AudioStreamList *mAudioStreamList;
    unsigned int mDeviceChannelCount;
    float mSCCYOffset;
    BOOL mUserIsConfiguringSurround;
    CDUnknownFunctionPointerType mIOProcID;
    NSMutableArray *mAvailableChannels;
    unsigned int mTestAudioChannelIndex;
    unsigned int mTestAudioCurrentCycle;
    unsigned int mTestAudioMaxCycles;
    BOOL mTestIsRunning;
    float *mPinkBuffer;
    float toneVolumeAdjustment;
}

+ (BOOL)multichannelConfigurationSupportedForDevice:(struct CAAudioHardwareDevice *)arg1 section:(unsigned char)arg2;
+ (BOOL)stereoConfigurationSupportedForDevice:(struct CAAudioHardwareDevice *)arg1 section:(unsigned char)arg2;
@property(readonly) float toneVolumeAdjustment; // @synthesize toneVolumeAdjustment;
@property BOOL testIsRunning; // @synthesize testIsRunning=mTestIsRunning;
@property(readonly) CDUnknownFunctionPointerType ioProcID; // @synthesize ioProcID=mIOProcID;
@property(readonly) struct CAAudioHardwareDevice *device; // @synthesize device=mDevice;
@property(readonly) unsigned int testAudioMaxCycles; // @synthesize testAudioMaxCycles=mTestAudioMaxCycles;
@property unsigned int testAudioCurrentCycle; // @synthesize testAudioCurrentCycle=mTestAudioCurrentCycle;
@property(readonly) float *pinkBuffer; // @synthesize pinkBuffer=mPinkBuffer;
@property(readonly) unsigned int testAudioChannelIndex; // @synthesize testAudioChannelIndex=mTestAudioChannelIndex;
- (void)iaDoneButtonPressed:(id)arg1;
- (void)iaApplyButtonPressed:(id)arg1;
- (void)stopTestIfRunning;
- (void)iaContextualHelpButtonPressed:(id)arg1;
- (void)iaSurroundFormatChanged:(id)arg1;
- (void)iaOutputFormatSelected:(id)arg1;
- (BOOL)saveChangesIfNecessary;
- (void)cleanupForCurrentDevice;
- (BOOL)applySpeakerConfiguration:(BOOL)arg1;
- (void)setAudioDevice:(struct CAAudioHardwareDevice *)arg1 section:(unsigned char)arg2;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;
- (id)windowNibName;
- (BOOL)validateMenuItem:(id)arg1;
- (void)privUpdateTestEnabledStatus;
- (void)privTestSpeakerConfiguration:(id)arg1;
- (int)privUnselectedOutputFormat;
- (unsigned int)privChannelsRequiredForSelectedOutputFormat;
- (void)privIAStreamSelectionChanged;
- (BOOL)privApplySurroundConfiguration;
- (BOOL)privApplyStereoConfiguration;
- (void)privSynchronizeUIWithSetOutputFormat;
- (void)privSetupUIForOutputFormat:(int)arg1 withLayout:(struct AudioChannelLayout *)arg2;
- (void)privUIEnableStreamsBasedOnLayout:(struct AudioChannelLayout *)arg1;
- (void)privUIEnableStreamsBasedOnSelection;
- (struct AudioChannelLayout *)privGetACLForPreferredChannelsForStereo;
- (void)privSynchronizePopUpWithOutputFormat:(int)arg1;
- (int)privSelectedOutputFormat;
- (void)privMakeSheetDirty:(id)arg1;

@end

