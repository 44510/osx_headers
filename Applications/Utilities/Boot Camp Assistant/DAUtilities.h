//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface DAUtilities : NSObject
{
}

+ (BOOL)isESDRequired;
+ (BOOL)isBootCampESDPresent;
+ (void)clearBootFlagForUSBDrives;
+ (id)enumerateUSBDrives;
+ (BOOL)isUEFIBootSupport;
+ (BOOL)isWindows8Only;
+ (BOOL)hasEnoughSpace:(struct __DADisk *)arg1;
+ (BOOL)hasSingleFAT:(struct __DADisk *)arg1;
+ (BOOL)isWindows7Only;
+ (BOOL)is32BitSupported;
+ (void)checkWindowsISOImage:(id)arg1 isWindows7:(char *)arg2 isWindows8OrLater:(char *)arg3 is64Bit:(char *)arg4;
+ (BOOL)checkInstallationMedia:(id)arg1 isWindows7:(char *)arg2 isWindows8OrLater:(char *)arg3 is64Bit:(char *)arg4;
+ (BOOL)isUEFISupport;
+ (BOOL)isCSPVDiskOrChildren:(struct __DADisk *)arg1;
+ (BOOL)restartForLV;
+ (int)checkBootableUSBDrive:(struct __DADisk *)arg1 bootDisk:(struct __DADisk **)arg2 supportUEFI:(BOOL)arg3 isWindows7:(char *)arg4 isWindows8OrLater:(char *)arg5 is64Bit:(char *)arg6;
+ (id)getDiskNameString:(struct __DADisk *)arg1;
+ (BOOL)usbInstallationSupported;
+ (id)getModelNameVersion:(id)arg1 versionNumber:(unsigned long long *)arg2;
+ (struct __DADisk *)getCoreStoragePVForLV:(id)arg1 disk:(struct __DADisk *)arg2;
+ (struct __DADisk *)getCoreStorageLVForPV:(id)arg1 disk:(struct __DADisk *)arg2;
+ (id)localizedStringWithLong:(long long)arg1;
+ (BOOL)hasOpticalDrive;
+ (unsigned long long)numericVersionWithMajor:(id)arg1 minor:(id)arg2;
+ (BOOL)vistaBootingSupported;
+ (void)advanceProgress:(id)arg1 newValue:(double)arg2;
+ (void)addView:(id)arg1 toTabView:(id)arg2 atIndex:(int)arg3;
+ (void)quit;
+ (void)restart;
+ (int)blessCurrentStartupDisk;
+ (int)blessCDWithDriveHint:(struct __DADisk *)arg1 supportUEFI:(BOOL)arg2 isWindows7:(char *)arg3 isWindows8OrLater:(char *)arg4 is64Bit:(char *)arg5;
+ (int)blessCD:(struct __DADisk *)arg1 supportUEFI:(BOOL)arg2 isWindows7:(char *)arg3 isWindows8OrLater:(char *)arg4 is64Bit:(char *)arg5;
+ (BOOL)containsRAID:(id)arg1 disk:(struct __DADisk *)arg2;
+ (void)getPartitions:(id)arg1 from:(struct __DADisk *)arg2 efi:(struct __DADisk **)arg3 hfs:(struct __DADisk **)arg4 msReserved:(struct __DADisk **)arg5 msdos:(struct __DADisk **)arg6 abt:(struct __DADisk **)arg7 cst:(struct __DADisk **)arg8;
+ (void)doWindowsFormat:(struct __DADisk *)arg1 delegate:(id)arg2;
+ (void)doEraseOperation:(struct __DADisk *)arg1 delegate:(id)arg2 isGPTPartition:(BOOL)arg3;
+ (void)doUnpartitionOperation:(struct __DADisk *)arg1 delegate:(id)arg2;
+ (void)doPartitionOperation:(struct __DADisk *)arg1 size:(id)arg2 delegate:(id)arg3 isGPTPartition:(BOOL)arg4;
+ (BOOL)enableJournaling;
+ (id)volumeNamesForDisk:(struct __DADisk *)arg1;
+ (id)externalDisks;
+ (id)internalDisks;
+ (long long)numberOfInternalDisks;
+ (BOOL)isWindowsOnly:(struct __DADisk *)arg1;
+ (BOOL)canInstall:(struct __DADisk *)arg1;
+ (BOOL)canErase:(struct __DADisk *)arg1;
+ (BOOL)canUnpartition:(struct __DADisk *)arg1 mergedCapacity:(long long *)arg2;
+ (long long)getUnpartitionedCapacity:(struct __DADisk *)arg1;
+ (BOOL)canUnpartition:(struct __DADisk *)arg1;
+ (BOOL)canPartition:(struct __DADisk *)arg1;
+ (BOOL)isStartupTopDisk:(struct __DADisk *)arg1;
+ (struct __DADisk *)getStartupTopDisk:(id)arg1;
+ (struct __DADisk *)getStartupDisk:(id)arg1;
+ (BOOL)getCapacities:(struct __DADisk *)arg1 capacity:(float *)arg2 used:(float *)arg3;
+ (id)getDiskIcon:(struct __DADisk *)arg1;
+ (id)getDiskName:(struct __DADisk *)arg1;
+ (int)driveSuitable:(struct __DADisk *)arg1 minMac:(long long)arg2 minOther:(long long)arg3 delegate:(id)arg4 capacity:(long long *)arg5 usedSize:(long long *)arg6 minSize:(long long *)arg7 mode:(int *)arg8 caseNumber:(int *)arg9 isGPTPartition:(BOOL)arg10;
+ (int)systemSuitable;

@end

