//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class IMAdminTable, IMDatabaseHandle, NSMutableSet, NSString, NSTimer;

@interface IMPersistentCache : NSObject
{
    IMDatabaseHandle *_db;
    IMAdminTable *_adminTable;
    NSMutableSet *_accessedIds;
    unsigned long long _cacheSize;
    unsigned long long _maxSize;
    unsigned long long _count;
    NSMutableSet *_unknownKeys;
    NSTimer *_scanTimer;
    NSString *_path;
    int _accessedIdsLock;
    int _unknownKeysLock;
}

@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (void)_scheduleSizeCleanup;
- (void)_accessedIdsAddObject:(id)arg1;
- (void)_accessedIdsRemoveAllObjects;
- (void)_unknownKeysAddObject:(id)arg1;
- (void)_unknownKeysRemoveObject:(id)arg1;
- (BOOL)_unknownKeysContainsObject:(id)arg1;
- (void)setLastAccessDate:(id)arg1;
- (long long)version;
- (void)_updateCaches:(id)arg1;
- (void)_sizeCleanup;
- (void)_LRUCleanupForMimeType:(id)arg1;
- (unsigned long long)_cacheSize;
- (void)_setCacheSize:(long long)arg1;
- (id)metadataForKey:(id)arg1;
- (void)clear;
- (id)allKeys;
- (unsigned long long)resourceSizeForKey:(id)arg1;
- (id)dataForKey:(id)arg1 mimeType:(id)arg2;
- (void)replaceDataForKey:(id)arg1 withData:(id)arg2 mimeType:(id)arg3;
- (void)deleteItemsWithAllKeysContaining:(id)arg1;
- (void)deleteItemsWithKeyLike:(id)arg1;
- (void)deleteItemForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (BOOL)hasItemForKey:(id)arg1;
- (id)deleteItemsForMimeType:(id)arg1;
- (id)itemsForMimeType:(id)arg1;
- (id)firstImageKeyWithRootKey:(id)arg1;
- (struct CGImage *)copyCGImageForKey:(id)arg1 resourceSize:(long long *)arg2;
- (id)CGImagesForKey:(id)arg1 size:(struct CGSize *)arg2 resourceSize:(long long *)arg3;
- (BOOL)insertCGImages:(id)arg1 forKey:(id)arg2 mimeType:(id)arg3 baseSize:(struct CGSize)arg4 properties:(id)arg5;
- (struct CGImage *)copyCGImageForKey:(id)arg1 resourceSize:(long long *)arg2 scale:(double *)arg3;
- (struct CGImage *)_copyCGImageForRow:(id)arg1 size:(struct CGSize *)arg2 resourceSize:(long long *)arg3 scale:(double *)arg4;
- (struct CGImage *)copyCGImageForKey:(id)arg1;
- (BOOL)_insertCGImage:(struct CGImage *)arg1 forKey:(id)arg2;
- (BOOL)insertCGImage:(struct CGImage *)arg1 forKey:(id)arg2;
- (BOOL)insertCGImage:(struct CGImage *)arg1 forKey:(id)arg2 mimeType:(id)arg3;
- (BOOL)insertCGImage:(struct CGImage *)arg1 forKey:(id)arg2 mimeType:(id)arg3 properties:(id)arg4;
- (BOOL)insertCGImage:(struct CGImage *)arg1 forKey:(id)arg2 mimeType:(id)arg3 scale:(double)arg4 properties:(id)arg5;
- (BOOL)_insertCGImage:(struct CGImage *)arg1 forKey:(id)arg2 mimeType:(id)arg3 scale:(double)arg4 properties:(id)arg5;
- (void)insertData:(id)arg1 forKey:(id)arg2 mimeType:(id)arg3;
- (BOOL)enableCaseSensitiveLike;
- (BOOL)_createStorageForDb:(id)arg1;
- (void)_createCacheTable:(id)arg1;
- (id)initWithPath:(id)arg1 maxSize:(unsigned long long)arg2;

@end

