//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

#import "CNContactPickerDelegate.h"
#import "CNPrivateContactPickerDelegate.h"
#import "GEOResourceManifestTileGroupObserver.h"
#import "MKMapViewDelegate.h"
#import "NSMenuDelegate.h"
#import "NSPopoverDelegate.h"
#import "NSSharingServiceDelegate.h"
#import "NSSharingServicePickerDelegate.h"
#import "NSTextFieldDelegate.h"
#import "NSWindowDelegate.h"
#import "NVAnnouncementViewDelegate.h"
#import "NVCoreLocationErrorPresenterDelegate.h"
#import "NVFlyoverTourButtonViewDelegate.h"
#import "NVQuickRouteButtonViewDelegate.h"
#import "NVSuggesterDelegate.h"

@class CNContactPicker, CNContactPickerSection, MKMapView, MapsActivity, NSArray, NSButton, NSDate, NSError, NSLayoutConstraint, NSMenu, NSMutableArray, NSMutableSet, NSOrderedSet, NSPopover, NSSegmentedControl, NSString, NVAnnouncementView, NVBookmarksViewController, NVFlyoverTourButtonViewController, NVMessageBezelView, NVPlace, NVPlaceCardController, NVQuickRouteButtonViewController, NVReportAProblemChooserWindowController, NVRoute, NVRouteManager, NVSearchController, NVSearchField, NVSearchManager, NVSearchQuery, NVSideViewController, NVToolbarItem, NVTopShadowView;

__attribute__((visibility("hidden")))
@interface NVMainWindowController : NSWindowController <MKMapViewDelegate, NSSharingServicePickerDelegate, NSSharingServiceDelegate, NSWindowDelegate, NSTextFieldDelegate, CNContactPickerDelegate, CNPrivateContactPickerDelegate, NSPopoverDelegate, NVCoreLocationErrorPresenterDelegate, GEOResourceManifestTileGroupObserver, NVQuickRouteButtonViewDelegate, NVFlyoverTourButtonViewDelegate, NVAnnouncementViewDelegate, NVSuggesterDelegate, NSMenuDelegate>
{
    MKMapView *mapView;
    NVSearchField *locationField;
    NSButton *shareButton;
    NSButton *bookmarksButton;
    NSSegmentedControl *mapTypeSegmentedControl;
    NSButton *userLocationButton;
    NVMessageBezelView *messageBezelView;
    NVSearchController *searchController;
    NSLayoutConstraint *bezelMessageViewTopConstraint;
    NVToolbarItem *_mapViewStyle;
    NVAnnouncementView *_announcementView;
    NSArray *_announcementViewConstraints;
    BOOL _showLabels;
    NVBookmarksViewController *bookmarksViewController;
    NVBookmarksViewController *recentsViewController;
    NVSearchManager *_searchManager;
    NVRouteManager *_routeManager;
    NVTopShadowView *_topShadowView;
    NSPopover *_currentPopover;
    NSMutableArray *_searchSuggestionResults;
    BOOL _needsToCenterOnUserLocationUpdate;
    BOOL _showLocationErrors;
    NSMenu *_contextualMenu;
    CNContactPickerSection *_recentsSection;
    CNContactPickerSection *_bookmarksSection;
    BOOL _bookmarksInUse;
    NSMutableArray *_postTileLoadingBlocks;
    BOOL _isRenderingMap;
    NVPlaceCardController *_infoCardController;
    NSString *_bezelMessage;
    NSError *_bezelError;
    BOOL _mapLoadedWithoutError;
    BOOL _searchFieldIsFirstReponder;
    double _detailCardClosedTimeIntervalSinceReferenceDate;
    NSDate *_dateSinceLastMapViewportChange;
    NSDate *_dateSinceMapWindowBecameKey;
    NVSearchQuery *_lastQuery;
    BOOL _displayingLocationErrorMessage;
    int _currentPickerMode;
    NVQuickRouteButtonViewController *_quickRouteButtonViewController;
    NVFlyoverTourButtonViewController *_flyoverTourButtonViewController;
    BOOL _flyoverTourRunning;
    NSString *_flyoverTourLabel;
    unsigned long long _flyoverTourStartMode;
    BOOL _showsCloseButtonInBezel;
    BOOL _dropsPinOnSearch;
    BOOL _sharing;
    NVPlace *_selectedPinPlace;
    NSOrderedSet *displayedPinPlaces;
    CNContactPicker *bookmarksPopoverController;
    NVSideViewController *sideViewController;
    NVPlace *_droppedPinPlace;
    NVReportAProblemChooserWindowController *_currentReportAProblemController;
    NSOrderedSet *_pinPlacesToPrint;
    NVPlace *_selectedSearchPlaceToAnimate;
    NSMutableSet *_activeTrackingAreas;
    NVRoute *_bezelMessageRoute;
    NSButton *_directionsToggleButton;
}

+ (id)keyPathsForValuesAffectingDisplayedPinsVisible;
+ (id)keyPathsForValuesAffectingSelectedPinVisible;
+ (id)keyPathsForValuesAffectingDroppedPinVisible;
+ (void)updateSearchQuerySubtitle:(id)arg1 syncedSearchQuery:(id)arg2 inRect:(CDStruct_90e2a262)arg3 center:(CDStruct_c3b9c2ee)arg4;
+ (id)_windowTitleFromMapItem:(id)arg1 visibleMapRect:(CDStruct_90e2a262)arg2;
+ (id)keyPathsForValuesAffectingIsMapViewCenteredOnUserLocation;
+ (id)keyPathsForValuesAffectingCanRemoveFromBookmarks;
+ (id)keyPathsForValuesAffectingCanAddToBookmarks;
+ (BOOL)supportsCustomLocation;
+ (id)keyPathsForValuesAffectingDirectionsViewVisible;
+ (id)keyPathsForValuesAffectingCanToggleTraffic;
+ (id)keyPathsForValuesAffectingCanResizeLabels;
+ (id)keyPathsForValuesAffectingCanLocalizeLabels;
+ (id)keyPathsForValuesAffectingUseLargeTextSize;
+ (id)keyPathsForValuesAffectingCanEnter3DMode;
+ (id)keyPathsForValuesAffectingCanSnapToNorth;
+ (id)keyPathsForValuesAffectingImageryEnabled;
@property(nonatomic) __weak NSButton *directionsToggleButton; // @synthesize directionsToggleButton=_directionsToggleButton;
@property(nonatomic) __weak NVRoute *bezelMessageRoute; // @synthesize bezelMessageRoute=_bezelMessageRoute;
@property(retain) NSMutableSet *activeTrackingAreas; // @synthesize activeTrackingAreas=_activeTrackingAreas;
@property(retain) NVPlace *selectedSearchPlaceToAnimate; // @synthesize selectedSearchPlaceToAnimate=_selectedSearchPlaceToAnimate;
@property __weak NVToolbarItem *mapViewStyle; // @synthesize mapViewStyle=_mapViewStyle;
@property(retain, nonatomic) NSOrderedSet *pinPlacesToPrint; // @synthesize pinPlacesToPrint=_pinPlacesToPrint;
@property(retain, nonatomic) NVReportAProblemChooserWindowController *currentReportAProblemController; // @synthesize currentReportAProblemController=_currentReportAProblemController;
@property(getter=isSharing) BOOL sharing; // @synthesize sharing=_sharing;
@property BOOL dropsPinOnSearch; // @synthesize dropsPinOnSearch=_dropsPinOnSearch;
@property(retain) NSDate *dateSinceMapWindowBecameKey; // @synthesize dateSinceMapWindowBecameKey=_dateSinceMapWindowBecameKey;
@property(retain) NSDate *dateSinceLastMapViewportChange; // @synthesize dateSinceLastMapViewportChange=_dateSinceLastMapViewportChange;
@property(retain) NVPlace *droppedPinPlace; // @synthesize droppedPinPlace=_droppedPinPlace;
@property(nonatomic) BOOL showsCloseButtonInBezel; // @synthesize showsCloseButtonInBezel=_showsCloseButtonInBezel;
@property(readonly, nonatomic) NVSearchField *locationField; // @synthesize locationField;
@property(retain, nonatomic) NSError *bezelError; // @synthesize bezelError=_bezelError;
@property(copy, nonatomic) NSString *bezelMessage; // @synthesize bezelMessage=_bezelMessage;
@property __weak NVSideViewController *sideViewController; // @synthesize sideViewController;
@property(readonly) NSButton *bookmarksButton; // @synthesize bookmarksButton;
@property(retain) CNContactPicker *bookmarksPopoverController; // @synthesize bookmarksPopoverController;
@property(copy) NSOrderedSet *displayedPinPlaces; // @synthesize displayedPinPlaces;
@property(readonly) MKMapView *mapView; // @synthesize mapView;
- (void).cxx_destruct;
- (void)updateFlyoverTourControlView;
- (void)endFlyoverTour:(id)arg1;
- (void)_stopFlyoverTourAnimation;
- (void)mapView:(id)arg1 flyoverTourLabelDidChange:(id)arg2;
- (void)mapView:(id)arg1 didStopFlyoverTourCompleted:(BOOL)arg2;
- (void)mapViewWillStartFlyoverTour:(id)arg1;
- (BOOL)ignoreRecentsSearchesForSuggester:(id)arg1;
- (id)additionalPlacesForSuggester:(id)arg1;
- (void)toggleScale:(id)arg1;
- (BOOL)showsScale;
- (void)_locationManagerApprovalDidChange:(id)arg1;
- (void)snapMapToNorth:(id)arg1;
- (void)centerMapToUserLocation;
- (BOOL)isCurrentLocationVisible;
- (BOOL)enableShowsUserLocationIfPossible;
@property(readonly, getter=areDisplayedPinsVisible) BOOL displayedPinsVisible;
@property(readonly, getter=isSelectedPinVisible) BOOL selectedPinVisible;
@property(readonly, getter=isDroppedPinVisible) BOOL droppedPinVisible;
- (BOOL)_isAnnotationVisible:(id)arg1;
- (void)toggleDropPin:(id)arg1;
- (void)deleteDroppedPin:(id)arg1;
- (void)announcementViewButtonWasClicked:(id)arg1;
- (void)_hideAnnouncementViewAnimated:(BOOL)arg1;
- (void)_presentAnnouncementViewAnimated:(BOOL)arg1;
- (void)_presentAnnouncementAnimated:(BOOL)arg1 withTitle:(id)arg2 button:(id)arg3 userInfo:(id)arg4;
- (void)presentFlyoverAnnouncement:(id)arg1;
- (id)_announcementViewConstraints;
- (id)_announcementView;
- (void)showRPFixDetailsForPlace:(id)arg1;
- (void)presentRPProblemResolution:(id)arg1;
- (void)printMap:(id)arg1;
- (void)printOrExport:(BOOL)arg1 optionalPath:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long printTypeForCurrentState;
- (void)updatePinPlacesToPrint;
- (void)newWindowAtCursorLocation;
- (void)getDirectionsToDroppedPin;
- (void)getDirectionsToCursorLocation;
- (void)dropPinAtCursorLocation;
- (id)_dropPinAtCursorLocationAnimated:(BOOL)arg1;
- (void)firePostTileLoadingBlocks;
- (void)schedulePostTileLoadingBlock:(CDUnknownBlockType)arg1;
- (struct CGRect)visibleBoundsForMapView:(id)arg1;
- (void)mapView:(id)arg1 annotationView:(id)arg2 didChangeDragState:(unsigned long long)arg3 fromOldState:(unsigned long long)arg4;
- (id)mapView:(id)arg1 menuForEvent:(id)arg2;
- (void)mapView:(id)arg1 longMouseDownPressedAtCoordinate:(CDStruct_c3b9c2ee)arg2;
- (void)coreLocationErrorPresenter:(id)arg1 failedRecoveringFromError:(id)arg2;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;
- (void)mapViewDidStopLocatingUser:(id)arg1;
- (void)mapViewWillStartLocatingUser:(id)arg1;
- (id)mapView:(id)arg1 rendererForOverlay:(id)arg2;
- (void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2;
- (void)mapView:(id)arg1 willSelectLabelMarker:(id)arg2;
- (id)_ratingViewWithPlace:(id)arg1;
- (id)_accessoryViewForPlace:(id)arg1;
- (BOOL)mapView:(id)arg1 shouldSelectAnnotation:(id)arg2;
- (BOOL)mapView:(id)arg1 shouldSelectLabelMarker:(id)arg2;
- (BOOL)detailInfoCardWasJustClosed;
- (void)mapView:(id)arg1 didDeselectAnnotationView:(id)arg2;
@property(retain) NVPlace *selectedPinPlace; // @synthesize selectedPinPlace=_selectedPinPlace;
- (void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2;
- (void)updateLeftCalloutAccessoryView;
- (void)mapView:(id)arg1 didAddAnnotationViews:(id)arg2;
- (void)_notePlaceChanged:(id)arg1;
- (void)flyoverTourButtonViewClicked:(id)arg1;
- (void)quickRouteButtonViewClicked:(id)arg1;
- (id)makeInfoButton;
- (id)makeFlyoverTourButton;
- (id)makeQuickRouteButtonWithPlace:(id)arg1;
- (void)_geocodeIfNecessary:(id)arg1;
- (id)mapView:(id)arg1 painterForVKOverlay:(id)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapViewDidChangeVisibleRegion:(id)arg1;
- (BOOL)mapView:(id)arg1 handleClickAtPoint:(struct CGPoint)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(BOOL)arg2;
- (void)requestDiscreteGraphicsTimeExtension;
- (void)mapView:(id)arg1 regionWillChangeAnimated:(BOOL)arg2;
- (void)mapViewDidFailLoadingMap:(id)arg1 withError:(id)arg2;
- (void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(BOOL)arg2;
- (void)mapViewWillStartRenderingMap:(id)arg1;
- (void)refreshWindowTitleAfterShortDelay;
- (id)bezelMessageForError:(id)arg1;
- (id)checkForInternetError:(id)arg1;
- (void)updateWindowTitle;
@property(readonly, nonatomic) NSString *fallbackWindowTitle;
- (void)sharingService:(id)arg1 didFailToShareItems:(id)arg2 error:(id)arg3;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (void)sharingService:(id)arg1 willShareItems:(id)arg2;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)mapViewSnapthotImageWithCompass:(BOOL)arg1 scale:(BOOL)arg2 zoomControls:(BOOL)arg3 sideView:(BOOL)arg4;
- (id)mapViewSnapthotImageWithCurrentlyVisibleControls;
- (id)mapViewSnapthotImageForSharing;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingService:(id)arg1 sharedItemsFromProposedItems:(id)arg2;
- (BOOL)isFullscreen;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (void)copyLink:(id)arg1;
- (void)copy:(id)arg1;
- (void)_copyMapSnapshot:(BOOL)arg1 link:(BOOL)arg2;
- (void)didEndReportAProblemSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)reportAProblemWithPlace:(id)arg1;
- (void)reportAProblem:(id)arg1;
- (void)centerOnUserLocation:(id)arg1;
- (BOOL)isMapViewCenteredOnUserLocation;
- (void)focusSearchField:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (id)infoCardController;
- (void)infoCardControllerDidClose:(id)arg1;
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)popoverDidShow:(id)arg1;
- (void)showTrafficIncident:(id)arg1;
- (void)showInfoCardForPlace:(id)arg1 annotationView:(id)arg2;
- (void)showInfoCard:(id)arg1;
- (void)showLocations:(id)arg1;
- (void)contactPickerDidClose:(id)arg1;
- (void)contactPicker:(id)arg1 didShowSectionWithIdentifier:(id)arg2;
- (void)contactPicker:(id)arg1 didSearchForString:(id)arg2;
- (void)contactPicker:(id)arg1 didChooseContact:(id)arg2 key:(id)arg3 value:(id)arg4;
- (void)dropPin:(id)arg1;
- (void)share:(id)arg1;
- (id)configuredSharingController;
- (void)selectedRouteChanged;
- (void)toggleTraffic:(id)arg1;
- (void)toggleDirections:(id)arg1;
- (void)updateToggleDirectionsStateIfNecessary;
- (void)mapModeChanged:(id)arg1;
- (void)mapStyleChanged:(id)arg1;
- (void)closeBezelMessage:(id)arg1;
- (void)flashBezelMessage:(id)arg1 duration:(double)arg2;
- (void)setBezelMessage:(id)arg1 error:(id)arg2 showsCloseButton:(BOOL)arg3 width:(double)arg4 textAlignment:(unsigned long long)arg5;
- (void)setBezelMessage:(id)arg1 error:(id)arg2 showsCloseButton:(BOOL)arg3;
- (void)updateRouteBezelIfNecessary;
- (void)setBezelMessageForCurrentRoute:(id)arg1 error:(id)arg2 showsCloseButton:(BOOL)arg3;
- (void)removeFromBookmarks:(id)arg1;
- (void)addToBookmarks:(id)arg1;
- (BOOL)canRemoveFromBookmarks;
- (BOOL)canAddToBookmarks;
- (id)sharedBookmarksManager;
- (void)showFlyoverTourForSearchResult:(id)arg1;
- (void)launchFlyoverPreview:(id)arg1;
- (void)showContact:(id)arg1 address:(id)arg2;
- (void)showPlaceOrTrip:(id)arg1;
- (void)showPlaces:(id)arg1 animated:(BOOL)arg2 allowToChangeRegion:(BOOL)arg3 removeOtherPlaceAnnotations:(BOOL)arg4 selectAnnotation:(BOOL)arg5 completion:(CDUnknownBlockType)arg6;
- (void)showPlaces:(id)arg1 animated:(BOOL)arg2 allowToChangeRegion:(BOOL)arg3 defaultMapRect:(CDStruct_90e2a262)arg4 removeOtherPlaceAnnotations:(BOOL)arg5 selectAnnotation:(BOOL)arg6 ignoreSearchField:(BOOL)arg7 completion:(CDUnknownBlockType)arg8;
- (void)showPlaces:(id)arg1 animated:(BOOL)arg2 allowToChangeRegion:(BOOL)arg3 removeOtherPlaceAnnotations:(BOOL)arg4 selectAnnotation:(BOOL)arg5 ignoreSearchField:(BOOL)arg6 completion:(CDUnknownBlockType)arg7;
- (void)showPlace:(id)arg1 animated:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)changeRegionToDisplayResultsInMapRect:(CDStruct_90e2a262)arg1 adjustRegion:(BOOL)arg2 avoidChangingRegion:(BOOL)arg3 animated:(BOOL)arg4 completion:(CDUnknownBlockType)arg5;
- (BOOL)visibleMapRectIsSuitableForMapRect:(CDStruct_90e2a262)arg1;
- (void)displaySearchPlaces:(id)arg1 searchQuery:(id)arg2 warnIfNone:(BOOL)arg3;
- (void)removeDroppedPinPlace;
- (void)clearDroppedPinPlace;
- (void)addDroppedPinPlace:(id)arg1 animated:(BOOL)arg2 selectAnnotation:(BOOL)arg3;
- (void)_searchString:(id)arg1 completion:(id)arg2 query:(id)arg3 animated:(BOOL)arg4 source:(int)arg5;
- (void)startSearchForQuery:(id)arg1 animated:(BOOL)arg2 source:(int)arg3;
- (void)startSearchForString:(id)arg1 animated:(BOOL)arg2 source:(int)arg3;
- (void)clearSearchResultsAndDirections;
- (void)clearRoutes;
- (void)clearSearchResultsAndDirectionsKeepingSearchField:(BOOL)arg1;
- (CDStruct_90e2a262)searchMapRect;
- (void)_updateEdgeInsets;
@property(readonly) NVRouteManager *routeManager;
- (id)searchManager;
- (BOOL)dropTargetSearchField:(id)arg1 performDragOperation:(id)arg2;
- (id)acceptedDraggedElementUTIsForDropTargetSearchField:(id)arg1;
- (void)locationChanged:(id)arg1;
- (BOOL)location:(id)arg1 isNearDestination:(id)arg2;
- (void)showDirectionsFromString:(id)arg1 toString:(id)arg2 directionMode:(unsigned long long)arg3 fromURL:(BOOL)arg4;
- (void)showDirectionsFrom:(id)arg1 to:(id)arg2 directionMode:(unsigned long long)arg3 cleanupSearchResults:(BOOL)arg4;
- (void)showDirectionsTo:(id)arg1 directionMode:(unsigned long long)arg2 cleanupSearchResults:(BOOL)arg3;
- (void)showDirectionsFrom:(id)arg1 directionMode:(unsigned long long)arg2 cleanupSearchResults:(BOOL)arg3;
- (id)relevantOriginForRouteWithDestination:(id)arg1;
@property(readonly, getter=isDirectionsViewVisible) BOOL directionsViewVisible;
- (BOOL)launchWithOptions:(id)arg1;
- (BOOL)launchIntoSearchWithMapItems:(id)arg1 options:(id)arg2;
- (BOOL)launchIntoDirectionsWithMapItems:(id)arg1 options:(id)arg2;
- (BOOL)launchIntoRAPForMapItem:(id)arg1 options:(id)arg2;
- (CDStruct_90e2a262)mapRectForLaunchOptions:(id)arg1 places:(id)arg2;
- (void)changeViewPortWithLaunchOptions:(id)arg1 places:(id)arg2;
- (CDStruct_90e2a262)regionForCoordinate:(CDStruct_c3b9c2ee)arg1;
- (BOOL)openMapsURL:(id)arg1;
- (id)makeSearchContextForSource:(int)arg1;
- (id)makeSearchContextForSource:(int)arg1 field:(id)arg2;
- (id)makeSearchContextForMapRect:(CDStruct_90e2a262)arg1 source:(int)arg2 field:(id)arg3;
- (id)_escapedString:(id)arg1;
- (BOOL)handleURLWithMapItems:(id)arg1 options:(id)arg2;
- (BOOL)openURL:(id)arg1;
@property(readonly) BOOL canToggleTraffic;
@property(readonly) BOOL canResizeLabels;
@property(readonly) BOOL canLocalizeLabels;
- (BOOL)localizeLabels;
- (void)setLocalizeLabels:(BOOL)arg1;
@property BOOL useLargeTextSize;
@property long long labelTextSize;
@property BOOL mode3D;
- (void)toggle3DMode:(id)arg1;
@property(readonly) BOOL canEnter3DMode;
@property(readonly) BOOL canSnapToNorth;
- (void)toggleLabels:(id)arg1;
- (struct CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2;
- (void)updateSettingsView;
- (id)settingsMenu;
@property BOOL showLabels;
@property BOOL imageryEnabled;
@property unsigned long long mapType;
- (unsigned long long)_directionsTransportTypeForMode:(unsigned long long)arg1;
- (void)invalidateRestorableStateAndActivityState;
- (void)setMapsActivity:(id)arg1 assumedSourceFidelity:(unsigned long long)arg2;
@property(retain, nonatomic) MapsActivity *mapsActivity;
- (id)mapsActivityWithFidelity:(unsigned long long)arg1;
- (void)restoreUserActivityState:(id)arg1;
- (void)updateUserActivityState:(id)arg1;
- (void)unsafeRestoreStateWithCoder:(id)arg1;
- (void)restoreStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)dealloc;
- (void)selectSelectedSearchPlaceNow;
- (void)updateRouteIfNecessary:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)restoreLastViewOptions;
- (void)saveLastViewOptions;
- (void)restoreLastViewport;
- (void)saveLastViewport;
- (void)windowWillClose:(id)arg1;
- (void)updateToolbarVisibility;
- (void)updateLocationButtonState;
- (void)windowDidBecomeKey:(id)arg1;
- (double)toolbarHeight;
- (void)_updateCurrentEnvironmentName;
- (void)resourceManifestManager:(id)arg1 didChangeActiveTileGroup:(id)arg2 fromOldTileGroup:(id)arg3;
- (void)awakeFromNib;
- (void)windowDidLoad;
- (id)initWithWindow:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

